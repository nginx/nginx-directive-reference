{
  "modules": [
    {
      "id": "/en/docs/http/ngx_http_access_module.html",
      "name": "ngx_http_access_module",
      "directives": [
        {
          "name": "allow",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location",
            "limit_except"
          ],
          "syntax": [
            "*`address`* | *`CIDR`* | `unix:` | `all`"
          ],
          "isBlock": false,
          "description_md": "Allows access for the specified network or address.\nIf the special value `unix:` is specified (1.5.1),\nallows access for all UNIX-domain sockets.",
          "description_html": "\u003cp\u003eAllows access for the specified network or address.\nIf the special value \u003ccode\u003eunix:\u003c/code\u003e is specified (1.5.1),\nallows access for all UNIX-domain sockets.\u003c/p\u003e\n"
        },
        {
          "name": "deny",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location",
            "limit_except"
          ],
          "syntax": [
            "*`address`* | *`CIDR`* | `unix:` | `all`"
          ],
          "isBlock": false,
          "description_md": "Denies access for the specified network or address.\nIf the special value `unix:` is specified (1.5.1),\ndenies access for all UNIX-domain sockets.",
          "description_html": "\u003cp\u003eDenies access for the specified network or address.\nIf the special value \u003ccode\u003eunix:\u003c/code\u003e is specified (1.5.1),\ndenies access for all UNIX-domain sockets.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_addition_module.html",
      "name": "ngx_http_addition_module",
      "directives": [
        {
          "name": "add_before_body",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`uri`*"
          ],
          "isBlock": false,
          "description_md": "Adds the text returned as a result of processing a given subrequest\nbefore the response body.\nAn empty string (`\"\"`) as a parameter cancels addition\ninherited from the previous configuration level.",
          "description_html": "\u003cp\u003eAdds the text returned as a result of processing a given subrequest\nbefore the response body.\nAn empty string (\u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e) as a parameter cancels addition\ninherited from the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "add_after_body",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`uri`*"
          ],
          "isBlock": false,
          "description_md": "Adds the text returned as a result of processing a given subrequest\nafter the response body.\nAn empty string (`\"\"`) as a parameter cancels addition\ninherited from the previous configuration level.",
          "description_html": "\u003cp\u003eAdds the text returned as a result of processing a given subrequest\nafter the response body.\nAn empty string (\u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e) as a parameter cancels addition\ninherited from the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "addition_types",
          "default": "text/html",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`mime-type`* ..."
          ],
          "isBlock": false,
          "description_md": "Allows adding text in responses with the specified MIME types,\nin addition to “`text/html`”.\nThe special value “`*`” matches any MIME type (0.8.29).",
          "description_html": "\u003cp\u003eAllows adding text in responses with the specified MIME types,\nin addition to “\u003ccode\u003etext/html\u003c/code\u003e”.\nThe special value “\u003ccode\u003e*\u003c/code\u003e” matches any MIME type (0.8.29).\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_api_module.html",
      "name": "ngx_http_api_module",
      "directives": [
        {
          "name": "api",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            "[`write`=`on`|`off`]"
          ],
          "isBlock": false,
          "description_md": "Turns on the REST API interface in the surrounding location.\nAccess to this location should be\n[limited](https://nginx.org/en/docs/http/ngx_http_core_module.html#satisfy).\n\nThe `write` parameter determines whether the API\nis read-only or read-write.\nBy default, the API is read-only.\n\nAll API requests should contain a supported API version in the URI.\nIf the request URI equals the location prefix,\nthe list of supported API versions is returned.\nThe current API version is “`9`”.\n\nThe optional “`fields`” argument in the request line\nspecifies which fields of the requested objects will be output:\n```\nhttp://127.0.0.1/api/9/nginx?fields=version,build\n```",
          "description_html": "\u003cp\u003eTurns on the REST API interface in the surrounding location.\nAccess to this location should be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#satisfy\" target=\"_blank\"\u003elimited\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ewrite\u003c/code\u003e parameter determines whether the API\nis read-only or read-write.\nBy default, the API is read-only.\u003c/p\u003e\n\n\u003cp\u003eAll API requests should contain a supported API version in the URI.\nIf the request URI equals the location prefix,\nthe list of supported API versions is returned.\nThe current API version is “\u003ccode\u003e9\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eThe optional “\u003ccode\u003efields\u003c/code\u003e” argument in the request line\nspecifies which fields of the requested objects will be output:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/api/9/nginx?fields=version,build\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "status_zone",
          "default": "",
          "contexts": [
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "*`zone`*"
          ],
          "isBlock": false,
          "description_md": "Enables collection of virtual\n[http](https://nginx.org/en/docs/http/ngx_http_core_module.html#server)\nor\n[stream](https://nginx.org/en/docs/stream/ngx_stream_core_module.html#server)\nserver status information in the specified *`zone`*.\nSeveral servers may share the same zone.\n\nStarting from 1.17.0, status information can be collected\nper [`location`](https://nginx.org/en/docs/http/ngx_http_core_module.html#location).\nThe special value `off` disables statistics collection\nin nested location blocks.\nNote that the statistics is collected\nin the context of a location where processing ends.\nIt may be different from the original location, if an\n[internal redirect](https://nginx.org/en/docs/http/ngx_http_core_module.html#internal) happens during request processing.",
          "description_html": "\u003cp\u003eEnables collection of virtual\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#server\" target=\"_blank\"\u003estream\u003c/a\u003e\nserver status information in the specified \u003cem\u003e\u003ccode\u003ezone\u003c/code\u003e\u003c/em\u003e.\nSeveral servers may share the same zone.\u003c/p\u003e\n\n\u003cp\u003eStarting from 1.17.0, status information can be collected\nper \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#location\" target=\"_blank\"\u003e\u003ccode\u003elocation\u003c/code\u003e\u003c/a\u003e.\nThe special value \u003ccode\u003eoff\u003c/code\u003e disables statistics collection\nin nested location blocks.\nNote that the statistics is collected\nin the context of a location where processing ends.\nIt may be different from the original location, if an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#internal\" target=\"_blank\"\u003einternal redirect\u003c/a\u003e happens during request processing.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_auth_basic_module.html",
      "name": "ngx_http_auth_basic_module",
      "directives": [
        {
          "name": "auth_basic",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location",
            "limit_except"
          ],
          "syntax": [
            "*`string`* | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables validation of user name and password using the\n“HTTP Basic Authentication” protocol.\nThe specified parameter is used as a *`realm`*.\nParameter value can contain variables (1.3.10, 1.2.7).\nThe special value `off` cancels the effect\nof the `auth_basic` directive\ninherited from the previous configuration level.",
          "description_html": "\u003cp\u003eEnables validation of user name and password using the\n“HTTP Basic Authentication” protocol.\nThe specified parameter is used as a \u003cem\u003e\u003ccode\u003erealm\u003c/code\u003e\u003c/em\u003e.\nParameter value can contain variables (1.3.10, 1.2.7).\nThe special value \u003ccode\u003eoff\u003c/code\u003e cancels the effect\nof the \u003ccode\u003eauth_basic\u003c/code\u003e directive\ninherited from the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "auth_basic_user_file",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location",
            "limit_except"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a file that keeps user names and passwords,\nin the following format:\n```\n# comment\nname1:password1\nname2:password2:comment\nname3:password3\n```\nThe *`file`* name can contain variables.\n\nThe following password types are supported:\n- encrypted with the `crypt()` function; can be generated using\n    the “`htpasswd`” utility from the Apache HTTP Server\n    distribution or the “`openssl passwd`” command;\n- hashed with the Apache variant of the MD5-based password algorithm (apr1);\n    can be generated with the same tools;\n- specified by the\n    “`{`*`scheme`*`}`*`data`*”\n    syntax (1.0.3+) as described in\n    [RFC 2307](https://datatracker.ietf.org/doc/html/rfc2307#section-5.3);\n    currently implemented schemes include `PLAIN` (an example one,\n    should not be used), `SHA` (1.3.13) (plain SHA-1\n    hashing, should not be used) and `SSHA` (salted SHA-1 hashing,\n    used by some software packages, notably OpenLDAP and Dovecot).\n    \u003e Support for `SHA` scheme was added only to aid\n    \u003e in migration from other web servers.\n    \u003e It should not be used for new passwords, since unsalted SHA-1 hashing\n    \u003e that it employs is vulnerable to\n    \u003e [rainbow table](http://en.wikipedia.org/wiki/Rainbow_attack)\n    \u003e attacks.",
          "description_html": "\u003cp\u003eSpecifies a file that keeps user names and passwords,\nin the following format:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e# comment\nname1:password1\nname2:password2:comment\nname3:password3\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name can contain variables.\u003c/p\u003e\n\n\u003cp\u003eThe following password types are supported:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eencrypted with the \u003ccode\u003ecrypt()\u003c/code\u003e function; can be generated using\nthe “\u003ccode\u003ehtpasswd\u003c/code\u003e” utility from the Apache HTTP Server\ndistribution or the “\u003ccode\u003eopenssl passwd\u003c/code\u003e” command;\u003c/li\u003e\n\u003cli\u003ehashed with the Apache variant of the MD5-based password algorithm (apr1);\ncan be generated with the same tools;\u003c/li\u003e\n\u003cli\u003especified by the\n“\u003ccode\u003e{\u003c/code\u003e\u003cem\u003e\u003ccode\u003escheme\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e}\u003c/code\u003e*\u003ccode\u003edata\u003c/code\u003e*”\nsyntax (1.0.3+) as described in\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2307#section-5.3\" target=\"_blank\"\u003eRFC 2307\u003c/a\u003e;\ncurrently implemented schemes include \u003ccode\u003ePLAIN\u003c/code\u003e (an example one,\nshould not be used), \u003ccode\u003eSHA\u003c/code\u003e (1.3.13) (plain SHA-1\nhashing, should not be used) and \u003ccode\u003eSSHA\u003c/code\u003e (salted SHA-1 hashing,\nused by some software packages, notably OpenLDAP and Dovecot).\n\u0026gt; Support for \u003ccode\u003eSHA\u003c/code\u003e scheme was added only to aid\n\u0026gt; in migration from other web servers.\n\u0026gt; It should not be used for new passwords, since unsalted SHA-1 hashing\n\u0026gt; that it employs is vulnerable to\n\u0026gt; \u003ca href=\"http://en.wikipedia.org/wiki/Rainbow_attack\" target=\"_blank\"\u003erainbow table\u003c/a\u003e\n\u0026gt; attacks.\u003c/li\u003e\n\u003c/ul\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_auth_jwt_module.html",
      "name": "ngx_http_auth_jwt_module",
      "directives": [
        {
          "name": "auth_jwt",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location",
            "limit_except"
          ],
          "syntax": [
            "*`string`* [`token=`*`$variable`*] | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables validation of JSON Web Token.\nThe specified *`string`* is used as a `realm`.\nParameter value can contain variables.\n\nThe optional `token` parameter specifies a variable\nthat contains JSON Web Token.\nBy default, JWT is passed in the \"Authorization\" header\nas a\n[Bearer Token](https://datatracker.ietf.org/doc/html/rfc6750).\nJWT may be also passed as a cookie or a part of a query string:\n```\nauth_jwt \"closed site\" token=$cookie_auth_token;\n```\n\nThe special value `off` cancels the effect\nof the `auth_jwt` directive\ninherited from the previous configuration level.",
          "description_html": "\u003cp\u003eEnables validation of JSON Web Token.\nThe specified \u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e is used as a \u003ccode\u003erealm\u003c/code\u003e.\nParameter value can contain variables.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003etoken\u003c/code\u003e parameter specifies a variable\nthat contains JSON Web Token.\nBy default, JWT is passed in the \u0026ldquo;Authorization\u0026rdquo; header\nas a\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc6750\" target=\"_blank\"\u003eBearer Token\u003c/a\u003e.\nJWT may be also passed as a cookie or a part of a query string:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eauth_jwt \u0026quot;closed site\u0026quot; token=$cookie_auth_token;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe special value \u003ccode\u003eoff\u003c/code\u003e cancels the effect\nof the \u003ccode\u003eauth_jwt\u003c/code\u003e directive\ninherited from the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "auth_jwt_claim_set",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`$variable`* *`name`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets the *`variable`* to a JWT claim parameter\nidentified by key names.\nName matching starts from the top level of the JSON tree.\nFor arrays, the variable keeps a list of array elements separated by commas.\n```\nauth_jwt_claim_set $email info e-mail;\nauth_jwt_claim_set $job info \"job title\";\n```\n\u003e Prior to version 1.13.7, only one key name could be specified,\n\u003e and the result was undefined for arrays.\n\n\u003e Variable values for tokens encrypted with JWE\n\u003e are available only after decryption which occurs during the\n\u003e [Access](https://nginx.org/en/docs/dev/development_guide.html#http_phases) phase.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003evariable\u003c/code\u003e\u003c/em\u003e to a JWT claim parameter\nidentified by key names.\nName matching starts from the top level of the JSON tree.\nFor arrays, the variable keeps a list of array elements separated by commas.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eauth_jwt_claim_set $email info e-mail;\nauth_jwt_claim_set $job info \u0026quot;job title\u0026quot;;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.13.7, only one key name could be specified,\nand the result was undefined for arrays.\u003c/p\u003e\n\n\u003cp\u003eVariable values for tokens encrypted with JWE\nare available only after decryption which occurs during the\n\u003ca href=\"https://nginx.org/en/docs/dev/development_guide.html#http_phases\" target=\"_blank\"\u003eAccess\u003c/a\u003e phase.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "auth_jwt_header_set",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`$variable`* *`name`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets the *`variable`* to a JOSE header parameter\nidentified by key names.\nName matching starts from the top level of the JSON tree.\nFor arrays, the variable keeps a list of array elements separated by commas.\n\u003e Prior to version 1.13.7, only one key name could be specified,\n\u003e and the result was undefined for arrays.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003evariable\u003c/code\u003e\u003c/em\u003e to a JOSE header parameter\nidentified by key names.\nName matching starts from the top level of the JSON tree.\nFor arrays, the variable keeps a list of array elements separated by commas.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.13.7, only one key name could be specified,\nand the result was undefined for arrays.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "auth_jwt_key_cache",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Enables or disables caching of keys\nobtained from a [file](https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html#auth_jwt_key_file)\nor from a [subrequest](https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html#auth_jwt_key_request),\nand sets caching time for them.\nCaching of keys obtained from variables is not supported.\nBy default, caching of keys is disabled.",
          "description_html": "\u003cp\u003eEnables or disables caching of keys\nobtained from a \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html#auth_jwt_key_file\" target=\"_blank\"\u003efile\u003c/a\u003e\nor from a \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html#auth_jwt_key_request\" target=\"_blank\"\u003esubrequest\u003c/a\u003e,\nand sets caching time for them.\nCaching of keys obtained from variables is not supported.\nBy default, caching of keys is disabled.\u003c/p\u003e\n"
        },
        {
          "name": "auth_jwt_key_file",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location",
            "limit_except"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* in\n[JSON Web Key Set](https://datatracker.ietf.org/doc/html/rfc7517#section-5)\nformat for validating JWT signature.\nParameter value can contain variables.\n\nSeveral `auth_jwt_key_file` directives\ncan be specified on the same level (1.21.1):\n```\nauth_jwt_key_file conf/keys.json;\nauth_jwt_key_file conf/key.jwk;\n```\nIf at least one of the specified keys cannot be loaded or processed,\nnginx will return the\n500 (Internal Server Error) error.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e in\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7517#section-5\" target=\"_blank\"\u003eJSON Web Key Set\u003c/a\u003e\nformat for validating JWT signature.\nParameter value can contain variables.\u003c/p\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003eauth_jwt_key_file\u003c/code\u003e directives\ncan be specified on the same level (1.21.1):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eauth_jwt_key_file conf/keys.json;\nauth_jwt_key_file conf/key.jwk;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf at least one of the specified keys cannot be loaded or processed,\nnginx will return the\n500 (Internal Server Error) error.\u003c/p\u003e\n"
        },
        {
          "name": "auth_jwt_key_request",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location",
            "limit_except"
          ],
          "syntax": [
            "*`uri`*"
          ],
          "isBlock": false,
          "description_md": "Allows retrieving a\n[JSON Web Key Set](https://datatracker.ietf.org/doc/html/rfc7517#section-5)\nfile from a subrequest for validating JWT signature and\nsets the URI where the subrequest will be sent to.\nParameter value can contain variables.\nTo avoid validation overhead,\nit is recommended to cache the key file:\n```\nproxy_cache_path /data/nginx/cache levels=1 keys_zone=foo:10m;\n\nserver {\n    ...\n\n    location / {\n        auth_jwt             \"closed site\";\n        auth_jwt_key_request /jwks_uri;\n    }\n\n    location = /jwks_uri {\n        internal;\n        proxy_cache foo;\n        proxy_pass  http://idp.example.com/keys;\n    }\n}\n```\nSeveral `auth_jwt_key_request` directives\ncan be specified on the same level (1.21.1):\n```\nauth_jwt_key_request /jwks_uri;\nauth_jwt_key_request /jwks2_uri;\n```\nIf at least one of the specified keys cannot be loaded or processed,\nnginx will return the\n500 (Internal Server Error) error.",
          "description_html": "\u003cp\u003eAllows retrieving a\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7517#section-5\" target=\"_blank\"\u003eJSON Web Key Set\u003c/a\u003e\nfile from a subrequest for validating JWT signature and\nsets the URI where the subrequest will be sent to.\nParameter value can contain variables.\nTo avoid validation overhead,\nit is recommended to cache the key file:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cache_path /data/nginx/cache levels=1 keys_zone=foo:10m;\n\nserver {\n    ...\n\n    location / {\n        auth_jwt             \u0026quot;closed site\u0026quot;;\n        auth_jwt_key_request /jwks_uri;\n    }\n\n    location = /jwks_uri {\n        internal;\n        proxy_cache foo;\n        proxy_pass  http://idp.example.com/keys;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003eauth_jwt_key_request\u003c/code\u003e directives\ncan be specified on the same level (1.21.1):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eauth_jwt_key_request /jwks_uri;\nauth_jwt_key_request /jwks2_uri;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf at least one of the specified keys cannot be loaded or processed,\nnginx will return the\n500 (Internal Server Error) error.\u003c/p\u003e\n"
        },
        {
          "name": "auth_jwt_leeway",
          "default": "0s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum allowable leeway to compensate\nclock skew when verifying the\n[exp](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.4)\nand\n[nbf](https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.5)\nJWT claims.",
          "description_html": "\u003cp\u003eSets the maximum allowable leeway to compensate\nclock skew when verifying the\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.4\" target=\"_blank\"\u003eexp\u003c/a\u003e\nand\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7519#section-4.1.5\" target=\"_blank\"\u003enbf\u003c/a\u003e\nJWT claims.\u003c/p\u003e\n"
        },
        {
          "name": "auth_jwt_type",
          "default": "signed",
          "contexts": [
            "http",
            "server",
            "location",
            "limit_except"
          ],
          "syntax": [
            "*`signed`* | *`encrypted`* | *`nested`*"
          ],
          "isBlock": false,
          "description_md": "Specifies which type of JSON Web Token to expect:\nJWS (`signed`),\nJWE (`encrypted`),\nor signed and then encrypted\nNested JWT (`nested`) (1.21.0).",
          "description_html": "\u003cp\u003eSpecifies which type of JSON Web Token to expect:\nJWS (\u003ccode\u003esigned\u003c/code\u003e),\nJWE (\u003ccode\u003eencrypted\u003c/code\u003e),\nor signed and then encrypted\nNested JWT (\u003ccode\u003enested\u003c/code\u003e) (1.21.0).\u003c/p\u003e\n"
        },
        {
          "name": "auth_jwt_require",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location",
            "limit_except"
          ],
          "syntax": [
            "*`$value`* ... [`error`=`401` | `403`]"
          ],
          "isBlock": false,
          "description_md": "Specifies additional checks for JWT validation.\nThe value can contain text, variables, and their combination,\nand must start with a variable (1.21.7).\nThe authentication will succeed only\nif all the values are not empty and are not equal to “0”.\n```\nmap $jwt_claim_iss $valid_jwt_iss {\n    \"good\" 1;\n}\n...\n\nauth_jwt_require $valid_jwt_iss;\n```\n\nIf any of the checks fails,\nthe `401` error code is returned.\nThe optional `error` parameter (1.21.7)\nallows redefining the error code to `403`.",
          "description_html": "\u003cp\u003eSpecifies additional checks for JWT validation.\nThe value can contain text, variables, and their combination,\nand must start with a variable (1.21.7).\nThe authentication will succeed only\nif all the values are not empty and are not equal to “0”.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003emap $jwt_claim_iss $valid_jwt_iss {\n    \u0026quot;good\u0026quot; 1;\n}\n...\n\nauth_jwt_require $valid_jwt_iss;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf any of the checks fails,\nthe \u003ccode\u003e401\u003c/code\u003e error code is returned.\nThe optional \u003ccode\u003eerror\u003c/code\u003e parameter (1.21.7)\nallows redefining the error code to \u003ccode\u003e403\u003c/code\u003e.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_auth_request_module.html",
      "name": "ngx_http_auth_request_module",
      "directives": [
        {
          "name": "auth_request",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`uri`* | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables authorization based on the result of a subrequest and sets\nthe URI to which the subrequest will be sent.",
          "description_html": "\u003cp\u003eEnables authorization based on the result of a subrequest and sets\nthe URI to which the subrequest will be sent.\u003c/p\u003e\n"
        },
        {
          "name": "auth_request_set",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`$variable`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets the request *`variable`* to the given\n*`value`* after the authorization request completes.\nThe value may contain variables from the authorization request,\nsuch as `$upstream_http_*`.",
          "description_html": "\u003cp\u003eSets the request \u003cem\u003e\u003ccode\u003evariable\u003c/code\u003e\u003c/em\u003e to the given\n\u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e after the authorization request completes.\nThe value may contain variables from the authorization request,\nsuch as \u003ccode\u003e$upstream_http_*\u003c/code\u003e.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_autoindex_module.html",
      "name": "ngx_http_autoindex_module",
      "directives": [
        {
          "name": "autoindex",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the directory listing output.",
          "description_html": "\u003cp\u003eEnables or disables the directory listing output.\u003c/p\u003e\n"
        },
        {
          "name": "autoindex_exact_size",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "For the HTML [format](https://nginx.org/en/docs/http/ngx_http_autoindex_module.html#autoindex_format),\nspecifies whether exact file sizes should be output in the directory listing,\nor rather rounded to kilobytes, megabytes, and gigabytes.",
          "description_html": "\u003cp\u003eFor the HTML \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_autoindex_module.html#autoindex_format\" target=\"_blank\"\u003eformat\u003c/a\u003e,\nspecifies whether exact file sizes should be output in the directory listing,\nor rather rounded to kilobytes, megabytes, and gigabytes.\u003c/p\u003e\n"
        },
        {
          "name": "autoindex_format",
          "default": "html",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`html` | `xml` | `json` | `jsonp`"
          ],
          "isBlock": false,
          "description_md": "Sets the format of a directory listing.\n\nWhen the JSONP format is used, the name of a callback function is set\nwith the `callback` request argument.\nIf the argument is missing or has an empty value,\nthen the JSON format is used.\n\nThe XML output can be transformed using the\n[ngx_http_xslt_module](https://nginx.org/en/docs/http/ngx_http_xslt_module.html) module.",
          "description_html": "\u003cp\u003eSets the format of a directory listing.\u003c/p\u003e\n\n\u003cp\u003eWhen the JSONP format is used, the name of a callback function is set\nwith the \u003ccode\u003ecallback\u003c/code\u003e request argument.\nIf the argument is missing or has an empty value,\nthen the JSON format is used.\u003c/p\u003e\n\n\u003cp\u003eThe XML output can be transformed using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_xslt_module.html\" target=\"_blank\"\u003engx_http_xslt_module\u003c/a\u003e module.\u003c/p\u003e\n"
        },
        {
          "name": "autoindex_localtime",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "For the HTML [format](https://nginx.org/en/docs/http/ngx_http_autoindex_module.html#autoindex_format),\nspecifies whether times in the directory listing should be\noutput in the local time zone or UTC.",
          "description_html": "\u003cp\u003eFor the HTML \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_autoindex_module.html#autoindex_format\" target=\"_blank\"\u003eformat\u003c/a\u003e,\nspecifies whether times in the directory listing should be\noutput in the local time zone or UTC.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_browser_module.html",
      "name": "ngx_http_browser_module",
      "directives": [
        {
          "name": "ancient_browser",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* ..."
          ],
          "isBlock": false,
          "description_md": "If any of the specified substrings is found in the \"User-Agent\"\nrequest header field, the browser will be considered ancient.\nThe special string “`netscape4`” corresponds to the\nregular expression “`^Mozilla/[1-4]`”.",
          "description_html": "\u003cp\u003eIf any of the specified substrings is found in the \u0026ldquo;User-Agent\u0026rdquo;\nrequest header field, the browser will be considered ancient.\nThe special string “\u003ccode\u003enetscape4\u003c/code\u003e” corresponds to the\nregular expression “\u003ccode\u003e^Mozilla/[1-4]\u003c/code\u003e”.\u003c/p\u003e\n"
        },
        {
          "name": "ancient_browser_value",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`*"
          ],
          "isBlock": false,
          "description_md": "Sets a value for the `$ancient_browser` variables.",
          "description_html": "\u003cp\u003eSets a value for the \u003ccode\u003e$ancient_browser\u003c/code\u003e variables.\u003c/p\u003e\n"
        },
        {
          "name": "modern_browser",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`browser`* *`version`*",
            "`unlisted`"
          ],
          "isBlock": false,
          "description_md": "Specifies a version starting from which a browser is considered modern.\nA browser can be any one of the following: `msie`,\n`gecko` (browsers based on Mozilla),\n`opera`, `safari`,\nor `konqueror`.\n\nVersions can be specified in the following formats: X, X.X, X.X.X, or X.X.X.X.\nThe maximum values for each of the format are\n4000, 4000.99, 4000.99.99, and 4000.99.99.99, respectively.\n\nThe special value `unlisted` specifies to consider\na browser as modern if it was not listed by the\n`modern_browser` and [`ancient_browser`](https://nginx.org/en/docs/http/ngx_http_browser_module.html#ancient_browser)\ndirectives.\nOtherwise such a browser is considered ancient.\nIf a request does not provide the \"User-Agent\" field\nin the header, the browser is treated as not being listed.",
          "description_html": "\u003cp\u003eSpecifies a version starting from which a browser is considered modern.\nA browser can be any one of the following: \u003ccode\u003emsie\u003c/code\u003e,\n\u003ccode\u003egecko\u003c/code\u003e (browsers based on Mozilla),\n\u003ccode\u003eopera\u003c/code\u003e, \u003ccode\u003esafari\u003c/code\u003e,\nor \u003ccode\u003ekonqueror\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eVersions can be specified in the following formats: X, X.X, X.X.X, or X.X.X.X.\nThe maximum values for each of the format are\n4000, 4000.99, 4000.99.99, and 4000.99.99.99, respectively.\u003c/p\u003e\n\n\u003cp\u003eThe special value \u003ccode\u003eunlisted\u003c/code\u003e specifies to consider\na browser as modern if it was not listed by the\n\u003ccode\u003emodern_browser\u003c/code\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_browser_module.html#ancient_browser\" target=\"_blank\"\u003e\u003ccode\u003eancient_browser\u003c/code\u003e\u003c/a\u003e\ndirectives.\nOtherwise such a browser is considered ancient.\nIf a request does not provide the \u0026ldquo;User-Agent\u0026rdquo; field\nin the header, the browser is treated as not being listed.\u003c/p\u003e\n"
        },
        {
          "name": "modern_browser_value",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`*"
          ],
          "isBlock": false,
          "description_md": "Sets a value for the `$modern_browser` variables.",
          "description_html": "\u003cp\u003eSets a value for the \u003ccode\u003e$modern_browser\u003c/code\u003e variables.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_charset_module.html",
      "name": "ngx_http_charset_module",
      "directives": [
        {
          "name": "charset",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "*`charset`* | `off`"
          ],
          "isBlock": false,
          "description_md": "Adds the specified charset to the \"Content-Type\"\nresponse header field.\nIf this charset is different from the charset specified\nin the [`source_charset`](https://nginx.org/en/docs/http/ngx_http_charset_module.html#source_charset) directive, a conversion is performed.\n\nThe parameter `off` cancels the addition of charset\nto the \"Content-Type\" response header field.\n\nA charset can be defined with a variable:\n```\ncharset $charset;\n```\nIn such a case, all possible values of a variable need to be present\nin the configuration at least once in the form of the\n[`charset_map`](https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset_map), [`charset`](https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset), or\n[`source_charset`](https://nginx.org/en/docs/http/ngx_http_charset_module.html#source_charset) directives.\nFor `utf-8`, `windows-1251`, and\n`koi8-r` charsets, it is sufficient to include the files\n`conf/koi-win`, `conf/koi-utf`, and\n`conf/win-utf` into configuration.\nFor other charsets, simply making a fictitious conversion table works,\nfor example:\n```\ncharset_map iso-8859-5 _ { }\n```\n\nIn addition, a charset can be set in the\n\"X-Accel-Charset\" response header field.\nThis capability can be disabled using the\n[`proxy_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers),\n[`fastcgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers),\n[`uwsgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers),\n[`scgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers),\nand\n[`grpc_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ignore_headers)\ndirectives.",
          "description_html": "\u003cp\u003eAdds the specified charset to the \u0026ldquo;Content-Type\u0026rdquo;\nresponse header field.\nIf this charset is different from the charset specified\nin the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#source_charset\" target=\"_blank\"\u003e\u003ccode\u003esource_charset\u003c/code\u003e\u003c/a\u003e directive, a conversion is performed.\u003c/p\u003e\n\n\u003cp\u003eThe parameter \u003ccode\u003eoff\u003c/code\u003e cancels the addition of charset\nto the \u0026ldquo;Content-Type\u0026rdquo; response header field.\u003c/p\u003e\n\n\u003cp\u003eA charset can be defined with a variable:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003echarset $charset;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn such a case, all possible values of a variable need to be present\nin the configuration at least once in the form of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset_map\" target=\"_blank\"\u003e\u003ccode\u003echarset_map\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\" target=\"_blank\"\u003e\u003ccode\u003echarset\u003c/code\u003e\u003c/a\u003e, or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#source_charset\" target=\"_blank\"\u003e\u003ccode\u003esource_charset\u003c/code\u003e\u003c/a\u003e directives.\nFor \u003ccode\u003eutf-8\u003c/code\u003e, \u003ccode\u003ewindows-1251\u003c/code\u003e, and\n\u003ccode\u003ekoi8-r\u003c/code\u003e charsets, it is sufficient to include the files\n\u003ccode\u003econf/koi-win\u003c/code\u003e, \u003ccode\u003econf/koi-utf\u003c/code\u003e, and\n\u003ccode\u003econf/win-utf\u003c/code\u003e into configuration.\nFor other charsets, simply making a fictitious conversion table works,\nfor example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003echarset_map iso-8859-5 _ { }\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn addition, a charset can be set in the\n\u0026ldquo;X-Accel-Charset\u0026rdquo; response header field.\nThis capability can be disabled using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003eproxy_ignore_headers\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_ignore_headers\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_ignore_headers\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003escgi_ignore_headers\u003c/code\u003e\u003c/a\u003e,\nand\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003egrpc_ignore_headers\u003c/code\u003e\u003c/a\u003e\ndirectives.\u003c/p\u003e\n"
        },
        {
          "name": "charset_map",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`charset1`* *`charset2`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Describes the conversion table from one charset to another.\nA reverse conversion table is built using the same data.\nCharacter codes are given in hexadecimal.\nMissing characters in the range 80-FF are replaced with “`?`”.\nWhen converting from UTF-8, characters missing in a one-byte charset\nare replaced with “`\u0026#XXXX;`”.\n\nExample:\n```\ncharset_map koi8-r windows-1251 {\n    C0 FE ; # small yu\n    C1 E0 ; # small a\n    C2 E1 ; # small b\n    C3 F6 ; # small ts\n    ...\n}\n```\n\nWhen describing a conversion table to UTF-8, codes for the UTF-8 charset should\nbe given in the second column, for example:\n```\ncharset_map koi8-r utf-8 {\n    C0 D18E ; # small yu\n    C1 D0B0 ; # small a\n    C2 D0B1 ; # small b\n    C3 D186 ; # small ts\n    ...\n}\n```\n\nFull conversion tables from `koi8-r` to\n`windows-1251`, and from `koi8-r` and\n`windows-1251` to `utf-8`\nare provided in the distribution files `conf/koi-win`,\n`conf/koi-utf`, and `conf/win-utf`.",
          "description_html": "\u003cp\u003eDescribes the conversion table from one charset to another.\nA reverse conversion table is built using the same data.\nCharacter codes are given in hexadecimal.\nMissing characters in the range 80-FF are replaced with “\u003ccode\u003e?\u003c/code\u003e”.\nWhen converting from UTF-8, characters missing in a one-byte charset\nare replaced with “\u003ccode\u003e\u0026amp;#XXXX;\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003echarset_map koi8-r windows-1251 {\n    C0 FE ; # small yu\n    C1 E0 ; # small a\n    C2 E1 ; # small b\n    C3 F6 ; # small ts\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhen describing a conversion table to UTF-8, codes for the UTF-8 charset should\nbe given in the second column, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003echarset_map koi8-r utf-8 {\n    C0 D18E ; # small yu\n    C1 D0B0 ; # small a\n    C2 D0B1 ; # small b\n    C3 D186 ; # small ts\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eFull conversion tables from \u003ccode\u003ekoi8-r\u003c/code\u003e to\n\u003ccode\u003ewindows-1251\u003c/code\u003e, and from \u003ccode\u003ekoi8-r\u003c/code\u003e and\n\u003ccode\u003ewindows-1251\u003c/code\u003e to \u003ccode\u003eutf-8\u003c/code\u003e\nare provided in the distribution files \u003ccode\u003econf/koi-win\u003c/code\u003e,\n\u003ccode\u003econf/koi-utf\u003c/code\u003e, and \u003ccode\u003econf/win-utf\u003c/code\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "charset_types",
          "default": "text/html text/xml text/plain text/vnd.wap.wml\napplication/javascript application/rss+xml",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`mime-type`* ..."
          ],
          "isBlock": false,
          "description_md": "Enables module processing in responses with the specified MIME types\nin addition to “`text/html`”.\nThe special value “`*`” matches any MIME type (0.8.29).\n\n\u003e Until version 1.5.4, “`application/x-javascript`” was used\n\u003e as the default MIME type instead of “`application/javascript`”.",
          "description_html": "\u003cp\u003eEnables module processing in responses with the specified MIME types\nin addition to “\u003ccode\u003etext/html\u003c/code\u003e”.\nThe special value “\u003ccode\u003e*\u003c/code\u003e” matches any MIME type (0.8.29).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eUntil version 1.5.4, “\u003ccode\u003eapplication/x-javascript\u003c/code\u003e” was used\nas the default MIME type instead of “\u003ccode\u003eapplication/javascript\u003c/code\u003e”.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "override_charset",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether a conversion should be performed for answers\nreceived from a proxied or a FastCGI/uwsgi/SCGI/gRPC server\nwhen the answers already carry a charset in the \"Content-Type\"\nresponse header field.\nIf conversion is enabled, a charset specified in the received\nresponse is used as a source charset.\n\u003e It should be noted that if a response is received in a subrequest\n\u003e then the conversion from the response charset to the main request charset\n\u003e is always performed, regardless of the `override_charset`\n\u003e directive setting.",
          "description_html": "\u003cp\u003eDetermines whether a conversion should be performed for answers\nreceived from a proxied or a FastCGI/uwsgi/SCGI/gRPC server\nwhen the answers already carry a charset in the \u0026ldquo;Content-Type\u0026rdquo;\nresponse header field.\nIf conversion is enabled, a charset specified in the received\nresponse is used as a source charset.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIt should be noted that if a response is received in a subrequest\nthen the conversion from the response charset to the main request charset\nis always performed, regardless of the \u003ccode\u003eoverride_charset\u003c/code\u003e\ndirective setting.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "source_charset",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "*`charset`*"
          ],
          "isBlock": false,
          "description_md": "Defines the source charset of a response.\nIf this charset is different from the charset specified\nin the [`charset`](https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset) directive, a conversion is performed.",
          "description_html": "\u003cp\u003eDefines the source charset of a response.\nIf this charset is different from the charset specified\nin the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\" target=\"_blank\"\u003e\u003ccode\u003echarset\u003c/code\u003e\u003c/a\u003e directive, a conversion is performed.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_core_module.html",
      "name": "ngx_http_core_module",
      "directives": [
        {
          "name": "absolute_redirect",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "If disabled, redirects issued by nginx will be relative.\n\nSee also [`server_name_in_redirect`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect)\nand [`port_in_redirect`](https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect) directives.",
          "description_html": "\u003cp\u003eIf disabled, redirects issued by nginx will be relative.\u003c/p\u003e\n\n\u003cp\u003eSee also \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect\" target=\"_blank\"\u003e\u003ccode\u003eserver_name_in_redirect\u003c/code\u003e\u003c/a\u003e\nand \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect\" target=\"_blank\"\u003e\u003ccode\u003eport_in_redirect\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n"
        },
        {
          "name": "aio",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off` | `threads`[`=`*`pool`*]"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the use of asynchronous file I/O (AIO)\non FreeBSD and Linux:\n```\nlocation /video/ {\n    aio            on;\n    output_buffers 1 64k;\n}\n```\n\nOn FreeBSD, AIO can be used starting from FreeBSD 4.3.\nPrior to FreeBSD 11.0,\nAIO can either be linked statically into a kernel:\n```\noptions VFS_AIO\n```\nor loaded dynamically as a kernel loadable module:\n```\nkldload aio\n```\n\nOn Linux, AIO can be used starting from kernel version 2.6.22.\nAlso, it is necessary to enable\n[`directio`](https://nginx.org/en/docs/http/ngx_http_core_module.html#directio),\nor otherwise reading will be blocking:\n```\nlocation /video/ {\n    aio            on;\n    directio       512;\n    output_buffers 1 128k;\n}\n```\n\nOn Linux,\n[`directio`](https://nginx.org/en/docs/http/ngx_http_core_module.html#directio)\ncan only be used for reading blocks that are aligned on 512-byte\nboundaries (or 4K for XFS).\nFile’s unaligned end is read in blocking mode.\nThe same holds true for byte range requests and for FLV requests\nnot from the beginning of a file: reading of unaligned data at the\nbeginning and end of a file will be blocking.\n\nWhen both AIO and [`sendfile`](https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile) are enabled on Linux,\nAIO is used for files that are larger than or equal to\nthe size specified in the [`directio`](https://nginx.org/en/docs/http/ngx_http_core_module.html#directio) directive,\nwhile [`sendfile`](https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile) is used for files of smaller sizes\nor when [`directio`](https://nginx.org/en/docs/http/ngx_http_core_module.html#directio) is disabled.\n```\nlocation /video/ {\n    sendfile       on;\n    aio            on;\n    directio       8m;\n}\n```\n\nFinally, files can be read and [sent](https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile)\nusing multi-threading (1.7.11),\nwithout blocking a worker process:\n```\nlocation /video/ {\n    sendfile       on;\n    aio            threads;\n}\n```\nRead and send file operations are offloaded to threads of the specified\n[pool](https://nginx.org/en/docs/ngx_core_module.html#thread_pool).\nIf the pool name is omitted,\nthe pool with the name “`default`” is used.\nThe pool name can also be set with variables:\n```\naio threads=pool$disk;\n```\nBy default, multi-threading is disabled, it should be\nenabled with the\n`--with-threads` configuration parameter.\nCurrently, multi-threading is compatible only with the\n[`epoll`](https://nginx.org/en/docs/events.html#epoll),\n[`kqueue`](https://nginx.org/en/docs/events.html#kqueue),\nand\n[`eventport`](https://nginx.org/en/docs/events.html#eventport) methods.\nMulti-threaded sending of files is only supported on Linux.\n\nSee also the [`sendfile`](https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile) directive.",
          "description_html": "\u003cp\u003eEnables or disables the use of asynchronous file I/O (AIO)\non FreeBSD and Linux:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /video/ {\n    aio            on;\n    output_buffers 1 64k;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eOn FreeBSD, AIO can be used starting from FreeBSD 4.3.\nPrior to FreeBSD 11.0,\nAIO can either be linked statically into a kernel:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eoptions VFS_AIO\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eor loaded dynamically as a kernel loadable module:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ekldload aio\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eOn Linux, AIO can be used starting from kernel version 2.6.22.\nAlso, it is necessary to enable\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\" target=\"_blank\"\u003e\u003ccode\u003edirectio\u003c/code\u003e\u003c/a\u003e,\nor otherwise reading will be blocking:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /video/ {\n    aio            on;\n    directio       512;\n    output_buffers 1 128k;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eOn Linux,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\" target=\"_blank\"\u003e\u003ccode\u003edirectio\u003c/code\u003e\u003c/a\u003e\ncan only be used for reading blocks that are aligned on 512-byte\nboundaries (or 4K for XFS).\nFile’s unaligned end is read in blocking mode.\nThe same holds true for byte range requests and for FLV requests\nnot from the beginning of a file: reading of unaligned data at the\nbeginning and end of a file will be blocking.\u003c/p\u003e\n\n\u003cp\u003eWhen both AIO and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\" target=\"_blank\"\u003e\u003ccode\u003esendfile\u003c/code\u003e\u003c/a\u003e are enabled on Linux,\nAIO is used for files that are larger than or equal to\nthe size specified in the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\" target=\"_blank\"\u003e\u003ccode\u003edirectio\u003c/code\u003e\u003c/a\u003e directive,\nwhile \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\" target=\"_blank\"\u003e\u003ccode\u003esendfile\u003c/code\u003e\u003c/a\u003e is used for files of smaller sizes\nor when \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\" target=\"_blank\"\u003e\u003ccode\u003edirectio\u003c/code\u003e\u003c/a\u003e is disabled.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /video/ {\n    sendfile       on;\n    aio            on;\n    directio       8m;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eFinally, files can be read and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\" target=\"_blank\"\u003esent\u003c/a\u003e\nusing multi-threading (1.7.11),\nwithout blocking a worker process:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /video/ {\n    sendfile       on;\n    aio            threads;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eRead and send file operations are offloaded to threads of the specified\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#thread_pool\" target=\"_blank\"\u003epool\u003c/a\u003e.\nIf the pool name is omitted,\nthe pool with the name “\u003ccode\u003edefault\u003c/code\u003e” is used.\nThe pool name can also be set with variables:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eaio threads=pool$disk;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eBy default, multi-threading is disabled, it should be\nenabled with the\n\u003ccode\u003e--with-threads\u003c/code\u003e configuration parameter.\nCurrently, multi-threading is compatible only with the\n\u003ca href=\"https://nginx.org/en/docs/events.html#epoll\" target=\"_blank\"\u003e\u003ccode\u003eepoll\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/events.html#kqueue\" target=\"_blank\"\u003e\u003ccode\u003ekqueue\u003c/code\u003e\u003c/a\u003e,\nand\n\u003ca href=\"https://nginx.org/en/docs/events.html#eventport\" target=\"_blank\"\u003e\u003ccode\u003eeventport\u003c/code\u003e\u003c/a\u003e methods.\nMulti-threaded sending of files is only supported on Linux.\u003c/p\u003e\n\n\u003cp\u003eSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\" target=\"_blank\"\u003e\u003ccode\u003esendfile\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "aio_write",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "If [`aio`](https://nginx.org/en/docs/http/ngx_http_core_module.html#aio) is enabled, specifies whether it is used for writing files.\nCurrently, this only works when using\n`aio threads`\nand is limited to writing temporary files\nwith data received from proxied servers.",
          "description_html": "\u003cp\u003eIf \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\" target=\"_blank\"\u003e\u003ccode\u003eaio\u003c/code\u003e\u003c/a\u003e is enabled, specifies whether it is used for writing files.\nCurrently, this only works when using\n\u003ccode\u003eaio threads\u003c/code\u003e\nand is limited to writing temporary files\nwith data received from proxied servers.\u003c/p\u003e\n"
        },
        {
          "name": "alias",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            "*`path`*"
          ],
          "isBlock": false,
          "description_md": "Defines a replacement for the specified location.\nFor example, with the following configuration\n```\nlocation /i/ {\n    alias /data/w3/images/;\n}\n```\non request of\n“`/i/top.gif`”, the file\n`/data/w3/images/top.gif` will be sent.\n\nThe *`path`* value can contain variables,\nexcept `$document_root` and `$realpath_root`.\n\nIf `alias` is used inside a location defined\nwith a regular expression then such regular expression should\ncontain captures and `alias` should refer to\nthese captures (0.7.40), for example:\n```\nlocation ~ ^/users/(.+\\.(?:gif|jpe?g|png))$ {\n    alias /data/w3/images/$1;\n}\n```\n\nWhen location matches the last part of the directive’s value:\n```\nlocation /images/ {\n    alias /data/w3/images/;\n}\n```\nit is better to use the\n[`root`](https://nginx.org/en/docs/http/ngx_http_core_module.html#root)\ndirective instead:\n```\nlocation /images/ {\n    root /data/w3;\n}\n```",
          "description_html": "\u003cp\u003eDefines a replacement for the specified location.\nFor example, with the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /i/ {\n    alias /data/w3/images/;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eon request of\n“\u003ccode\u003e/i/top.gif\u003c/code\u003e”, the file\n\u003ccode\u003e/data/w3/images/top.gif\u003c/code\u003e will be sent.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cem\u003e\u003ccode\u003epath\u003c/code\u003e\u003c/em\u003e value can contain variables,\nexcept \u003ccode\u003e$document_root\u003c/code\u003e and \u003ccode\u003e$realpath_root\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003ealias\u003c/code\u003e is used inside a location defined\nwith a regular expression then such regular expression should\ncontain captures and \u003ccode\u003ealias\u003c/code\u003e should refer to\nthese captures (0.7.40), for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation ~ ^/users/(.+\\.(?:gif|jpe?g|png))$ {\n    alias /data/w3/images/$1;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eWhen location matches the last part of the directive’s value:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /images/ {\n    alias /data/w3/images/;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eit is better to use the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\" target=\"_blank\"\u003e\u003ccode\u003eroot\u003c/code\u003e\u003c/a\u003e\ndirective instead:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /images/ {\n    root /data/w3;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "auth_delay",
          "default": "0s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Delays processing of unauthorized requests with 401 response code\nto prevent timing attacks when access is limited by\n[password](https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html), by the\n[result of subrequest](https://nginx.org/en/docs/http/ngx_http_auth_request_module.html),\nor by [JWT](https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html).",
          "description_html": "\u003cp\u003eDelays processing of unauthorized requests with 401 response code\nto prevent timing attacks when access is limited by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\" target=\"_blank\"\u003epassword\u003c/a\u003e, by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_request_module.html\" target=\"_blank\"\u003eresult of subrequest\u003c/a\u003e,\nor by \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html\" target=\"_blank\"\u003eJWT\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "chunked_transfer_encoding",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Allows disabling chunked transfer encoding in HTTP/1.1.\nIt may come in handy when using a software failing to support\nchunked encoding despite the standard’s requirement.",
          "description_html": "\u003cp\u003eAllows disabling chunked transfer encoding in HTTP/1.1.\nIt may come in handy when using a software failing to support\nchunked encoding despite the standard’s requirement.\u003c/p\u003e\n"
        },
        {
          "name": "client_body_buffer_size",
          "default": "8k|16k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets buffer size for reading client request body.\nIn case the request body is larger than the buffer,\nthe whole body or only its part is written to a\n[temporary file](https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path).\nBy default, buffer size is equal to two memory pages.\nThis is 8K on x86, other 32-bit platforms, and x86-64.\nIt is usually 16K on other 64-bit platforms.",
          "description_html": "\u003cp\u003eSets buffer size for reading client request body.\nIn case the request body is larger than the buffer,\nthe whole body or only its part is written to a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path\" target=\"_blank\"\u003etemporary file\u003c/a\u003e.\nBy default, buffer size is equal to two memory pages.\nThis is 8K on x86, other 32-bit platforms, and x86-64.\nIt is usually 16K on other 64-bit platforms.\u003c/p\u003e\n"
        },
        {
          "name": "client_body_in_file_only",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `clean` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether nginx should save the entire client request body\ninto a file.\nThis directive can be used during debugging, or when using the\n`$request_body_file`\nvariable, or the\n[$r-\u003erequest_body_file](https://nginx.org/en/docs/http/ngx_http_perl_module.html#methods)\nmethod of the module\n[ngx_http_perl_module](https://nginx.org/en/docs/http/ngx_http_perl_module.html).\n\nWhen set to the value `on`, temporary files are not\nremoved after request processing.\n\nThe value `clean` will cause the temporary files\nleft after request processing to be removed.",
          "description_html": "\u003cp\u003eDetermines whether nginx should save the entire client request body\ninto a file.\nThis directive can be used during debugging, or when using the\n\u003ccode\u003e$request_body_file\u003c/code\u003e\nvariable, or the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_perl_module.html#methods\" target=\"_blank\"\u003e$r-\u0026gt;request_body_file\u003c/a\u003e\nmethod of the module\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_perl_module.html\" target=\"_blank\"\u003engx_http_perl_module\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWhen set to the value \u003ccode\u003eon\u003c/code\u003e, temporary files are not\nremoved after request processing.\u003c/p\u003e\n\n\u003cp\u003eThe value \u003ccode\u003eclean\u003c/code\u003e will cause the temporary files\nleft after request processing to be removed.\u003c/p\u003e\n"
        },
        {
          "name": "client_body_in_single_buffer",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether nginx should save the entire client request body\nin a single buffer.\nThe directive is recommended when using the\n`$request_body`\nvariable, to save the number of copy operations involved.",
          "description_html": "\u003cp\u003eDetermines whether nginx should save the entire client request body\nin a single buffer.\nThe directive is recommended when using the\n\u003ccode\u003e$request_body\u003c/code\u003e\nvariable, to save the number of copy operations involved.\u003c/p\u003e\n"
        },
        {
          "name": "client_body_temp_path",
          "default": "client_body_temp",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`path`* [*`level1`* [*`level2`* [*`level3`*]]]"
          ],
          "isBlock": false,
          "description_md": "Defines a directory for storing temporary files holding client request bodies.\nUp to three-level subdirectory hierarchy can be used under the specified\ndirectory.\nFor example, in the following configuration\n```\nclient_body_temp_path /spool/nginx/client_temp 1 2;\n```\na path to a temporary file might look like this:\n```\n/spool/nginx/client_temp/7/45/00000123457\n```",
          "description_html": "\u003cp\u003eDefines a directory for storing temporary files holding client request bodies.\nUp to three-level subdirectory hierarchy can be used under the specified\ndirectory.\nFor example, in the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eclient_body_temp_path /spool/nginx/client_temp 1 2;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ea path to a temporary file might look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/spool/nginx/client_temp/7/45/00000123457\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "client_body_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for reading client request body.\nThe timeout is set only for a period between two successive read operations,\nnot for the transmission of the whole request body.\nIf a client does not transmit anything within this time, the\nrequest is terminated with the\n408 (Request Time-out)\nerror.",
          "description_html": "\u003cp\u003eDefines a timeout for reading client request body.\nThe timeout is set only for a period between two successive read operations,\nnot for the transmission of the whole request body.\nIf a client does not transmit anything within this time, the\nrequest is terminated with the\n408 (Request Time-out)\nerror.\u003c/p\u003e\n"
        },
        {
          "name": "client_header_buffer_size",
          "default": "1k",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets buffer size for reading client request header.\nFor most requests, a buffer of 1K bytes is enough.\nHowever, if a request includes long cookies, or comes from a WAP client,\nit may not fit into 1K.\nIf a request line or a request header field does not fit into\nthis buffer then larger buffers, configured by the\n[`large_client_header_buffers`](https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers) directive,\nare allocated.\n\nIf the directive is specified on the [`server`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server) level,\nthe value from the default server can be used.\nDetails are provided in the\n“[Virtual server selection](https://nginx.org/en/docs/http/server_names.html#virtual_server_selection)” section.",
          "description_html": "\u003cp\u003eSets buffer size for reading client request header.\nFor most requests, a buffer of 1K bytes is enough.\nHowever, if a request includes long cookies, or comes from a WAP client,\nit may not fit into 1K.\nIf a request line or a request header field does not fit into\nthis buffer then larger buffers, configured by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers\" target=\"_blank\"\u003e\u003ccode\u003elarge_client_header_buffers\u003c/code\u003e\u003c/a\u003e directive,\nare allocated.\u003c/p\u003e\n\n\u003cp\u003eIf the directive is specified on the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e level,\nthe value from the default server can be used.\nDetails are provided in the\n“\u003ca href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\" target=\"_blank\"\u003eVirtual server selection\u003c/a\u003e” section.\u003c/p\u003e\n"
        },
        {
          "name": "client_header_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for reading client request header.\nIf a client does not transmit the entire header within this time, the\nrequest is terminated with the\n408 (Request Time-out)\nerror.",
          "description_html": "\u003cp\u003eDefines a timeout for reading client request header.\nIf a client does not transmit the entire header within this time, the\nrequest is terminated with the\n408 (Request Time-out)\nerror.\u003c/p\u003e\n"
        },
        {
          "name": "client_max_body_size",
          "default": "1m",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum allowed size of the client request body.\nIf the size in a request exceeds the configured value, the\n413 (Request Entity Too Large)\nerror is returned to the client.\nPlease be aware that\nbrowsers cannot correctly display\nthis error.\nSetting *`size`* to 0 disables checking of client\nrequest body size.",
          "description_html": "\u003cp\u003eSets the maximum allowed size of the client request body.\nIf the size in a request exceeds the configured value, the\n413 (Request Entity Too Large)\nerror is returned to the client.\nPlease be aware that\nbrowsers cannot correctly display\nthis error.\nSetting \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e to 0 disables checking of client\nrequest body size.\u003c/p\u003e\n"
        },
        {
          "name": "connection_pool_size",
          "default": "256|512",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Allows accurate tuning of per-connection memory allocations.\nThis directive has minimal impact on performance\nand should not generally be used.\nBy default, the size is equal to\n256 bytes on 32-bit platforms and 512 bytes on 64-bit platforms.\n\u003e Prior to version 1.9.8, the default value was 256 on all platforms.",
          "description_html": "\u003cp\u003eAllows accurate tuning of per-connection memory allocations.\nThis directive has minimal impact on performance\nand should not generally be used.\nBy default, the size is equal to\n256 bytes on 32-bit platforms and 512 bytes on 64-bit platforms.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.9.8, the default value was 256 on all platforms.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "default_type",
          "default": "text/plain",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`mime-type`*"
          ],
          "isBlock": false,
          "description_md": "Defines the default MIME type of a response.\nMapping of file name extensions to MIME types can be set\nwith the [`types`](https://nginx.org/en/docs/http/ngx_http_core_module.html#types) directive.",
          "description_html": "\u003cp\u003eDefines the default MIME type of a response.\nMapping of file name extensions to MIME types can be set\nwith the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#types\" target=\"_blank\"\u003e\u003ccode\u003etypes\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "directio",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`* | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the use of\nthe `O_DIRECT` flag (FreeBSD, Linux),\nthe `F_NOCACHE` flag (macOS),\nor the `directio()` function (Solaris),\nwhen reading files that are larger than or equal to\nthe specified *`size`*.\nThe directive automatically disables (0.7.15) the use of\n[`sendfile`](https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile)\nfor a given request.\nIt can be useful for serving large files:\n```\ndirectio 4m;\n```\nor when using [`aio`](https://nginx.org/en/docs/http/ngx_http_core_module.html#aio) on Linux.",
          "description_html": "\u003cp\u003eEnables the use of\nthe \u003ccode\u003eO_DIRECT\u003c/code\u003e flag (FreeBSD, Linux),\nthe \u003ccode\u003eF_NOCACHE\u003c/code\u003e flag (macOS),\nor the \u003ccode\u003edirectio()\u003c/code\u003e function (Solaris),\nwhen reading files that are larger than or equal to\nthe specified \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e.\nThe directive automatically disables (0.7.15) the use of\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\" target=\"_blank\"\u003e\u003ccode\u003esendfile\u003c/code\u003e\u003c/a\u003e\nfor a given request.\nIt can be useful for serving large files:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003edirectio 4m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eor when using \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\" target=\"_blank\"\u003e\u003ccode\u003eaio\u003c/code\u003e\u003c/a\u003e on Linux.\u003c/p\u003e\n"
        },
        {
          "name": "directio_alignment",
          "default": "512",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the alignment for\n[`directio`](https://nginx.org/en/docs/http/ngx_http_core_module.html#directio).\nIn most cases, a 512-byte alignment is enough.\nHowever, when using XFS under Linux, it needs to be increased to 4K.",
          "description_html": "\u003cp\u003eSets the alignment for\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#directio\" target=\"_blank\"\u003e\u003ccode\u003edirectio\u003c/code\u003e\u003c/a\u003e.\nIn most cases, a 512-byte alignment is enough.\nHowever, when using XFS under Linux, it needs to be increased to 4K.\u003c/p\u003e\n"
        },
        {
          "name": "disable_symlinks",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`off`",
            "`on` | `if_not_owner` [`from`=*`part`*]"
          ],
          "isBlock": false,
          "description_md": "Determines how symbolic links should be treated when opening files:\n- `off`\n\n    Symbolic links in the pathname are allowed and not checked.\n    This is the default behavior.\n- `on`\n\n    If any component of the pathname is a symbolic link,\n    access to a file is denied.\n- `if_not_owner`\n\n    Access to a file is denied if any component of the pathname\n    is a symbolic link, and the link and object that the link\n    points to have different owners.\n- `from`=*`part`*\n\n    When checking symbolic links\n    (parameters `on` and `if_not_owner`),\n    all components of the pathname are normally checked.\n    Checking of symbolic links in the initial part of the pathname\n    may be avoided by specifying additionally the\n    `from`=*`part`* parameter.\n    In this case, symbolic links are checked only from\n    the pathname component that follows the specified initial part.\n    If the value is not an initial part of the pathname checked, the whole\n    pathname is checked as if this parameter was not specified at all.\n    If the value matches the whole file name,\n    symbolic links are not checked.\n    The parameter value can contain variables.\n\nExample:\n```\ndisable_symlinks on from=$document_root;\n```\n\nThis directive is only available on systems that have the\n`openat()` and `fstatat()` interfaces.\nSuch systems include modern versions of FreeBSD, Linux, and Solaris.\n\nParameters `on` and `if_not_owner`\nadd a processing overhead.\n\u003e On systems that do not support opening of directories only for search,\n\u003e to use these parameters it is required that worker processes\n\u003e have read permissions for all directories being checked.\n\n\u003e The\n\u003e [ngx_http_autoindex_module](https://nginx.org/en/docs/http/ngx_http_autoindex_module.html),\n\u003e [ngx_http_random_index_module](https://nginx.org/en/docs/http/ngx_http_random_index_module.html),\n\u003e and [ngx_http_dav_module](https://nginx.org/en/docs/http/ngx_http_dav_module.html)\n\u003e modules currently ignore this directive.",
          "description_html": "\u003cp\u003eDetermines how symbolic links should be treated when opening files:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eSymbolic links in the pathname are allowed and not checked.\nThis is the default behavior.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eon\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eIf any component of the pathname is a symbolic link,\naccess to a file is denied.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eif_not_owner\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAccess to a file is denied if any component of the pathname\nis a symbolic link, and the link and object that the link\npoints to have different owners.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003efrom\u003c/code\u003e=\u003cem\u003e\u003ccode\u003epart\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen checking symbolic links\n(parameters \u003ccode\u003eon\u003c/code\u003e and \u003ccode\u003eif_not_owner\u003c/code\u003e),\nall components of the pathname are normally checked.\nChecking of symbolic links in the initial part of the pathname\nmay be avoided by specifying additionally the\n\u003ccode\u003efrom\u003c/code\u003e=\u003cem\u003e\u003ccode\u003epart\u003c/code\u003e\u003c/em\u003e parameter.\nIn this case, symbolic links are checked only from\nthe pathname component that follows the specified initial part.\nIf the value is not an initial part of the pathname checked, the whole\npathname is checked as if this parameter was not specified at all.\nIf the value matches the whole file name,\nsymbolic links are not checked.\nThe parameter value can contain variables.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003edisable_symlinks on from=$document_root;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis directive is only available on systems that have the\n\u003ccode\u003eopenat()\u003c/code\u003e and \u003ccode\u003efstatat()\u003c/code\u003e interfaces.\nSuch systems include modern versions of FreeBSD, Linux, and Solaris.\u003c/p\u003e\n\n\u003cp\u003eParameters \u003ccode\u003eon\u003c/code\u003e and \u003ccode\u003eif_not_owner\u003c/code\u003e\nadd a processing overhead.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOn systems that do not support opening of directories only for search,\nto use these parameters it is required that worker processes\nhave read permissions for all directories being checked.\u003c/p\u003e\n\n\u003cp\u003eThe\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_autoindex_module.html\" target=\"_blank\"\u003engx_http_autoindex_module\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_random_index_module.html\" target=\"_blank\"\u003engx_http_random_index_module\u003c/a\u003e,\nand \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_dav_module.html\" target=\"_blank\"\u003engx_http_dav_module\u003c/a\u003e\nmodules currently ignore this directive.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "error_page",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "*`code`* ... [`=`[*`response`*]] *`uri`*"
          ],
          "isBlock": false,
          "description_md": "Defines the URI that will be shown for the specified errors.\nA *`uri`* value can contain variables.\n\nExample:\n```\nerror_page 404             /404.html;\nerror_page 500 502 503 504 /50x.html;\n```\n\nThis causes an internal redirect to the specified *`uri`*\nwith the client request method changed to “`GET`”\n(for all methods other than\n“`GET`” and “`HEAD`”).\n\nFurthermore, it is possible to change the response code to another\nusing the “`=`*`response`*” syntax, for example:\n```\nerror_page 404 =200 /empty.gif;\n```\n\nIf an error response is processed by a proxied server\nor a FastCGI/uwsgi/SCGI/gRPC server,\nand the server may return different response codes (e.g., 200, 302, 401\nor 404), it is possible to respond with the code it returns:\n```\nerror_page 404 = /404.php;\n```\n\nIf there is no need to change URI and method during internal redirection\nit is possible to pass error processing into a named location:\n```\nlocation / {\n    error_page 404 = @fallback;\n}\n\nlocation @fallback {\n    proxy_pass http://backend;\n}\n```\n\n\u003e If *`uri`* processing leads to an error,\n\u003e the status code of the last occurred error is returned to the client.\n\nIt is also possible to use URL redirects for error processing:\n```\nerror_page 403      http://example.com/forbidden.html;\nerror_page 404 =301 http://example.com/notfound.html;\n```\nIn this case, by default, the response code 302 is returned to the client.\nIt can only be changed to one of the redirect status\ncodes (301, 302, 303, 307, and 308).\n\u003e The code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.\n\n\n\u003e The code 308 was not treated as a redirect until version 1.13.0.\n\nThese directives are inherited from the previous configuration level\nif and only if there are no `error_page` directives\ndefined on the current level.",
          "description_html": "\u003cp\u003eDefines the URI that will be shown for the specified errors.\nA \u003cem\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/em\u003e value can contain variables.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eerror_page 404             /404.html;\nerror_page 500 502 503 504 /50x.html;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThis causes an internal redirect to the specified \u003cem\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/em\u003e\nwith the client request method changed to “\u003ccode\u003eGET\u003c/code\u003e”\n(for all methods other than\n“\u003ccode\u003eGET\u003c/code\u003e” and “\u003ccode\u003eHEAD\u003c/code\u003e”).\u003c/p\u003e\n\n\u003cp\u003eFurthermore, it is possible to change the response code to another\nusing the “\u003ccode\u003e=\u003c/code\u003e*\u003ccode\u003eresponse\u003c/code\u003e*” syntax, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eerror_page 404 =200 /empty.gif;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf an error response is processed by a proxied server\nor a FastCGI/uwsgi/SCGI/gRPC server,\nand the server may return different response codes (e.g., 200, 302, 401\nor 404), it is possible to respond with the code it returns:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eerror_page 404 = /404.php;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf there is no need to change URI and method during internal redirection\nit is possible to pass error processing into a named location:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    error_page 404 = @fallback;\n}\n\nlocation @fallback {\n    proxy_pass http://backend;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf \u003cem\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/em\u003e processing leads to an error,\nthe status code of the last occurred error is returned to the client.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIt is also possible to use URL redirects for error processing:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eerror_page 403      http://example.com/forbidden.html;\nerror_page 404 =301 http://example.com/notfound.html;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn this case, by default, the response code 302 is returned to the client.\nIt can only be changed to one of the redirect status\ncodes (301, 302, 303, 307, and 308).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.\u003c/p\u003e\n\n\u003cp\u003eThe code 308 was not treated as a redirect until version 1.13.0.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003eerror_page\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n"
        },
        {
          "name": "etag",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables automatic generation of the \"ETag\"\nresponse header field for static resources.",
          "description_html": "\u003cp\u003eEnables or disables automatic generation of the \u0026ldquo;ETag\u0026rdquo;\nresponse header field for static resources.\u003c/p\u003e\n"
        },
        {
          "name": "http",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            " `{...}`"
          ],
          "isBlock": true,
          "description_md": "Provides the configuration file context in which the HTTP server directives\nare specified.",
          "description_html": "\u003cp\u003eProvides the configuration file context in which the HTTP server directives\nare specified.\u003c/p\u003e\n"
        },
        {
          "name": "if_modified_since",
          "default": "exact",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`off` | `exact` | `before`"
          ],
          "isBlock": false,
          "description_md": "Specifies how to compare modification time of a response\nwith the time in the\n\"If-Modified-Since\"\nrequest header field:\n\n- `off`\n\n    the response is always considered modified (0.7.34);\n- `exact`\n\n    exact match;\n- `before`\n\n    modification time of the response is\n    less than or equal to the time in the \"If-Modified-Since\"\n    request header field.",
          "description_html": "\u003cp\u003eSpecifies how to compare modification time of a response\nwith the time in the\n\u0026ldquo;If-Modified-Since\u0026rdquo;\nrequest header field:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe response is always considered modified (0.7.34);\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eexact\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eexact match;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebefore\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003emodification time of the response is\nless than or equal to the time in the \u0026ldquo;If-Modified-Since\u0026rdquo;\nrequest header field.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "ignore_invalid_headers",
          "default": "on",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Controls whether header fields with invalid names should be ignored.\nValid names are composed of English letters, digits, hyphens, and possibly\nunderscores (as controlled by the [`underscores_in_headers`](https://nginx.org/en/docs/http/ngx_http_core_module.html#underscores_in_headers)\ndirective).\n\nIf the directive is specified on the [`server`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server) level,\nthe value from the default server can be used.\nDetails are provided in the\n“[Virtual server selection](https://nginx.org/en/docs/http/server_names.html#virtual_server_selection)” section.",
          "description_html": "\u003cp\u003eControls whether header fields with invalid names should be ignored.\nValid names are composed of English letters, digits, hyphens, and possibly\nunderscores (as controlled by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#underscores_in_headers\" target=\"_blank\"\u003e\u003ccode\u003eunderscores_in_headers\u003c/code\u003e\u003c/a\u003e\ndirective).\u003c/p\u003e\n\n\u003cp\u003eIf the directive is specified on the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e level,\nthe value from the default server can be used.\nDetails are provided in the\n“\u003ca href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\" target=\"_blank\"\u003eVirtual server selection\u003c/a\u003e” section.\u003c/p\u003e\n"
        },
        {
          "name": "internal",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Specifies that a given location can only be used for internal requests.\nFor external requests, the client error\n404 (Not Found)\nis returned.\nInternal requests are the following:\n\n- requests redirected by the\n    [`error_page`](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page),\n    [`index`](https://nginx.org/en/docs/http/ngx_http_index_module.html#index),\n    [`internal_redirect`](https://nginx.org/en/docs/http/ngx_http_internal_redirect_module.html#internal_redirect),\n    [`random_index`](https://nginx.org/en/docs/http/ngx_http_random_index_module.html#random_index), and\n    [`try_files`](https://nginx.org/en/docs/http/ngx_http_core_module.html#try_files) directives;\n- requests redirected by the \"X-Accel-Redirect\"\n    response header field from an upstream server;\n- subrequests formed by the\n    “`include virtual`”\n    command of the\n    [ngx_http_ssi_module](https://nginx.org/en/docs/http/ngx_http_ssi_module.html)\n    module, by the\n    [ngx_http_addition_module](https://nginx.org/en/docs/http/ngx_http_addition_module.html)\n    module directives, and by\n    [`auth_request`](https://nginx.org/en/docs/http/ngx_http_auth_request_module.html#auth_request) and\n    [`mirror`](https://nginx.org/en/docs/http/ngx_http_mirror_module.html#mirror) directives;\n- requests changed by the\n    [`rewrite`](https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite) directive.\n\nExample:\n```\nerror_page 404 /404.html;\n\nlocation = /404.html {\n    internal;\n}\n```\n\u003e There is a limit of 10 internal redirects per request to prevent\n\u003e request processing cycles that can occur in incorrect configurations.\n\u003e If this limit is reached, the error\n\u003e 500 (Internal Server Error) is returned.\n\u003e In such cases, the “rewrite or internal redirection cycle” message\n\u003e can be seen in the error log.",
          "description_html": "\u003cp\u003eSpecifies that a given location can only be used for internal requests.\nFor external requests, the client error\n404 (Not Found)\nis returned.\nInternal requests are the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003erequests redirected by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\" target=\"_blank\"\u003e\u003ccode\u003eerror_page\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_index_module.html#index\" target=\"_blank\"\u003e\u003ccode\u003eindex\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_internal_redirect_module.html#internal_redirect\" target=\"_blank\"\u003e\u003ccode\u003einternal_redirect\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_random_index_module.html#random_index\" target=\"_blank\"\u003e\u003ccode\u003erandom_index\u003c/code\u003e\u003c/a\u003e, and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#try_files\" target=\"_blank\"\u003e\u003ccode\u003etry_files\u003c/code\u003e\u003c/a\u003e directives;\u003c/li\u003e\n\u003cli\u003erequests redirected by the \u0026ldquo;X-Accel-Redirect\u0026rdquo;\nresponse header field from an upstream server;\u003c/li\u003e\n\u003cli\u003esubrequests formed by the\n“\u003ccode\u003einclude virtual\u003c/code\u003e”\ncommand of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssi_module.html\" target=\"_blank\"\u003engx_http_ssi_module\u003c/a\u003e\nmodule, by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_addition_module.html\" target=\"_blank\"\u003engx_http_addition_module\u003c/a\u003e\nmodule directives, and by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_request_module.html#auth_request\" target=\"_blank\"\u003e\u003ccode\u003eauth_request\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_mirror_module.html#mirror\" target=\"_blank\"\u003e\u003ccode\u003emirror\u003c/code\u003e\u003c/a\u003e directives;\u003c/li\u003e\n\u003cli\u003erequests changed by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite\" target=\"_blank\"\u003e\u003ccode\u003erewrite\u003c/code\u003e\u003c/a\u003e directive.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eerror_page 404 /404.html;\n\nlocation = /404.html {\n    internal;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThere is a limit of 10 internal redirects per request to prevent\nrequest processing cycles that can occur in incorrect configurations.\nIf this limit is reached, the error\n500 (Internal Server Error) is returned.\nIn such cases, the “rewrite or internal redirection cycle” message\ncan be seen in the error log.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "keepalive_disable",
          "default": "msie6",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`none` | *`browser`* ..."
          ],
          "isBlock": false,
          "description_md": "Disables keep-alive connections with misbehaving browsers.\nThe *`browser`* parameters specify which\nbrowsers will be affected.\nThe value `msie6` disables keep-alive connections\nwith old versions of MSIE, once a POST request is received.\nThe value `safari` disables keep-alive connections\nwith Safari and Safari-like browsers on macOS and macOS-like\noperating systems.\nThe value `none` enables keep-alive connections\nwith all browsers.\n\u003e Prior to version 1.1.18, the value `safari` matched\n\u003e all Safari and Safari-like browsers on all operating systems, and\n\u003e keep-alive connections with them were disabled by default.",
          "description_html": "\u003cp\u003eDisables keep-alive connections with misbehaving browsers.\nThe \u003cem\u003e\u003ccode\u003ebrowser\u003c/code\u003e\u003c/em\u003e parameters specify which\nbrowsers will be affected.\nThe value \u003ccode\u003emsie6\u003c/code\u003e disables keep-alive connections\nwith old versions of MSIE, once a POST request is received.\nThe value \u003ccode\u003esafari\u003c/code\u003e disables keep-alive connections\nwith Safari and Safari-like browsers on macOS and macOS-like\noperating systems.\nThe value \u003ccode\u003enone\u003c/code\u003e enables keep-alive connections\nwith all browsers.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.1.18, the value \u003ccode\u003esafari\u003c/code\u003e matched\nall Safari and Safari-like browsers on all operating systems, and\nkeep-alive connections with them were disabled by default.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "keepalive_requests",
          "default": "1000",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum number of requests that can be\nserved through one keep-alive connection.\nAfter the maximum number of requests are made, the connection is closed.\n\nClosing connections periodically is necessary to free\nper-connection memory allocations.\nTherefore, using too high maximum number of requests\ncould result in excessive memory usage and not recommended.\n\n\u003e Prior to version 1.19.10, the default value was 100.",
          "description_html": "\u003cp\u003eSets the maximum number of requests that can be\nserved through one keep-alive connection.\nAfter the maximum number of requests are made, the connection is closed.\u003c/p\u003e\n\n\u003cp\u003eClosing connections periodically is necessary to free\nper-connection memory allocations.\nTherefore, using too high maximum number of requests\ncould result in excessive memory usage and not recommended.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.19.10, the default value was 100.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "keepalive_time",
          "default": "1h",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Limits the maximum time during which\nrequests can be processed through one keep-alive connection.\nAfter this time is reached, the connection is closed\nfollowing the subsequent request processing.",
          "description_html": "\u003cp\u003eLimits the maximum time during which\nrequests can be processed through one keep-alive connection.\nAfter this time is reached, the connection is closed\nfollowing the subsequent request processing.\u003c/p\u003e\n"
        },
        {
          "name": "keepalive_timeout",
          "default": "75s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`timeout`* [*`header_timeout`*]"
          ],
          "isBlock": false,
          "description_md": "The first parameter sets a timeout during which a keep-alive\nclient connection will stay open on the server side.\nThe zero value disables keep-alive client connections.\nThe optional second parameter sets a value in the\n\"Keep-Alive: timeout=\"\nresponse header field.\nTwo parameters may differ.\n\nThe\n\"Keep-Alive: timeout=\"\nheader field is recognized by Mozilla and Konqueror.\nMSIE closes keep-alive connections by itself in about 60 seconds.",
          "description_html": "\u003cp\u003eThe first parameter sets a timeout during which a keep-alive\nclient connection will stay open on the server side.\nThe zero value disables keep-alive client connections.\nThe optional second parameter sets a value in the\n\u0026ldquo;Keep-Alive: timeout=\u0026rdquo;\nresponse header field.\nTwo parameters may differ.\u003c/p\u003e\n\n\u003cp\u003eThe\n\u0026ldquo;Keep-Alive: timeout=\u0026rdquo;\nheader field is recognized by Mozilla and Konqueror.\nMSIE closes keep-alive connections by itself in about 60 seconds.\u003c/p\u003e\n"
        },
        {
          "name": "large_client_header_buffers",
          "default": "4 8k",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`number`* and *`size`* of\nbuffers used for reading large client request header.\nA request line cannot exceed the size of one buffer, or the\n414 (Request-URI Too Large)\nerror is returned to the client.\nA request header field cannot exceed the size of one buffer as well, or the\n400 (Bad Request)\nerror is returned to the client.\nBuffers are allocated only on demand.\nBy default, the buffer size is equal to 8K bytes.\nIf after the end of request processing a connection is transitioned\ninto the keep-alive state, these buffers are released.\n\nIf the directive is specified on the [`server`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server) level,\nthe value from the default server can be used.\nDetails are provided in the\n“[Virtual server selection](https://nginx.org/en/docs/http/server_names.html#virtual_server_selection)” section.",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of\nbuffers used for reading large client request header.\nA request line cannot exceed the size of one buffer, or the\n414 (Request-URI Too Large)\nerror is returned to the client.\nA request header field cannot exceed the size of one buffer as well, or the\n400 (Bad Request)\nerror is returned to the client.\nBuffers are allocated only on demand.\nBy default, the buffer size is equal to 8K bytes.\nIf after the end of request processing a connection is transitioned\ninto the keep-alive state, these buffers are released.\u003c/p\u003e\n\n\u003cp\u003eIf the directive is specified on the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e level,\nthe value from the default server can be used.\nDetails are provided in the\n“\u003ca href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\" target=\"_blank\"\u003eVirtual server selection\u003c/a\u003e” section.\u003c/p\u003e\n"
        },
        {
          "name": "limit_except",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            "*`method`* ... `{...}`"
          ],
          "isBlock": true,
          "description_md": "Limits allowed HTTP methods inside a location.\nThe *`method`* parameter can be one of the following:\n`GET`,\n`HEAD`,\n`POST`,\n`PUT`,\n`DELETE`,\n`MKCOL`,\n`COPY`,\n`MOVE`,\n`OPTIONS`,\n`PROPFIND`,\n`PROPPATCH`,\n`LOCK`,\n`UNLOCK`,\nor\n`PATCH`.\nAllowing the `GET` method makes the\n`HEAD` method also allowed.\nAccess to other methods can be limited using the\n[ngx_http_access_module](https://nginx.org/en/docs/http/ngx_http_access_module.html),\n[ngx_http_auth_basic_module](https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html),\nand\n[ngx_http_auth_jwt_module](https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html)\n(1.13.10)\nmodules directives:\n```\nlimit_except GET {\n    allow 192.168.1.0/32;\n    deny  all;\n}\n```\nPlease note that this will limit access to all methods\nexcept GET and HEAD.",
          "description_html": "\u003cp\u003eLimits allowed HTTP methods inside a location.\nThe \u003cem\u003e\u003ccode\u003emethod\u003c/code\u003e\u003c/em\u003e parameter can be one of the following:\n\u003ccode\u003eGET\u003c/code\u003e,\n\u003ccode\u003eHEAD\u003c/code\u003e,\n\u003ccode\u003ePOST\u003c/code\u003e,\n\u003ccode\u003ePUT\u003c/code\u003e,\n\u003ccode\u003eDELETE\u003c/code\u003e,\n\u003ccode\u003eMKCOL\u003c/code\u003e,\n\u003ccode\u003eCOPY\u003c/code\u003e,\n\u003ccode\u003eMOVE\u003c/code\u003e,\n\u003ccode\u003eOPTIONS\u003c/code\u003e,\n\u003ccode\u003ePROPFIND\u003c/code\u003e,\n\u003ccode\u003ePROPPATCH\u003c/code\u003e,\n\u003ccode\u003eLOCK\u003c/code\u003e,\n\u003ccode\u003eUNLOCK\u003c/code\u003e,\nor\n\u003ccode\u003ePATCH\u003c/code\u003e.\nAllowing the \u003ccode\u003eGET\u003c/code\u003e method makes the\n\u003ccode\u003eHEAD\u003c/code\u003e method also allowed.\nAccess to other methods can be limited using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_access_module.html\" target=\"_blank\"\u003engx_http_access_module\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\" target=\"_blank\"\u003engx_http_auth_basic_module\u003c/a\u003e,\nand\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html\" target=\"_blank\"\u003engx_http_auth_jwt_module\u003c/a\u003e\n(1.13.10)\nmodules directives:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elimit_except GET {\n    allow 192.168.1.0/32;\n    deny  all;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ePlease note that this will limit access to all methods\nexcept GET and HEAD.\u003c/p\u003e\n"
        },
        {
          "name": "limit_rate",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "*`rate`*"
          ],
          "isBlock": false,
          "description_md": "Limits the rate of response transmission to a client.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\n\nThe limit is set per a request, and so if a client simultaneously opens\ntwo connections, the overall rate will be twice as much\nas the specified limit.\n\nParameter value can contain variables (1.17.0).\nIt may be useful in cases where rate should be limited\ndepending on a certain condition:\n```\nmap $slow $rate {\n    1     4k;\n    2     8k;\n}\n\nlimit_rate $rate;\n```\n\nRate limit can also be set in the\n[`$limit_rate`](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_limit_rate) variable,\nhowever, since version 1.17.0, this method is not recommended:\n```\nserver {\n\n    if ($slow) {\n        set $limit_rate 4k;\n    }\n\n    ...\n}\n```\n\nRate limit can also be set in the\n\"X-Accel-Limit-Rate\" header field of a proxied server response.\nThis capability can be disabled using the\n[`proxy_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers),\n[`fastcgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers),\n[`uwsgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers),\nand\n[`scgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers)\ndirectives.",
          "description_html": "\u003cp\u003eLimits the rate of response transmission to a client.\nThe \u003cem\u003e\u003ccode\u003erate\u003c/code\u003e\u003c/em\u003e is specified in bytes per second.\nThe zero value disables rate limiting.\u003c/p\u003e\n\n\u003cp\u003eThe limit is set per a request, and so if a client simultaneously opens\ntwo connections, the overall rate will be twice as much\nas the specified limit.\u003c/p\u003e\n\n\u003cp\u003eParameter value can contain variables (1.17.0).\nIt may be useful in cases where rate should be limited\ndepending on a certain condition:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003emap $slow $rate {\n    1     4k;\n    2     8k;\n}\n\nlimit_rate $rate;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eRate limit can also be set in the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_limit_rate\" target=\"_blank\"\u003e\u003ccode\u003e$limit_rate\u003c/code\u003e\u003c/a\u003e variable,\nhowever, since version 1.17.0, this method is not recommended:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n\n    if ($slow) {\n        set $limit_rate 4k;\n    }\n\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eRate limit can also be set in the\n\u0026ldquo;X-Accel-Limit-Rate\u0026rdquo; header field of a proxied server response.\nThis capability can be disabled using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003eproxy_ignore_headers\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_ignore_headers\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_ignore_headers\u003c/code\u003e\u003c/a\u003e,\nand\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003escgi_ignore_headers\u003c/code\u003e\u003c/a\u003e\ndirectives.\u003c/p\u003e\n"
        },
        {
          "name": "limit_rate_after",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the initial amount after which the further transmission\nof a response to a client will be rate limited.\nParameter value can contain variables (1.17.0).\n\nExample:\n```\nlocation /flv/ {\n    flv;\n    limit_rate_after 500k;\n    limit_rate       50k;\n}\n```",
          "description_html": "\u003cp\u003eSets the initial amount after which the further transmission\nof a response to a client will be rate limited.\nParameter value can contain variables (1.17.0).\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /flv/ {\n    flv;\n    limit_rate_after 500k;\n    limit_rate       50k;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "lingering_close",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`off` | `on` | `always`"
          ],
          "isBlock": false,
          "description_md": "Controls how nginx closes client connections.\n\nThe default value “`on`” instructs nginx to\n[wait for](https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_timeout) and\n[process](https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_time) additional data from a client\nbefore fully closing a connection, but only\nif heuristics suggests that a client may be sending more data.\n\nThe value “`always`” will cause nginx to unconditionally\nwait for and process additional client data.\n\nThe value “`off`” tells nginx to never wait for\nmore data and close the connection immediately.\nThis behavior breaks the protocol and should not be used under normal\ncircumstances.\n\nTo control closing\n[HTTP/2](https://nginx.org/en/docs/http/ngx_http_v2_module.html) connections,\nthe directive must be specified on the [`server`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server) level (1.19.1).",
          "description_html": "\u003cp\u003eControls how nginx closes client connections.\u003c/p\u003e\n\n\u003cp\u003eThe default value “\u003ccode\u003eon\u003c/code\u003e” instructs nginx to\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_timeout\" target=\"_blank\"\u003ewait for\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_time\" target=\"_blank\"\u003eprocess\u003c/a\u003e additional data from a client\nbefore fully closing a connection, but only\nif heuristics suggests that a client may be sending more data.\u003c/p\u003e\n\n\u003cp\u003eThe value “\u003ccode\u003ealways\u003c/code\u003e” will cause nginx to unconditionally\nwait for and process additional client data.\u003c/p\u003e\n\n\u003cp\u003eThe value “\u003ccode\u003eoff\u003c/code\u003e” tells nginx to never wait for\nmore data and close the connection immediately.\nThis behavior breaks the protocol and should not be used under normal\ncircumstances.\u003c/p\u003e\n\n\u003cp\u003eTo control closing\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html\" target=\"_blank\"\u003eHTTP/2\u003c/a\u003e connections,\nthe directive must be specified on the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e level (1.19.1).\u003c/p\u003e\n"
        },
        {
          "name": "lingering_time",
          "default": "30s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "When [`lingering_close`](https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_close) is in effect,\nthis directive specifies the maximum time during which nginx\nwill process (read and ignore) additional data coming from a client.\nAfter that, the connection will be closed, even if there will be\nmore data.",
          "description_html": "\u003cp\u003eWhen \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_close\" target=\"_blank\"\u003e\u003ccode\u003elingering_close\u003c/code\u003e\u003c/a\u003e is in effect,\nthis directive specifies the maximum time during which nginx\nwill process (read and ignore) additional data coming from a client.\nAfter that, the connection will be closed, even if there will be\nmore data.\u003c/p\u003e\n"
        },
        {
          "name": "lingering_timeout",
          "default": "5s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "When [`lingering_close`](https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_close) is in effect, this directive specifies\nthe maximum waiting time for more client data to arrive.\nIf data are not received during this time, the connection is closed.\nOtherwise, the data are read and ignored, and nginx starts waiting\nfor more data again.\nThe “wait-read-ignore” cycle is repeated, but no longer than specified by the\n[`lingering_time`](https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_time) directive.",
          "description_html": "\u003cp\u003eWhen \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_close\" target=\"_blank\"\u003e\u003ccode\u003elingering_close\u003c/code\u003e\u003c/a\u003e is in effect, this directive specifies\nthe maximum waiting time for more client data to arrive.\nIf data are not received during this time, the connection is closed.\nOtherwise, the data are read and ignored, and nginx starts waiting\nfor more data again.\nThe “wait-read-ignore” cycle is repeated, but no longer than specified by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#lingering_time\" target=\"_blank\"\u003e\u003ccode\u003elingering_time\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "listen",
          "default": "*:80 | *:8000",
          "contexts": [
            "server"
          ],
          "syntax": [
            "*`address`*[:*`port`*] [`default_server`] [`ssl`] [`http2` | `quic`] [`proxy_protocol`] [`setfib`=*`number`*] [`fastopen`=*`number`*] [`backlog`=*`number`*] [`rcvbuf`=*`size`*] [`sndbuf`=*`size`*] [`accept_filter`=*`filter`*] [`deferred`] [`bind`] [`ipv6only`=`on`|`off`] [`reuseport`] [`so_keepalive`=`on`|`off`|[*`keepidle`*]:[*`keepintvl`*]:[*`keepcnt`*]]",
            "*`port`* [`default_server`] [`ssl`] [`http2` | `quic`] [`proxy_protocol`] [`setfib`=*`number`*] [`fastopen`=*`number`*] [`backlog`=*`number`*] [`rcvbuf`=*`size`*] [`sndbuf`=*`size`*] [`accept_filter`=*`filter`*] [`deferred`] [`bind`] [`ipv6only`=`on`|`off`] [`reuseport`] [`so_keepalive`=`on`|`off`|[*`keepidle`*]:[*`keepintvl`*]:[*`keepcnt`*]]",
            "`unix:`*`path`* [`default_server`] [`ssl`] [`http2` | `quic`] [`proxy_protocol`] [`backlog`=*`number`*] [`rcvbuf`=*`size`*] [`sndbuf`=*`size`*] [`accept_filter`=*`filter`*] [`deferred`] [`bind`] [`so_keepalive`=`on`|`off`|[*`keepidle`*]:[*`keepintvl`*]:[*`keepcnt`*]]"
          ],
          "isBlock": false,
          "description_md": "Sets the *`address`* and *`port`* for IP,\nor the *`path`* for a UNIX-domain socket on which\nthe server will accept requests.\nBoth *`address`* and *`port`*,\nor only *`address`* or only *`port`* can be specified.\nAn *`address`* may also be a hostname, for example:\n```\nlisten 127.0.0.1:8000;\nlisten 127.0.0.1;\nlisten 8000;\nlisten *:8000;\nlisten localhost:8000;\n```\nIPv6 addresses (0.7.36) are specified in square brackets:\n```\nlisten [::]:8000;\nlisten [::1];\n```\nUNIX-domain sockets (0.8.21) are specified with the “`unix:`”\nprefix:\n```\nlisten unix:/var/run/nginx.sock;\n```\n\nIf only *`address`* is given, the port 80 is used.\n\nIf the directive is not present then either `*:80` is used\nif nginx runs with the superuser privileges, or `*:8000`\notherwise.\n\nThe `default_server` parameter, if present,\nwill cause the server to become the default server for the specified\n*`address`*:*`port`* pair.\nIf none of the directives have the `default_server`\nparameter then the first server with the\n*`address`*:*`port`* pair will be\nthe default server for this pair.\n\u003e In versions prior to 0.8.21 this parameter is named simply\n\u003e `default`.\n\nThe `ssl` parameter (0.7.14) allows specifying that all\nconnections accepted on this port should work in SSL mode.\nThis allows for a more compact [configuration](https://nginx.org/en/docs/http/configuring_https_servers.html#single_http_https_server) for the server that\nhandles both HTTP and HTTPS requests.\n\nThe `http2` parameter (1.9.5) configures the port to accept\n[HTTP/2](https://nginx.org/en/docs/http/ngx_http_v2_module.html) connections.\nNormally, for this to work the `ssl` parameter should be\nspecified as well, but nginx can also be configured to accept HTTP/2\nconnections without SSL.\n\u003e The parameter is deprecated,\n\u003e the [http2](https://nginx.org/en/docs/http/ngx_http_v2_module.html#http2) directive\n\u003e should be used instead.\n\nThe `quic` parameter (1.25.0) configures the port to accept\n[QUIC](https://nginx.org/en/docs/http/ngx_http_v3_module.html) connections.\n\nThe `proxy_protocol` parameter (1.5.12)\nallows specifying that all connections accepted on this port should use the\n[PROXY protocol](http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt).\n\u003e The PROXY protocol version 2 is supported since version 1.13.11.\n\nThe `listen` directive\ncan have several additional parameters specific to socket-related system calls.\nThese parameters can be specified in any\n`listen` directive, but only once for a given\n*`address`*:*`port`* pair.\n\u003e In versions prior to 0.8.21, they could only be\n\u003e specified in the `listen` directive together with the\n\u003e `default` parameter.\n\n- `setfib`=*`number`*\n\n    this parameter (0.8.44) sets the associated routing table, FIB\n    (the `SO_SETFIB` option) for the listening socket.\n    This currently works only on FreeBSD.\n- `fastopen`=*`number`*\n\n    enables\n    “[TCP Fast Open](http://en.wikipedia.org/wiki/TCP_Fast_Open)”\n    for the listening socket (1.5.8) and\n    [limits](https://datatracker.ietf.org/doc/html/rfc7413#section-5.1)\n    the maximum length for the queue of connections that have not yet completed\n    the three-way handshake.\n    \u003e Do not enable this feature unless the server can handle\n    \u003e receiving the\n    \u003e [ same SYN packet with data](https://datatracker.ietf.org/doc/html/rfc7413#section-6.1) more than once.\n- `backlog`=*`number`*\n\n    sets the `backlog` parameter in the\n    `listen()` call that limits\n    the maximum length for the queue of pending connections.\n    By default,\n    `backlog` is set to -1 on FreeBSD, DragonFly BSD, and macOS,\n    and to 511 on other platforms.\n- `rcvbuf`=*`size`*\n\n    sets the receive buffer size\n    (the `SO_RCVBUF` option) for the listening socket.\n- `sndbuf`=*`size`*\n\n    sets the send buffer size\n    (the `SO_SNDBUF` option) for the listening socket.\n- `accept_filter`=*`filter`*\n\n    sets the name of accept filter\n    (the `SO_ACCEPTFILTER` option) for the listening socket\n    that filters incoming connections before passing them to\n    `accept()`.\n    This works only on FreeBSD and NetBSD 5.0+.\n    Possible values are\n    [dataready](http://man.freebsd.org/accf_data)\n    and\n    [httpready](http://man.freebsd.org/accf_http).\n- `deferred`\n\n    instructs to use a deferred `accept()`\n    (the `TCP_DEFER_ACCEPT` socket option) on Linux.\n- `bind`\n\n    instructs to make a separate `bind()` call for a given\n    *`address`*:*`port`* pair.\n    This is useful because if there are several `listen`\n    directives with the same port but different addresses, and one of the\n    `listen` directives listens on all addresses\n    for the given port (`*:`*`port`*), nginx\n    will `bind()` only to `*:`*`port`*.\n    It should be noted that the `getsockname()` system call will be\n    made in this case to determine the address that accepted the connection.\n    If the `setfib`,\n    `fastopen`,\n    `backlog`, `rcvbuf`,\n    `sndbuf`, `accept_filter`,\n    `deferred`, `ipv6only`,\n    `reuseport`,\n    or `so_keepalive` parameters\n    are used then for a given\n    *`address`*:*`port`* pair\n    a separate `bind()` call will always be made.\n- `ipv6only`=`on`|`off`\n\n    this parameter (0.7.42) determines\n    (via the `IPV6_V6ONLY` socket option)\n    whether an IPv6 socket listening on a wildcard address `[::]`\n    will accept only IPv6 connections or both IPv6 and IPv4 connections.\n    This parameter is turned on by default.\n    It can only be set once on start.\n    \u003e Prior to version 1.3.4,\n    \u003e if this parameter was omitted then the operating system’s settings were\n    \u003e in effect for the socket.\n- `reuseport`\n\n    this parameter (1.9.1) instructs to create an individual listening socket\n    for each worker process\n    (using the\n    `SO_REUSEPORT` socket option on Linux 3.9+ and DragonFly BSD,\n    or `SO_REUSEPORT_LB` on FreeBSD 12+), allowing a kernel\n    to distribute incoming connections between worker processes.\n    This currently works only on Linux 3.9+, DragonFly BSD,\n    and FreeBSD 12+ (1.15.1).\n    \u003e Inappropriate use of this option may have its security\n    \u003e [implications](http://man7.org/linux/man-pages/man7/socket.7.html).\n- `so_keepalive`=`on`|`off`|[*`keepidle`*]:[*`keepintvl`*]:[*`keepcnt`*]\n\n    this parameter (1.1.11) configures the “TCP keepalive” behavior\n    for the listening socket.\n    If this parameter is omitted then the operating system’s settings will be\n    in effect for the socket.\n    If it is set to the value “`on`”, the\n    `SO_KEEPALIVE` option is turned on for the socket.\n    If it is set to the value “`off`”, the\n    `SO_KEEPALIVE` option is turned off for the socket.\n    Some operating systems support setting of TCP keepalive parameters on\n    a per-socket basis using the `TCP_KEEPIDLE`,\n    `TCP_KEEPINTVL`, and `TCP_KEEPCNT` socket options.\n    On such systems (currently, Linux 2.4+, NetBSD 5+, and\n    FreeBSD 9.0-STABLE), they can be configured\n    using the *`keepidle`*, *`keepintvl`*, and\n    *`keepcnt`* parameters.\n    One or two parameters may be omitted, in which case the system default setting\n    for the corresponding socket option will be in effect.\n    For example,\n    ```\n    so_keepalive=30m::10\n    ```\n    will set the idle timeout (`TCP_KEEPIDLE`) to 30 minutes,\n    leave the probe interval (`TCP_KEEPINTVL`) at its system default,\n    and set the probes count (`TCP_KEEPCNT`) to 10 probes.\n\nExample:\n```\nlisten 127.0.0.1 default_server accept_filter=dataready backlog=1024;\n```",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e for IP,\nor the \u003cem\u003e\u003ccode\u003epath\u003c/code\u003e\u003c/em\u003e for a UNIX-domain socket on which\nthe server will accept requests.\nBoth \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e,\nor only \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e or only \u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e can be specified.\nAn \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e may also be a hostname, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten 127.0.0.1:8000;\nlisten 127.0.0.1;\nlisten 8000;\nlisten *:8000;\nlisten localhost:8000;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIPv6 addresses (0.7.36) are specified in square brackets:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten [::]:8000;\nlisten [::1];\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eUNIX-domain sockets (0.8.21) are specified with the “\u003ccode\u003eunix:\u003c/code\u003e”\nprefix:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten unix:/var/run/nginx.sock;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf only \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e is given, the port 80 is used.\u003c/p\u003e\n\n\u003cp\u003eIf the directive is not present then either \u003ccode\u003e*:80\u003c/code\u003e is used\nif nginx runs with the superuser privileges, or \u003ccode\u003e*:8000\u003c/code\u003e\notherwise.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003edefault_server\u003c/code\u003e parameter, if present,\nwill cause the server to become the default server for the specified\n\u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e pair.\nIf none of the directives have the \u003ccode\u003edefault_server\u003c/code\u003e\nparameter then the first server with the\n\u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e pair will be\nthe default server for this pair.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn versions prior to 0.8.21 this parameter is named simply\n\u003ccode\u003edefault\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe \u003ccode\u003essl\u003c/code\u003e parameter (0.7.14) allows specifying that all\nconnections accepted on this port should work in SSL mode.\nThis allows for a more compact \u003ca href=\"https://nginx.org/en/docs/http/configuring_https_servers.html#single_http_https_server\" target=\"_blank\"\u003econfiguration\u003c/a\u003e for the server that\nhandles both HTTP and HTTPS requests.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ehttp2\u003c/code\u003e parameter (1.9.5) configures the port to accept\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html\" target=\"_blank\"\u003eHTTP/2\u003c/a\u003e connections.\nNormally, for this to work the \u003ccode\u003essl\u003c/code\u003e parameter should be\nspecified as well, but nginx can also be configured to accept HTTP/2\nconnections without SSL.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe parameter is deprecated,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html#http2\" target=\"_blank\"\u003ehttp2\u003c/a\u003e directive\nshould be used instead.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe \u003ccode\u003equic\u003c/code\u003e parameter (1.25.0) configures the port to accept\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_v3_module.html\" target=\"_blank\"\u003eQUIC\u003c/a\u003e connections.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eproxy_protocol\u003c/code\u003e parameter (1.5.12)\nallows specifying that all connections accepted on this port should use the\n\u003ca href=\"http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt\" target=\"_blank\"\u003ePROXY protocol\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe PROXY protocol version 2 is supported since version 1.13.11.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe \u003ccode\u003elisten\u003c/code\u003e directive\ncan have several additional parameters specific to socket-related system calls.\nThese parameters can be specified in any\n\u003ccode\u003elisten\u003c/code\u003e directive, but only once for a given\n\u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e pair.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn versions prior to 0.8.21, they could only be\nspecified in the \u003ccode\u003elisten\u003c/code\u003e directive together with the\n\u003ccode\u003edefault\u003c/code\u003e parameter.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003esetfib\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003ethis parameter (0.8.44) sets the associated routing table, FIB\n(the \u003ccode\u003eSO_SETFIB\u003c/code\u003e option) for the listening socket.\nThis currently works only on FreeBSD.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003efastopen\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eenables\n“\u003ca href=\"http://en.wikipedia.org/wiki/TCP_Fast_Open\" target=\"_blank\"\u003eTCP Fast Open\u003c/a\u003e”\nfor the listening socket (1.5.8) and\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7413#section-5.1\" target=\"_blank\"\u003elimits\u003c/a\u003e\nthe maximum length for the queue of connections that have not yet completed\nthe three-way handshake.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDo not enable this feature unless the server can handle\nreceiving the\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7413#section-6.1\" target=\"_blank\"\u003e same SYN packet with data\u003c/a\u003e more than once.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebacklog\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the \u003ccode\u003ebacklog\u003c/code\u003e parameter in the\n\u003ccode\u003elisten()\u003c/code\u003e call that limits\nthe maximum length for the queue of pending connections.\nBy default,\n\u003ccode\u003ebacklog\u003c/code\u003e is set to -1 on FreeBSD, DragonFly BSD, and macOS,\nand to 511 on other platforms.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ercvbuf\u003c/code\u003e=\u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the receive buffer size\n(the \u003ccode\u003eSO_RCVBUF\u003c/code\u003e option) for the listening socket.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003esndbuf\u003c/code\u003e=\u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the send buffer size\n(the \u003ccode\u003eSO_SNDBUF\u003c/code\u003e option) for the listening socket.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eaccept_filter\u003c/code\u003e=\u003cem\u003e\u003ccode\u003efilter\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the name of accept filter\n(the \u003ccode\u003eSO_ACCEPTFILTER\u003c/code\u003e option) for the listening socket\nthat filters incoming connections before passing them to\n\u003ccode\u003eaccept()\u003c/code\u003e.\nThis works only on FreeBSD and NetBSD 5.0+.\nPossible values are\n\u003ca href=\"http://man.freebsd.org/accf_data\" target=\"_blank\"\u003edataready\u003c/a\u003e\nand\n\u003ca href=\"http://man.freebsd.org/accf_http\" target=\"_blank\"\u003ehttpready\u003c/a\u003e.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edeferred\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003einstructs to use a deferred \u003ccode\u003eaccept()\u003c/code\u003e\n(the \u003ccode\u003eTCP_DEFER_ACCEPT\u003c/code\u003e socket option) on Linux.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebind\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003einstructs to make a separate \u003ccode\u003ebind()\u003c/code\u003e call for a given\n\u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e pair.\nThis is useful because if there are several \u003ccode\u003elisten\u003c/code\u003e\ndirectives with the same port but different addresses, and one of the\n\u003ccode\u003elisten\u003c/code\u003e directives listens on all addresses\nfor the given port (\u003ccode\u003e*:\u003c/code\u003e\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e), nginx\nwill \u003ccode\u003ebind()\u003c/code\u003e only to \u003ccode\u003e*:\u003c/code\u003e\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e.\nIt should be noted that the \u003ccode\u003egetsockname()\u003c/code\u003e system call will be\nmade in this case to determine the address that accepted the connection.\nIf the \u003ccode\u003esetfib\u003c/code\u003e,\n\u003ccode\u003efastopen\u003c/code\u003e,\n\u003ccode\u003ebacklog\u003c/code\u003e, \u003ccode\u003ercvbuf\u003c/code\u003e,\n\u003ccode\u003esndbuf\u003c/code\u003e, \u003ccode\u003eaccept_filter\u003c/code\u003e,\n\u003ccode\u003edeferred\u003c/code\u003e, \u003ccode\u003eipv6only\u003c/code\u003e,\n\u003ccode\u003ereuseport\u003c/code\u003e,\nor \u003ccode\u003eso_keepalive\u003c/code\u003e parameters\nare used then for a given\n\u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e pair\na separate \u003ccode\u003ebind()\u003c/code\u003e call will always be made.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eipv6only\u003c/code\u003e=\u003ccode\u003eon\u003c/code\u003e|\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethis parameter (0.7.42) determines\n(via the \u003ccode\u003eIPV6_V6ONLY\u003c/code\u003e socket option)\nwhether an IPv6 socket listening on a wildcard address \u003ccode\u003e[::]\u003c/code\u003e\nwill accept only IPv6 connections or both IPv6 and IPv4 connections.\nThis parameter is turned on by default.\nIt can only be set once on start.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.3.4,\nif this parameter was omitted then the operating system’s settings were\nin effect for the socket.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ereuseport\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethis parameter (1.9.1) instructs to create an individual listening socket\nfor each worker process\n(using the\n\u003ccode\u003eSO_REUSEPORT\u003c/code\u003e socket option on Linux 3.9+ and DragonFly BSD,\nor \u003ccode\u003eSO_REUSEPORT_LB\u003c/code\u003e on FreeBSD 12+), allowing a kernel\nto distribute incoming connections between worker processes.\nThis currently works only on Linux 3.9+, DragonFly BSD,\nand FreeBSD 12+ (1.15.1).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eInappropriate use of this option may have its security\n\u003ca href=\"http://man7.org/linux/man-pages/man7/socket.7.html\" target=\"_blank\"\u003eimplications\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eso_keepalive\u003c/code\u003e=\u003ccode\u003eon\u003c/code\u003e|\u003ccode\u003eoff\u003c/code\u003e|[\u003cem\u003e\u003ccode\u003ekeepidle\u003c/code\u003e\u003c/em\u003e]:[\u003cem\u003e\u003ccode\u003ekeepintvl\u003c/code\u003e\u003c/em\u003e]:[\u003cem\u003e\u003ccode\u003ekeepcnt\u003c/code\u003e\u003c/em\u003e]\u003c/p\u003e\n\n\u003cp\u003ethis parameter (1.1.11) configures the “TCP keepalive” behavior\nfor the listening socket.\nIf this parameter is omitted then the operating system’s settings will be\nin effect for the socket.\nIf it is set to the value “\u003ccode\u003eon\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e option is turned on for the socket.\nIf it is set to the value “\u003ccode\u003eoff\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e option is turned off for the socket.\nSome operating systems support setting of TCP keepalive parameters on\na per-socket basis using the \u003ccode\u003eTCP_KEEPIDLE\u003c/code\u003e,\n\u003ccode\u003eTCP_KEEPINTVL\u003c/code\u003e, and \u003ccode\u003eTCP_KEEPCNT\u003c/code\u003e socket options.\nOn such systems (currently, Linux 2.4+, NetBSD 5+, and\nFreeBSD 9.0-STABLE), they can be configured\nusing the \u003cem\u003e\u003ccode\u003ekeepidle\u003c/code\u003e\u003c/em\u003e, \u003cem\u003e\u003ccode\u003ekeepintvl\u003c/code\u003e\u003c/em\u003e, and\n\u003cem\u003e\u003ccode\u003ekeepcnt\u003c/code\u003e\u003c/em\u003e parameters.\nOne or two parameters may be omitted, in which case the system default setting\nfor the corresponding socket option will be in effect.\nFor example,\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eso_keepalive=30m::10\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewill set the idle timeout (\u003ccode\u003eTCP_KEEPIDLE\u003c/code\u003e) to 30 minutes,\nleave the probe interval (\u003ccode\u003eTCP_KEEPINTVL\u003c/code\u003e) at its system default,\nand set the probes count (\u003ccode\u003eTCP_KEEPCNT\u003c/code\u003e) to 10 probes.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten 127.0.0.1 default_server accept_filter=dataready backlog=1024;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "location",
          "default": "",
          "contexts": [
            "server",
            "location"
          ],
          "syntax": [
            "[ `=` | `~` | `~*` | `^~` ] *`uri`* `{...}`",
            "`@`*`name`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Sets configuration depending on a request URI.\n\nThe matching is performed against a normalized URI,\nafter decoding the text encoded in the “`%XX`” form,\nresolving references to relative path components “`.`”\nand “`..`”, and possible\n[compression](https://nginx.org/en/docs/http/ngx_http_core_module.html#merge_slashes) of two or more\nadjacent slashes into a single slash.\n\nA location can either be defined by a prefix string, or by a regular expression.\nRegular expressions are specified with the preceding\n“`~*`” modifier (for case-insensitive matching), or the\n“`~`” modifier (for case-sensitive matching).\nTo find location matching a given request, nginx first checks\nlocations defined using the prefix strings (prefix locations).\nAmong them, the location with the longest matching\nprefix is selected and remembered.\nThen regular expressions are checked, in the order of their appearance\nin the configuration file.\nThe search of regular expressions terminates on the first match,\nand the corresponding configuration is used.\nIf no match with a regular expression is found then the\nconfiguration of the prefix location remembered earlier is used.\n\n`location` blocks can be nested, with some exceptions\nmentioned below.\n\nFor case-insensitive operating systems such as macOS and Cygwin,\nmatching with prefix strings ignores a case (0.7.7).\nHowever, comparison is limited to one-byte locales.\n\nRegular expressions can contain captures (0.7.40) that can later\nbe used in other directives.\n\nIf the longest matching prefix location has the “`^~`” modifier\nthen regular expressions are not checked.\n\nAlso, using the “`=`” modifier it is possible to define\nan exact match of URI and location.\nIf an exact match is found, the search terminates.\nFor example, if a “`/`” request happens frequently,\ndefining “`location = /`” will speed up the processing\nof these requests, as search terminates right after the first\ncomparison.\nSuch a location cannot obviously contain nested locations.\n\n\u003e In versions from 0.7.1 to 0.8.41, if a request matched the prefix\n\u003e location without the “`=`” and “`^~`”\n\u003e modifiers, the search also terminated and regular expressions were\n\u003e not checked.\n\nLet’s illustrate the above by an example:\n```\nlocation = / {\n    [ configuration A ]\n}\n\nlocation / {\n    [ configuration B ]\n}\n\nlocation /documents/ {\n    [ configuration C ]\n}\n\nlocation ^~ /images/ {\n    [ configuration D ]\n}\n\nlocation ~* \\.(gif|jpg|jpeg)$ {\n    [ configuration E ]\n}\n```\nThe “`/`” request will match configuration A,\nthe “`/index.html`” request will match configuration B,\nthe “`/documents/document.html`” request will match\nconfiguration C,\nthe “`/images/1.gif`” request will match configuration D, and\nthe “`/documents/1.jpg`” request will match configuration E.\n\nThe “`@`” prefix defines a named location.\nSuch a location is not used for a regular request processing, but instead\nused for request redirection.\nThey cannot be nested, and cannot contain nested locations.\n\nIf a location is defined by a prefix string that ends with the slash character,\nand requests are processed by one of\n[`proxy_pass`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass),\n[`fastcgi_pass`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass),\n[`uwsgi_pass`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass),\n[`scgi_pass`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass),\n[`memcached_pass`](https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_pass), or\n[`grpc_pass`](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass),\nthen the special processing is performed.\nIn response to a request with URI equal to this string,\nbut without the trailing slash,\na permanent redirect with the code 301 will be returned to the requested URI\nwith the slash appended.\nIf this is not desired, an exact match of the URI and location could be\ndefined like this:\n```\nlocation /user/ {\n    proxy_pass http://user.example.com;\n}\n\nlocation = /user {\n    proxy_pass http://login.example.com;\n}\n```",
          "description_html": "\u003cp\u003eSets configuration depending on a request URI.\u003c/p\u003e\n\n\u003cp\u003eThe matching is performed against a normalized URI,\nafter decoding the text encoded in the “\u003ccode\u003e%XX\u003c/code\u003e” form,\nresolving references to relative path components “\u003ccode\u003e.\u003c/code\u003e”\nand “\u003ccode\u003e..\u003c/code\u003e”, and possible\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#merge_slashes\" target=\"_blank\"\u003ecompression\u003c/a\u003e of two or more\nadjacent slashes into a single slash.\u003c/p\u003e\n\n\u003cp\u003eA location can either be defined by a prefix string, or by a regular expression.\nRegular expressions are specified with the preceding\n“\u003ccode\u003e~*\u003c/code\u003e” modifier (for case-insensitive matching), or the\n“\u003ccode\u003e~\u003c/code\u003e” modifier (for case-sensitive matching).\nTo find location matching a given request, nginx first checks\nlocations defined using the prefix strings (prefix locations).\nAmong them, the location with the longest matching\nprefix is selected and remembered.\nThen regular expressions are checked, in the order of their appearance\nin the configuration file.\nThe search of regular expressions terminates on the first match,\nand the corresponding configuration is used.\nIf no match with a regular expression is found then the\nconfiguration of the prefix location remembered earlier is used.\u003c/p\u003e\n\n\u003cp\u003e\u003ccode\u003elocation\u003c/code\u003e blocks can be nested, with some exceptions\nmentioned below.\u003c/p\u003e\n\n\u003cp\u003eFor case-insensitive operating systems such as macOS and Cygwin,\nmatching with prefix strings ignores a case (0.7.7).\nHowever, comparison is limited to one-byte locales.\u003c/p\u003e\n\n\u003cp\u003eRegular expressions can contain captures (0.7.40) that can later\nbe used in other directives.\u003c/p\u003e\n\n\u003cp\u003eIf the longest matching prefix location has the “\u003ccode\u003e^~\u003c/code\u003e” modifier\nthen regular expressions are not checked.\u003c/p\u003e\n\n\u003cp\u003eAlso, using the “\u003ccode\u003e=\u003c/code\u003e” modifier it is possible to define\nan exact match of URI and location.\nIf an exact match is found, the search terminates.\nFor example, if a “\u003ccode\u003e/\u003c/code\u003e” request happens frequently,\ndefining “\u003ccode\u003elocation = /\u003c/code\u003e” will speed up the processing\nof these requests, as search terminates right after the first\ncomparison.\nSuch a location cannot obviously contain nested locations.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn versions from 0.7.1 to 0.8.41, if a request matched the prefix\nlocation without the “\u003ccode\u003e=\u003c/code\u003e” and “\u003ccode\u003e^~\u003c/code\u003e”\nmodifiers, the search also terminated and regular expressions were\nnot checked.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eLet’s illustrate the above by an example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation = / {\n    [ configuration A ]\n}\n\nlocation / {\n    [ configuration B ]\n}\n\nlocation /documents/ {\n    [ configuration C ]\n}\n\nlocation ^~ /images/ {\n    [ configuration D ]\n}\n\nlocation ~* \\.(gif|jpg|jpeg)$ {\n    [ configuration E ]\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe “\u003ccode\u003e/\u003c/code\u003e” request will match configuration A,\nthe “\u003ccode\u003e/index.html\u003c/code\u003e” request will match configuration B,\nthe “\u003ccode\u003e/documents/document.html\u003c/code\u003e” request will match\nconfiguration C,\nthe “\u003ccode\u003e/images/1.gif\u003c/code\u003e” request will match configuration D, and\nthe “\u003ccode\u003e/documents/1.jpg\u003c/code\u003e” request will match configuration E.\u003c/p\u003e\n\n\u003cp\u003eThe “\u003ccode\u003e@\u003c/code\u003e” prefix defines a named location.\nSuch a location is not used for a regular request processing, but instead\nused for request redirection.\nThey cannot be nested, and cannot contain nested locations.\u003c/p\u003e\n\n\u003cp\u003eIf a location is defined by a prefix string that ends with the slash character,\nand requests are processed by one of\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\" target=\"_blank\"\u003e\u003ccode\u003eproxy_pass\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_pass\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_pass\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass\" target=\"_blank\"\u003e\u003ccode\u003escgi_pass\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_pass\" target=\"_blank\"\u003e\u003ccode\u003ememcached_pass\u003c/code\u003e\u003c/a\u003e, or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass\" target=\"_blank\"\u003e\u003ccode\u003egrpc_pass\u003c/code\u003e\u003c/a\u003e,\nthen the special processing is performed.\nIn response to a request with URI equal to this string,\nbut without the trailing slash,\na permanent redirect with the code 301 will be returned to the requested URI\nwith the slash appended.\nIf this is not desired, an exact match of the URI and location could be\ndefined like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /user/ {\n    proxy_pass http://user.example.com;\n}\n\nlocation = /user {\n    proxy_pass http://login.example.com;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "log_not_found",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables logging of errors about not found files into\n[`error_log`](https://nginx.org/en/docs/ngx_core_module.html#error_log).",
          "description_html": "\u003cp\u003eEnables or disables logging of errors about not found files into\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\" target=\"_blank\"\u003e\u003ccode\u003eerror_log\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "log_subrequest",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables logging of subrequests into\n[`access_log`](https://nginx.org/en/docs/http/ngx_http_log_module.html#access_log).",
          "description_html": "\u003cp\u003eEnables or disables logging of subrequests into\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_log_module.html#access_log\" target=\"_blank\"\u003e\u003ccode\u003eaccess_log\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "max_ranges",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Limits the maximum allowed number of ranges in byte-range requests.\nRequests that exceed the limit are processed as if there were no\nbyte ranges specified.\nBy default, the number of ranges is not limited.\nThe zero value disables the byte-range support completely.",
          "description_html": "\u003cp\u003eLimits the maximum allowed number of ranges in byte-range requests.\nRequests that exceed the limit are processed as if there were no\nbyte ranges specified.\nBy default, the number of ranges is not limited.\nThe zero value disables the byte-range support completely.\u003c/p\u003e\n"
        },
        {
          "name": "merge_slashes",
          "default": "on",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables compression of two or more adjacent slashes\nin a URI into a single slash.\n\nNote that compression is essential for the correct matching of prefix string\nand regular expression locations.\nWithout it, the “`//scripts/one.php`” request would not match\n```\nlocation /scripts/ {\n    ...\n}\n```\nand might be processed as a static file.\nSo it gets converted to “`/scripts/one.php`”.\n\nTurning the compression `off` can become necessary if a URI\ncontains base64-encoded names, since base64 uses the “`/`”\ncharacter internally.\nHowever, for security considerations, it is better to avoid turning\nthe compression off.\n\nIf the directive is specified on the [`server`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server) level,\nthe value from the default server can be used.\nDetails are provided in the\n“[Virtual server selection](https://nginx.org/en/docs/http/server_names.html#virtual_server_selection)” section.",
          "description_html": "\u003cp\u003eEnables or disables compression of two or more adjacent slashes\nin a URI into a single slash.\u003c/p\u003e\n\n\u003cp\u003eNote that compression is essential for the correct matching of prefix string\nand regular expression locations.\nWithout it, the “\u003ccode\u003e//scripts/one.php\u003c/code\u003e” request would not match\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /scripts/ {\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eand might be processed as a static file.\nSo it gets converted to “\u003ccode\u003e/scripts/one.php\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eTurning the compression \u003ccode\u003eoff\u003c/code\u003e can become necessary if a URI\ncontains base64-encoded names, since base64 uses the “\u003ccode\u003e/\u003c/code\u003e”\ncharacter internally.\nHowever, for security considerations, it is better to avoid turning\nthe compression off.\u003c/p\u003e\n\n\u003cp\u003eIf the directive is specified on the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e level,\nthe value from the default server can be used.\nDetails are provided in the\n“\u003ca href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\" target=\"_blank\"\u003eVirtual server selection\u003c/a\u003e” section.\u003c/p\u003e\n"
        },
        {
          "name": "msie_padding",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables adding comments to responses for MSIE clients with status\ngreater than 400 to increase the response size to 512 bytes.",
          "description_html": "\u003cp\u003eEnables or disables adding comments to responses for MSIE clients with status\ngreater than 400 to increase the response size to 512 bytes.\u003c/p\u003e\n"
        },
        {
          "name": "msie_refresh",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables issuing refreshes instead of redirects for MSIE clients.",
          "description_html": "\u003cp\u003eEnables or disables issuing refreshes instead of redirects for MSIE clients.\u003c/p\u003e\n"
        },
        {
          "name": "open_file_cache",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`off`",
            "`max`=*`N`* [`inactive`=*`time`*]"
          ],
          "isBlock": false,
          "description_md": "Configures a cache that can store:\n- open file descriptors, their sizes and modification times;\n- information on existence of directories;\n- file lookup errors, such as “file not found”, “no read permission”,\n    and so on.\n    \u003e Caching of errors should be enabled separately by the\n    \u003e [`open_file_cache_errors`](https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache_errors)\n    \u003e directive.\n\nThe directive has the following parameters:\n- `max`\n\n    sets the maximum number of elements in the cache;\n    on cache overflow the least recently used (LRU) elements are removed;\n- `inactive`\n\n    defines a time after which an element is removed from the cache\n    if it has not been accessed during this time;\n    by default, it is 60 seconds;\n- `off`\n\n    disables the cache.\n\nExample:\n```\nopen_file_cache          max=1000 inactive=20s;\nopen_file_cache_valid    30s;\nopen_file_cache_min_uses 2;\nopen_file_cache_errors   on;\n```",
          "description_html": "\u003cp\u003eConfigures a cache that can store:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eopen file descriptors, their sizes and modification times;\u003c/li\u003e\n\u003cli\u003einformation on existence of directories;\u003c/li\u003e\n\u003cli\u003efile lookup errors, such as “file not found”, “no read permission”,\nand so on.\n\u0026gt; Caching of errors should be enabled separately by the\n\u0026gt; \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache_errors\" target=\"_blank\"\u003e\u003ccode\u003eopen_file_cache_errors\u003c/code\u003e\u003c/a\u003e\n\u0026gt; directive.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe directive has the following parameters:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emax\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esets the maximum number of elements in the cache;\non cache overflow the least recently used (LRU) elements are removed;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einactive\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edefines a time after which an element is removed from the cache\nif it has not been accessed during this time;\nby default, it is 60 seconds;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables the cache.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eopen_file_cache          max=1000 inactive=20s;\nopen_file_cache_valid    30s;\nopen_file_cache_min_uses 2;\nopen_file_cache_errors   on;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "open_file_cache_errors",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables caching of file lookup errors by\n[`open_file_cache`](https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache).",
          "description_html": "\u003cp\u003eEnables or disables caching of file lookup errors by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache\" target=\"_blank\"\u003e\u003ccode\u003eopen_file_cache\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "open_file_cache_min_uses",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the minimum *`number`* of file accesses during\nthe period configured by the `inactive` parameter\nof the [`open_file_cache`](https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache) directive, required for a file\ndescriptor to remain open in the cache.",
          "description_html": "\u003cp\u003eSets the minimum \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e of file accesses during\nthe period configured by the \u003ccode\u003einactive\u003c/code\u003e parameter\nof the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache\" target=\"_blank\"\u003e\u003ccode\u003eopen_file_cache\u003c/code\u003e\u003c/a\u003e directive, required for a file\ndescriptor to remain open in the cache.\u003c/p\u003e\n"
        },
        {
          "name": "open_file_cache_valid",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a time after which\n[`open_file_cache`](https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache)\nelements should be validated.",
          "description_html": "\u003cp\u003eSets a time after which\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache\" target=\"_blank\"\u003e\u003ccode\u003eopen_file_cache\u003c/code\u003e\u003c/a\u003e\nelements should be validated.\u003c/p\u003e\n"
        },
        {
          "name": "output_buffers",
          "default": "2 32k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* and *`size`* of the\nbuffers used for reading a response from a disk.\n\u003e Prior to version 1.9.5, the default value was 1 32k.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the\nbuffers used for reading a response from a disk.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.9.5, the default value was 1 32k.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "port_in_redirect",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables specifying the port in\n[absolute](https://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect) redirects issued by nginx.\n\nThe use of the primary server name in redirects is controlled by\nthe [`server_name_in_redirect`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect) directive.",
          "description_html": "\u003cp\u003eEnables or disables specifying the port in\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect\" target=\"_blank\"\u003eabsolute\u003c/a\u003e redirects issued by nginx.\u003c/p\u003e\n\n\u003cp\u003eThe use of the primary server name in redirects is controlled by\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect\" target=\"_blank\"\u003e\u003ccode\u003eserver_name_in_redirect\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "postpone_output",
          "default": "1460",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "If possible, the transmission of client data will be postponed until\nnginx has at least *`size`* bytes of data to send.\nThe zero value disables postponing data transmission.",
          "description_html": "\u003cp\u003eIf possible, the transmission of client data will be postponed until\nnginx has at least \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e bytes of data to send.\nThe zero value disables postponing data transmission.\u003c/p\u003e\n"
        },
        {
          "name": "read_ahead",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the amount of pre-reading for the kernel when working with file.\n\nOn Linux, the\n`posix_fadvise(0, 0, 0, POSIX_FADV_SEQUENTIAL)`\nsystem call is used, and so the *`size`* parameter is ignored.\n\nOn FreeBSD, the\n`fcntl(O_READAHEAD,`\n*`size`*`)`\nsystem call, supported since FreeBSD 9.0-CURRENT, is used.\nFreeBSD 7 has to be\n[patched](http://sysoev.ru/freebsd/patch.readahead.txt).",
          "description_html": "\u003cp\u003eSets the amount of pre-reading for the kernel when working with file.\u003c/p\u003e\n\n\u003cp\u003eOn Linux, the\n\u003ccode\u003eposix_fadvise(0, 0, 0, POSIX_FADV_SEQUENTIAL)\u003c/code\u003e\nsystem call is used, and so the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e parameter is ignored.\u003c/p\u003e\n\n\u003cp\u003eOn FreeBSD, the\n\u003ccode\u003efcntl(O_READAHEAD,\u003c/code\u003e\n\u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\u003ccode\u003e)\u003c/code\u003e\nsystem call, supported since FreeBSD 9.0-CURRENT, is used.\nFreeBSD 7 has to be\n\u003ca href=\"http://sysoev.ru/freebsd/patch.readahead.txt\" target=\"_blank\"\u003epatched\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "recursive_error_pages",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables doing several redirects using the\n[`error_page`](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page)\ndirective.\nThe number of such redirects is [limited](https://nginx.org/en/docs/http/ngx_http_core_module.html#internal).",
          "description_html": "\u003cp\u003eEnables or disables doing several redirects using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\" target=\"_blank\"\u003e\u003ccode\u003eerror_page\u003c/code\u003e\u003c/a\u003e\ndirective.\nThe number of such redirects is \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#internal\" target=\"_blank\"\u003elimited\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "request_pool_size",
          "default": "4k",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Allows accurate tuning of per-request memory allocations.\nThis directive has minimal impact on performance\nand should not generally be used.",
          "description_html": "\u003cp\u003eAllows accurate tuning of per-request memory allocations.\nThis directive has minimal impact on performance\nand should not generally be used.\u003c/p\u003e\n"
        },
        {
          "name": "reset_timedout_connection",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables resetting timed out connections\nand connections\n[closed](https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#return)\nwith the non-standard code 444 (1.15.2).\nThe reset is performed as follows.\nBefore closing a socket, the\n`SO_LINGER`\noption is set on it with a timeout value of 0.\nWhen the socket is closed, TCP RST is sent to the client, and all memory\noccupied by this socket is released.\nThis helps avoid keeping an already closed socket with filled buffers\nin a FIN_WAIT1 state for a long time.\n\nIt should be noted that timed out keep-alive connections are\nclosed normally.",
          "description_html": "\u003cp\u003eEnables or disables resetting timed out connections\nand connections\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#return\" target=\"_blank\"\u003eclosed\u003c/a\u003e\nwith the non-standard code 444 (1.15.2).\nThe reset is performed as follows.\nBefore closing a socket, the\n\u003ccode\u003eSO_LINGER\u003c/code\u003e\noption is set on it with a timeout value of 0.\nWhen the socket is closed, TCP RST is sent to the client, and all memory\noccupied by this socket is released.\nThis helps avoid keeping an already closed socket with filled buffers\nin a FIN_WAIT1 state for a long time.\u003c/p\u003e\n\n\u003cp\u003eIt should be noted that timed out keep-alive connections are\nclosed normally.\u003c/p\u003e\n"
        },
        {
          "name": "resolver",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`address`* ... [`valid`=*`time`*] [`ipv4`=`on`|`off`] [`ipv6`=`on`|`off`] [`status_zone`=*`zone`*]"
          ],
          "isBlock": false,
          "description_md": "Configures name servers used to resolve names of upstream servers\ninto addresses, for example:\n```\nresolver 127.0.0.1 [::1]:5353;\n```\nThe address can be specified as a domain name or IP address,\nwith an optional port (1.3.1, 1.2.2).\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n\u003e Before version 1.1.7, only a single name server could be configured.\n\u003e Specifying name servers using IPv6 addresses is supported\n\u003e starting from versions 1.3.1 and 1.2.2.\n\nBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv4 or IPv6 addresses is not desired,\nthe `ipv4=off` (1.23.1) or\nthe `ipv6=off` parameter can be specified.\n\u003e Resolving of names into IPv6 addresses is supported\n\u003e starting from version 1.5.8.\n\nBy default, nginx caches answers using the TTL value of a response.\nAn optional `valid` parameter allows overriding it:\n```\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n```\n\u003e Before version 1.1.9, tuning of caching time was not possible,\n\u003e and nginx always cached answers for the duration of 5 minutes.\n\n\u003e To prevent DNS spoofing, it is recommended\n\u003e configuring DNS servers in a properly secured trusted local network.\n\nThe optional `status_zone` parameter (1.17.1)\nenables\n[collection](https://nginx.org/en/docs/http/ngx_http_api_module.html#resolvers_)\nof DNS server statistics of requests and responses\nin the specified *`zone`*.\nThe parameter is available as part of our\n[commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eConfigures name servers used to resolve names of upstream servers\ninto addresses, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver 127.0.0.1 [::1]:5353;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe address can be specified as a domain name or IP address,\nwith an optional port (1.3.1, 1.2.2).\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore version 1.1.7, only a single name server could be configured.\nSpecifying name servers using IPv6 addresses is supported\nstarting from versions 1.3.1 and 1.2.2.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv4 or IPv6 addresses is not desired,\nthe \u003ccode\u003eipv4=off\u003c/code\u003e (1.23.1) or\nthe \u003ccode\u003eipv6=off\u003c/code\u003e parameter can be specified.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eResolving of names into IPv6 addresses is supported\nstarting from version 1.5.8.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBy default, nginx caches answers using the TTL value of a response.\nAn optional \u003ccode\u003evalid\u003c/code\u003e parameter allows overriding it:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver 127.0.0.1 [::1]:5353 valid=30s;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore version 1.1.9, tuning of caching time was not possible,\nand nginx always cached answers for the duration of 5 minutes.\u003c/p\u003e\n\n\u003cp\u003eTo prevent DNS spoofing, it is recommended\nconfiguring DNS servers in a properly secured trusted local network.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003estatus_zone\u003c/code\u003e parameter (1.17.1)\nenables\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#resolvers_\" target=\"_blank\"\u003ecollection\u003c/a\u003e\nof DNS server statistics of requests and responses\nin the specified \u003cem\u003e\u003ccode\u003ezone\u003c/code\u003e\u003c/em\u003e.\nThe parameter is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "resolver_timeout",
          "default": "30s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for name resolution, for example:\n```\nresolver_timeout 5s;\n```",
          "description_html": "\u003cp\u003eSets a timeout for name resolution, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver_timeout 5s;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "root",
          "default": "html",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "*`path`*"
          ],
          "isBlock": false,
          "description_md": "Sets the root directory for requests.\nFor example, with the following configuration\n```\nlocation /i/ {\n    root /data/w3;\n}\n```\nThe `/data/w3/i/top.gif` file will be sent in response to\nthe “`/i/top.gif`” request.\n\nThe *`path`* value can contain variables,\nexcept `$document_root` and `$realpath_root`.\n\nA path to the file is constructed by merely adding a URI to the value\nof the `root` directive.\nIf a URI has to be modified, the\n[`alias`](https://nginx.org/en/docs/http/ngx_http_core_module.html#alias) directive should be used.",
          "description_html": "\u003cp\u003eSets the root directory for requests.\nFor example, with the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /i/ {\n    root /data/w3;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003e/data/w3/i/top.gif\u003c/code\u003e file will be sent in response to\nthe “\u003ccode\u003e/i/top.gif\u003c/code\u003e” request.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cem\u003e\u003ccode\u003epath\u003c/code\u003e\u003c/em\u003e value can contain variables,\nexcept \u003ccode\u003e$document_root\u003c/code\u003e and \u003ccode\u003e$realpath_root\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA path to the file is constructed by merely adding a URI to the value\nof the \u003ccode\u003eroot\u003c/code\u003e directive.\nIf a URI has to be modified, the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\" target=\"_blank\"\u003e\u003ccode\u003ealias\u003c/code\u003e\u003c/a\u003e directive should be used.\u003c/p\u003e\n"
        },
        {
          "name": "satisfy",
          "default": "all",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`all` | `any`"
          ],
          "isBlock": false,
          "description_md": "Allows access if all (`all`) or at least one\n(`any`) of the\n[ngx_http_access_module](https://nginx.org/en/docs/http/ngx_http_access_module.html),\n[ngx_http_auth_basic_module](https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html),\n[ngx_http_auth_request_module](https://nginx.org/en/docs/http/ngx_http_auth_request_module.html),\nor\n[ngx_http_auth_jwt_module](https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html)\nmodules allow access.\n\nExample:\n```\nlocation / {\n    satisfy any;\n\n    allow 192.168.1.0/32;\n    deny  all;\n\n    auth_basic           \"closed site\";\n    auth_basic_user_file conf/htpasswd;\n}\n```",
          "description_html": "\u003cp\u003eAllows access if all (\u003ccode\u003eall\u003c/code\u003e) or at least one\n(\u003ccode\u003eany\u003c/code\u003e) of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_access_module.html\" target=\"_blank\"\u003engx_http_access_module\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html\" target=\"_blank\"\u003engx_http_auth_basic_module\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_request_module.html\" target=\"_blank\"\u003engx_http_auth_request_module\u003c/a\u003e,\nor\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_auth_jwt_module.html\" target=\"_blank\"\u003engx_http_auth_jwt_module\u003c/a\u003e\nmodules allow access.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    satisfy any;\n\n    allow 192.168.1.0/32;\n    deny  all;\n\n    auth_basic           \u0026quot;closed site\u0026quot;;\n    auth_basic_user_file conf/htpasswd;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "send_lowat",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "If the directive is set to a non-zero value, nginx will try to minimize\nthe number of send operations on client sockets by using either\n`NOTE_LOWAT` flag of the\n[`kqueue`](https://nginx.org/en/docs/events.html#kqueue) method\nor the `SO_SNDLOWAT` socket option.\nIn both cases the specified *`size`* is used.\n\nThis directive is ignored on Linux, Solaris, and Windows.",
          "description_html": "\u003cp\u003eIf the directive is set to a non-zero value, nginx will try to minimize\nthe number of send operations on client sockets by using either\n\u003ccode\u003eNOTE_LOWAT\u003c/code\u003e flag of the\n\u003ca href=\"https://nginx.org/en/docs/events.html#kqueue\" target=\"_blank\"\u003e\u003ccode\u003ekqueue\u003c/code\u003e\u003c/a\u003e method\nor the \u003ccode\u003eSO_SNDLOWAT\u003c/code\u003e socket option.\nIn both cases the specified \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e is used.\u003c/p\u003e\n\n\u003cp\u003eThis directive is ignored on Linux, Solaris, and Windows.\u003c/p\u003e\n"
        },
        {
          "name": "send_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for transmitting a response to the client.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole response.\nIf the client does not receive anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eSets a timeout for transmitting a response to the client.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole response.\nIf the client does not receive anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "sendfile",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the use of\n`sendfile()`.\n\nStarting from nginx 0.8.12 and FreeBSD 5.2.1,\n[`aio`](https://nginx.org/en/docs/http/ngx_http_core_module.html#aio) can be used to pre-load data\nfor `sendfile()`:\n```\nlocation /video/ {\n    sendfile       on;\n    tcp_nopush     on;\n    aio            on;\n}\n```\nIn this configuration, `sendfile()` is called with\nthe `SF_NODISKIO` flag which causes it not to block on disk I/O,\nbut, instead, report back that the data are not in memory.\nnginx then initiates an asynchronous data load by reading one byte.\nOn the first read, the FreeBSD kernel loads the first 128K bytes\nof a file into memory, although next reads will only load data in 16K chunks.\nThis can be changed using the\n[`read_ahead`](https://nginx.org/en/docs/http/ngx_http_core_module.html#read_ahead) directive.\n\u003e Before version 1.7.11, pre-loading could be enabled with\n\u003e `aio sendfile;`.",
          "description_html": "\u003cp\u003eEnables or disables the use of\n\u003ccode\u003esendfile()\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eStarting from nginx 0.8.12 and FreeBSD 5.2.1,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\" target=\"_blank\"\u003e\u003ccode\u003eaio\u003c/code\u003e\u003c/a\u003e can be used to pre-load data\nfor \u003ccode\u003esendfile()\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /video/ {\n    sendfile       on;\n    tcp_nopush     on;\n    aio            on;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn this configuration, \u003ccode\u003esendfile()\u003c/code\u003e is called with\nthe \u003ccode\u003eSF_NODISKIO\u003c/code\u003e flag which causes it not to block on disk I/O,\nbut, instead, report back that the data are not in memory.\nnginx then initiates an asynchronous data load by reading one byte.\nOn the first read, the FreeBSD kernel loads the first 128K bytes\nof a file into memory, although next reads will only load data in 16K chunks.\nThis can be changed using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#read_ahead\" target=\"_blank\"\u003e\u003ccode\u003eread_ahead\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore version 1.7.11, pre-loading could be enabled with\n\u003ccode\u003eaio sendfile;\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "sendfile_max_chunk",
          "default": "2m",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Limits the amount of data that can be\ntransferred in a single `sendfile()` call.\nWithout the limit, one fast connection may seize the worker process entirely.\n\u003e Prior to version 1.21.4, by default there was no limit.",
          "description_html": "\u003cp\u003eLimits the amount of data that can be\ntransferred in a single \u003ccode\u003esendfile()\u003c/code\u003e call.\nWithout the limit, one fast connection may seize the worker process entirely.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.21.4, by default there was no limit.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "server",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            " `{...}`"
          ],
          "isBlock": true,
          "description_md": "Sets configuration for a virtual server.\nThere is no clear separation between IP-based (based on the IP address)\nand name-based (based on the \"Host\" request header field)\nvirtual servers.\nInstead, the [`listen`](https://nginx.org/en/docs/http/ngx_http_core_module.html#listen) directives describe all\naddresses and ports that should accept connections for the server, and the\n[`server_name`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name) directive lists all server names.\nExample configurations are provided in the\n“[How nginx processes a request](https://nginx.org/en/docs/http/request_processing.html)” document.",
          "description_html": "\u003cp\u003eSets configuration for a virtual server.\nThere is no clear separation between IP-based (based on the IP address)\nand name-based (based on the \u0026ldquo;Host\u0026rdquo; request header field)\nvirtual servers.\nInstead, the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\" target=\"_blank\"\u003e\u003ccode\u003elisten\u003c/code\u003e\u003c/a\u003e directives describe all\naddresses and ports that should accept connections for the server, and the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name\" target=\"_blank\"\u003e\u003ccode\u003eserver_name\u003c/code\u003e\u003c/a\u003e directive lists all server names.\nExample configurations are provided in the\n“\u003ca href=\"https://nginx.org/en/docs/http/request_processing.html\" target=\"_blank\"\u003eHow nginx processes a request\u003c/a\u003e” document.\u003c/p\u003e\n"
        },
        {
          "name": "server_name",
          "default": "\"\"",
          "contexts": [
            "server"
          ],
          "syntax": [
            "*`name`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets names of a virtual server, for example:\n```\nserver {\n    server_name example.com www.example.com;\n}\n```\n\nThe first name becomes the primary server name.\n\nServer names can include an asterisk (“`*`”)\nreplacing the first or last part of a name:\n```\nserver {\n    server_name example.com *.example.com www.example.*;\n}\n```\nSuch names are called wildcard names.\n\nThe first two of the names mentioned above can be combined in one:\n```\nserver {\n    server_name .example.com;\n}\n```\n\nIt is also possible to use regular expressions in server names,\npreceding the name with a tilde (“`~`”):\n```\nserver {\n    server_name www.example.com ~^www\\d+\\.example\\.com$;\n}\n```\n\nRegular expressions can contain captures (0.7.40) that can later\nbe used in other directives:\n```\nserver {\n    server_name ~^(www\\.)?(.+)$;\n\n    location / {\n        root /sites/$2;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n```\n\nNamed captures in regular expressions create variables (0.8.25)\nthat can later be used in other directives:\n```\nserver {\n    server_name ~^(www\\.)?(?\u003cdomain\u003e.+)$;\n\n    location / {\n        root /sites/$domain;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n```\n\nIf the directive’s parameter is set to “`$hostname`” (0.9.4), the\nmachine’s hostname is inserted.\n\nIt is also possible to specify an empty server name (0.7.11):\n```\nserver {\n    server_name www.example.com \"\";\n}\n```\nIt allows this server to process requests without the \"Host\"\nheader field — instead of the default server — for the given address:port pair.\nThis is the default setting.\n\u003e Before 0.8.48, the machine’s hostname was used by default.\n\nDuring searching for a virtual server by name,\nif the name matches more than one of the specified variants,\n(e.g. both a wildcard name and regular expression match), the first matching\nvariant will be chosen, in the following order of priority:\n1. the exact name\n2. the longest wildcard name starting with an asterisk,\n    e.g. “`*.example.com`”\n3. the longest wildcard name ending with an asterisk,\n    e.g. “`mail.*`”\n4. the first matching regular expression\n    (in order of appearance in the configuration file)\n\nDetailed description of server names is provided in a separate\n[Server names](https://nginx.org/en/docs/http/server_names.html) document.",
          "description_html": "\u003cp\u003eSets names of a virtual server, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    server_name example.com www.example.com;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe first name becomes the primary server name.\u003c/p\u003e\n\n\u003cp\u003eServer names can include an asterisk (“\u003ccode\u003e*\u003c/code\u003e”)\nreplacing the first or last part of a name:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    server_name example.com *.example.com www.example.*;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSuch names are called wildcard names.\u003c/p\u003e\n\n\u003cp\u003eThe first two of the names mentioned above can be combined in one:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    server_name .example.com;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIt is also possible to use regular expressions in server names,\npreceding the name with a tilde (“\u003ccode\u003e~\u003c/code\u003e”):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    server_name www.example.com ~^www\\d+\\.example\\.com$;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eRegular expressions can contain captures (0.7.40) that can later\nbe used in other directives:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    server_name ~^(www\\.)?(.+)$;\n\n    location / {\n        root /sites/$2;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNamed captures in regular expressions create variables (0.8.25)\nthat can later be used in other directives:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    server_name ~^(www\\.)?(?\u0026lt;domain\u0026gt;.+)$;\n\n    location / {\n        root /sites/$domain;\n    }\n}\n\nserver {\n    server_name _;\n\n    location / {\n        root /sites/default;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf the directive’s parameter is set to “\u003ccode\u003e$hostname\u003c/code\u003e” (0.9.4), the\nmachine’s hostname is inserted.\u003c/p\u003e\n\n\u003cp\u003eIt is also possible to specify an empty server name (0.7.11):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    server_name www.example.com \u0026quot;\u0026quot;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIt allows this server to process requests without the \u0026ldquo;Host\u0026rdquo;\nheader field — instead of the default server — for the given address:port pair.\nThis is the default setting.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore 0.8.48, the machine’s hostname was used by default.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eDuring searching for a virtual server by name,\nif the name matches more than one of the specified variants,\n(e.g. both a wildcard name and regular expression match), the first matching\nvariant will be chosen, in the following order of priority:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ethe exact name\u003c/li\u003e\n\u003cli\u003ethe longest wildcard name starting with an asterisk,\ne.g. “\u003ccode\u003e*.example.com\u003c/code\u003e”\u003c/li\u003e\n\u003cli\u003ethe longest wildcard name ending with an asterisk,\ne.g. “\u003ccode\u003email.*\u003c/code\u003e”\u003c/li\u003e\n\u003cli\u003ethe first matching regular expression\n(in order of appearance in the configuration file)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eDetailed description of server names is provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/http/server_names.html\" target=\"_blank\"\u003eServer names\u003c/a\u003e document.\u003c/p\u003e\n"
        },
        {
          "name": "server_name_in_redirect",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the use of the primary server name, specified by the\n[`server_name`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name) directive,\nin [absolute](https://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect) redirects issued by nginx.\nWhen the use of the primary server name is disabled, the name from the\n\"Host\" request header field is used.\nIf this field is not present, the IP address of the server is used.\n\nThe use of a port in redirects is controlled by\nthe [`port_in_redirect`](https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect) directive.",
          "description_html": "\u003cp\u003eEnables or disables the use of the primary server name, specified by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name\" target=\"_blank\"\u003e\u003ccode\u003eserver_name\u003c/code\u003e\u003c/a\u003e directive,\nin \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#absolute_redirect\" target=\"_blank\"\u003eabsolute\u003c/a\u003e redirects issued by nginx.\nWhen the use of the primary server name is disabled, the name from the\n\u0026ldquo;Host\u0026rdquo; request header field is used.\nIf this field is not present, the IP address of the server is used.\u003c/p\u003e\n\n\u003cp\u003eThe use of a port in redirects is controlled by\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect\" target=\"_blank\"\u003e\u003ccode\u003eport_in_redirect\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "server_names_hash_bucket_size",
          "default": "32|64|128",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the bucket size for the server names hash tables.\nThe default value depends on the size of the processor’s cache line.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the bucket size for the server names hash tables.\nThe default value depends on the size of the processor’s cache line.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "server_names_hash_max_size",
          "default": "512",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`size`* of the server names hash tables.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the server names hash tables.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "server_tokens",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off` | `build` | *`string`*"
          ],
          "isBlock": false,
          "description_md": "Enables or disables emitting nginx version on error pages and in the\n\"Server\" response header field.\n\nThe `build` parameter (1.11.10) enables emitting\na [build name](https://nginx.org/en/docs/configure.html#build)\nalong with nginx version.\n\nAdditionally, as part of our\n[commercial subscription](https://nginx.com/products/),\nstarting from version 1.9.13\nthe signature on error pages and\nthe \"Server\" response header field value\ncan be set explicitly using the *`string`* with variables.\nAn empty string disables the emission of the \"Server\" field.",
          "description_html": "\u003cp\u003eEnables or disables emitting nginx version on error pages and in the\n\u0026ldquo;Server\u0026rdquo; response header field.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ebuild\u003c/code\u003e parameter (1.11.10) enables emitting\na \u003ca href=\"https://nginx.org/en/docs/configure.html#build\" target=\"_blank\"\u003ebuild name\u003c/a\u003e\nalong with nginx version.\u003c/p\u003e\n\n\u003cp\u003eAdditionally, as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e,\nstarting from version 1.9.13\nthe signature on error pages and\nthe \u0026ldquo;Server\u0026rdquo; response header field value\ncan be set explicitly using the \u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e with variables.\nAn empty string disables the emission of the \u0026ldquo;Server\u0026rdquo; field.\u003c/p\u003e\n"
        },
        {
          "name": "subrequest_output_buffer_size",
          "default": "4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for\nstoring the response body of a subrequest.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\n\nThe directive is applicable only for subrequests\nwith response bodies saved into memory.\nFor example, such subrequests are created by\n[SSI](https://nginx.org/en/docs/http/ngx_http_ssi_module.html#ssi_include_set).",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for\nstoring the response body of a subrequest.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\u003c/p\u003e\n\n\u003cp\u003eThe directive is applicable only for subrequests\nwith response bodies saved into memory.\nFor example, such subrequests are created by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssi_module.html#ssi_include_set\" target=\"_blank\"\u003eSSI\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "tcp_nodelay",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the use of the `TCP_NODELAY` option.\nThe option is enabled when a connection is transitioned into the\nkeep-alive state.\nAdditionally, it is enabled on SSL connections,\nfor unbuffered proxying,\nand for [WebSocket](https://nginx.org/en/docs/http/websocket.html) proxying.",
          "description_html": "\u003cp\u003eEnables or disables the use of the \u003ccode\u003eTCP_NODELAY\u003c/code\u003e option.\nThe option is enabled when a connection is transitioned into the\nkeep-alive state.\nAdditionally, it is enabled on SSL connections,\nfor unbuffered proxying,\nand for \u003ca href=\"https://nginx.org/en/docs/http/websocket.html\" target=\"_blank\"\u003eWebSocket\u003c/a\u003e proxying.\u003c/p\u003e\n"
        },
        {
          "name": "tcp_nopush",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the use of\nthe `TCP_NOPUSH` socket option on FreeBSD\nor the `TCP_CORK` socket option on Linux.\nThe options are enabled only when [`sendfile`](https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile) is used.\nEnabling the option allows\n- sending the response header and the beginning of a file in one packet,\n    on Linux and FreeBSD 4.*;\n- sending a file in full packets.",
          "description_html": "\u003cp\u003eEnables or disables the use of\nthe \u003ccode\u003eTCP_NOPUSH\u003c/code\u003e socket option on FreeBSD\nor the \u003ccode\u003eTCP_CORK\u003c/code\u003e socket option on Linux.\nThe options are enabled only when \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\" target=\"_blank\"\u003e\u003ccode\u003esendfile\u003c/code\u003e\u003c/a\u003e is used.\nEnabling the option allows\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003esending the response header and the beginning of a file in one packet,\non Linux and FreeBSD 4.*;\u003c/li\u003e\n\u003cli\u003esending a file in full packets.\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "try_files",
          "default": "",
          "contexts": [
            "server",
            "location"
          ],
          "syntax": [
            "*`file`* ... *`uri`*",
            "*`file`* ... =*`code`*"
          ],
          "isBlock": false,
          "description_md": "Checks the existence of files in the specified order and uses\nthe first found file for request processing; the processing\nis performed in the current context.\nThe path to a file is constructed from the\n*`file`* parameter\naccording to the\n[`root`](https://nginx.org/en/docs/http/ngx_http_core_module.html#root) and [`alias`](https://nginx.org/en/docs/http/ngx_http_core_module.html#alias) directives.\nIt is possible to check directory’s existence by specifying\na slash at the end of a name, e.g. “`$uri/`”.\nIf none of the files were found, an internal redirect to the\n*`uri`* specified in the last parameter is made.\nFor example:\n```\nlocation /images/ {\n    try_files $uri /images/default.gif;\n}\n\nlocation = /images/default.gif {\n    expires 30s;\n}\n```\nThe last parameter can also point to a named location,\nas shown in examples below.\nStarting from version 0.7.51, the last parameter can also be a\n*`code`*:\n```\nlocation / {\n    try_files $uri $uri/index.html $uri.html =404;\n}\n```\n\nExample in proxying Mongrel:\n```\nlocation / {\n    try_files /system/maintenance.html\n              $uri $uri/index.html $uri.html\n              @mongrel;\n}\n\nlocation @mongrel {\n    proxy_pass http://mongrel;\n}\n```\n\nExample for Drupal/FastCGI:\n```\nlocation / {\n    try_files $uri $uri/ @drupal;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    fastcgi_param SCRIPT_NAME     $fastcgi_script_name;\n    fastcgi_param QUERY_STRING    $args;\n\n    ... other fastcgi_param's\n}\n\nlocation @drupal {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    fastcgi_param SCRIPT_NAME     /index.php;\n    fastcgi_param QUERY_STRING    q=$uri\u0026$args;\n\n    ... other fastcgi_param's\n}\n```\nIn the following example,\n```\nlocation / {\n    try_files $uri $uri/ @drupal;\n}\n```\nthe `try_files` directive is equivalent to\n```\nlocation / {\n    error_page 404 = @drupal;\n    log_not_found off;\n}\n```\nAnd here,\n```\nlocation ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n\n    ...\n}\n```\n`try_files` checks the existence of the PHP file\nbefore passing the request to the FastCGI server.\n\nExample for Wordpress and Joomla:\n```\nlocation / {\n    try_files $uri $uri/ @wordpress;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @wordpress;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    ... other fastcgi_param's\n}\n\nlocation @wordpress {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    ... other fastcgi_param's\n}\n```",
          "description_html": "\u003cp\u003eChecks the existence of files in the specified order and uses\nthe first found file for request processing; the processing\nis performed in the current context.\nThe path to a file is constructed from the\n\u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e parameter\naccording to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\" target=\"_blank\"\u003e\u003ccode\u003eroot\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\" target=\"_blank\"\u003e\u003ccode\u003ealias\u003c/code\u003e\u003c/a\u003e directives.\nIt is possible to check directory’s existence by specifying\na slash at the end of a name, e.g. “\u003ccode\u003e$uri/\u003c/code\u003e”.\nIf none of the files were found, an internal redirect to the\n\u003cem\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/em\u003e specified in the last parameter is made.\nFor example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /images/ {\n    try_files $uri /images/default.gif;\n}\n\nlocation = /images/default.gif {\n    expires 30s;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe last parameter can also point to a named location,\nas shown in examples below.\nStarting from version 0.7.51, the last parameter can also be a\n\u003cem\u003e\u003ccode\u003ecode\u003c/code\u003e\u003c/em\u003e:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    try_files $uri $uri/index.html $uri.html =404;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eExample in proxying Mongrel:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    try_files /system/maintenance.html\n              $uri $uri/index.html $uri.html\n              @mongrel;\n}\n\nlocation @mongrel {\n    proxy_pass http://mongrel;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eExample for Drupal/FastCGI:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    try_files $uri $uri/ @drupal;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    fastcgi_param SCRIPT_NAME     $fastcgi_script_name;\n    fastcgi_param QUERY_STRING    $args;\n\n    ... other fastcgi_param's\n}\n\nlocation @drupal {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    fastcgi_param SCRIPT_NAME     /index.php;\n    fastcgi_param QUERY_STRING    q=$uri\u0026amp;$args;\n\n    ... other fastcgi_param's\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn the following example,\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    try_files $uri $uri/ @drupal;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ethe \u003ccode\u003etry_files\u003c/code\u003e directive is equivalent to\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    error_page 404 = @drupal;\n    log_not_found off;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAnd here,\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation ~ \\.php$ {\n    try_files $uri @drupal;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003e\u003ccode\u003etry_files\u003c/code\u003e checks the existence of the PHP file\nbefore passing the request to the FastCGI server.\u003c/p\u003e\n\n\u003cp\u003eExample for Wordpress and Joomla:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    try_files $uri $uri/ @wordpress;\n}\n\nlocation ~ \\.php$ {\n    try_files $uri @wordpress;\n\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to$fastcgi_script_name;\n    ... other fastcgi_param's\n}\n\nlocation @wordpress {\n    fastcgi_pass ...;\n\n    fastcgi_param SCRIPT_FILENAME /path/to/index.php;\n    ... other fastcgi_param's\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "types",
          "default": "\n    text/html  html;\n    image/gif  gif;\n    image/jpeg jpg;\n",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            " `{...}`"
          ],
          "isBlock": true,
          "description_md": "Maps file name extensions to MIME types of responses.\nExtensions are case-insensitive.\nSeveral extensions can be mapped to one type, for example:\n```\ntypes {\n    application/octet-stream bin exe dll;\n    application/octet-stream deb;\n    application/octet-stream dmg;\n}\n```\n\nA sufficiently full mapping table is distributed with nginx in the\n`conf/mime.types` file.\n\nTo make a particular location emit the\n“`application/octet-stream`”\nMIME type for all requests, the following configuration can be used:\n```\nlocation /download/ {\n    types        { }\n    default_type application/octet-stream;\n}\n```",
          "description_html": "\u003cp\u003eMaps file name extensions to MIME types of responses.\nExtensions are case-insensitive.\nSeveral extensions can be mapped to one type, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003etypes {\n    application/octet-stream bin exe dll;\n    application/octet-stream deb;\n    application/octet-stream dmg;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA sufficiently full mapping table is distributed with nginx in the\n\u003ccode\u003econf/mime.types\u003c/code\u003e file.\u003c/p\u003e\n\n\u003cp\u003eTo make a particular location emit the\n“\u003ccode\u003eapplication/octet-stream\u003c/code\u003e”\nMIME type for all requests, the following configuration can be used:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /download/ {\n    types        { }\n    default_type application/octet-stream;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "types_hash_bucket_size",
          "default": "64",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the bucket size for the types hash tables.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).\n\u003e Prior to version 1.5.13,\n\u003e the default value depended on the size of the processor’s cache line.",
          "description_html": "\u003cp\u003eSets the bucket size for the types hash tables.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.5.13,\nthe default value depended on the size of the processor’s cache line.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "types_hash_max_size",
          "default": "1024",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`size`* of the types hash tables.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the types hash tables.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "underscores_in_headers",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the use of underscores in client request header fields.\nWhen the use of underscores is disabled, request header fields whose names\ncontain underscores are\nmarked as invalid and become subject to the\n[`ignore_invalid_headers`](https://nginx.org/en/docs/http/ngx_http_core_module.html#ignore_invalid_headers) directive.\n\nIf the directive is specified on the [`server`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server) level,\nthe value from the default server can be used.\nDetails are provided in the\n“[Virtual server selection](https://nginx.org/en/docs/http/server_names.html#virtual_server_selection)” section.",
          "description_html": "\u003cp\u003eEnables or disables the use of underscores in client request header fields.\nWhen the use of underscores is disabled, request header fields whose names\ncontain underscores are\nmarked as invalid and become subject to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#ignore_invalid_headers\" target=\"_blank\"\u003e\u003ccode\u003eignore_invalid_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eIf the directive is specified on the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e level,\nthe value from the default server can be used.\nDetails are provided in the\n“\u003ca href=\"https://nginx.org/en/docs/http/server_names.html#virtual_server_selection\" target=\"_blank\"\u003eVirtual server selection\u003c/a\u003e” section.\u003c/p\u003e\n"
        },
        {
          "name": "variables_hash_bucket_size",
          "default": "64",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the bucket size for the variables hash table.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the bucket size for the variables hash table.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "variables_hash_max_size",
          "default": "1024",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`size`* of the variables hash table.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).\n\u003e Prior to version 1.5.13, the default value was 512.",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the variables hash table.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.5.13, the default value was 512.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_dav_module.html",
      "name": "ngx_http_dav_module",
      "directives": [
        {
          "name": "create_full_put_path",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "The WebDAV specification only allows creating files in already\nexisting directories.\nThis directive allows creating all needed intermediate directories.",
          "description_html": "\u003cp\u003eThe WebDAV specification only allows creating files in already\nexisting directories.\nThis directive allows creating all needed intermediate directories.\u003c/p\u003e\n"
        },
        {
          "name": "dav_access",
          "default": "user:rw",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`users`*:*`permissions`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets access permissions for newly created files and directories, e.g.:\n```\ndav_access user:rw group:rw all:r;\n```\n\nIf any `group` or `all` access permissions\nare specified then `user` permissions may be omitted:\n```\ndav_access group:rw all:r;\n```",
          "description_html": "\u003cp\u003eSets access permissions for newly created files and directories, e.g.:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003edav_access user:rw group:rw all:r;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf any \u003ccode\u003egroup\u003c/code\u003e or \u003ccode\u003eall\u003c/code\u003e access permissions\nare specified then \u003ccode\u003euser\u003c/code\u003e permissions may be omitted:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003edav_access group:rw all:r;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "dav_methods",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`off` | *`method`* ..."
          ],
          "isBlock": false,
          "description_md": "Allows the specified HTTP and WebDAV methods.\nThe parameter `off` denies all methods processed\nby this module.\nThe following methods are supported:\n`PUT`, `DELETE`, `MKCOL`,\n`COPY`, and `MOVE`.\n\nA file uploaded with the PUT method is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the\n[`client_body_temp_path`](https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path)\ndirective, are put on the same file system.\n\nWhen creating a file with the PUT method, it is possible to specify\nthe modification date by passing it in the \"Date\"\nheader field.",
          "description_html": "\u003cp\u003eAllows the specified HTTP and WebDAV methods.\nThe parameter \u003ccode\u003eoff\u003c/code\u003e denies all methods processed\nby this module.\nThe following methods are supported:\n\u003ccode\u003ePUT\u003c/code\u003e, \u003ccode\u003eDELETE\u003c/code\u003e, \u003ccode\u003eMKCOL\u003c/code\u003e,\n\u003ccode\u003eCOPY\u003c/code\u003e, and \u003ccode\u003eMOVE\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eA file uploaded with the PUT method is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_temp_path\" target=\"_blank\"\u003e\u003ccode\u003eclient_body_temp_path\u003c/code\u003e\u003c/a\u003e\ndirective, are put on the same file system.\u003c/p\u003e\n\n\u003cp\u003eWhen creating a file with the PUT method, it is possible to specify\nthe modification date by passing it in the \u0026ldquo;Date\u0026rdquo;\nheader field.\u003c/p\u003e\n"
        },
        {
          "name": "min_delete_depth",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Allows the DELETE method to remove files provided that\nthe number of elements in a request path is not less than the specified\nnumber.\nFor example, the directive\n```\nmin_delete_depth 4;\n```\nallows removing files on requests\n```\n/users/00/00/name\n/users/00/00/name/pic.jpg\n/users/00/00/page.html\n```\nand denies the removal of\n```\n/users/00/00\n```",
          "description_html": "\u003cp\u003eAllows the DELETE method to remove files provided that\nthe number of elements in a request path is not less than the specified\nnumber.\nFor example, the directive\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003emin_delete_depth 4;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eallows removing files on requests\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/users/00/00/name\n/users/00/00/name/pic.jpg\n/users/00/00/page.html\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eand denies the removal of\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/users/00/00\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_empty_gif_module.html",
      "name": "ngx_http_empty_gif_module",
      "directives": [
        {
          "name": "empty_gif",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Turns on module processing in a surrounding location.",
          "description_html": "\u003cp\u003eTurns on module processing in a surrounding location.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_f4f_module.html",
      "name": "ngx_http_f4f_module",
      "directives": [
        {
          "name": "f4f",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Turns on module processing in the surrounding location.",
          "description_html": "\u003cp\u003eTurns on module processing in the surrounding location.\u003c/p\u003e\n"
        },
        {
          "name": "f4f_buffer_size",
          "default": "512k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for\nreading the `.f4x` index file.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for\nreading the \u003ccode\u003e.f4x\u003c/code\u003e index file.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_fastcgi_module.html",
      "name": "ngx_http_fastcgi_module",
      "directives": [
        {
          "name": "fastcgi_bind",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`address`* [`transparent`] | `off`"
          ],
          "isBlock": false,
          "description_md": "Makes outgoing connections to a FastCGI server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value `off` (1.3.12) cancels the effect\nof the `fastcgi_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n\nThe `transparent` parameter (1.11.0) allows\noutgoing connections to a FastCGI server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\n```\nfastcgi_bind $remote_addr transparent;\n```\nIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n[superuser](https://nginx.org/en/docs/ngx_core_module.html#user) privileges.\nOn Linux it is not required (1.13.8) as if\nthe `transparent` parameter is specified, worker processes\ninherit the `CAP_NET_RAW` capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the FastCGI server.",
          "description_html": "\u003cp\u003eMakes outgoing connections to a FastCGI server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value \u003ccode\u003eoff\u003c/code\u003e (1.3.12) cancels the effect\nof the \u003ccode\u003efastcgi_bind\u003c/code\u003e directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003etransparent\u003c/code\u003e parameter (1.11.0) allows\noutgoing connections to a FastCGI server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_bind $remote_addr transparent;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#user\" target=\"_blank\"\u003esuperuser\u003c/a\u003e privileges.\nOn Linux it is not required (1.13.8) as if\nthe \u003ccode\u003etransparent\u003c/code\u003e parameter is specified, worker processes\ninherit the \u003ccode\u003eCAP_NET_RAW\u003c/code\u003e capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the FastCGI server.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_buffer_size",
          "default": "4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading the first part\nof the response received from the FastCGI server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading the first part\nof the response received from the FastCGI server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_buffering",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables buffering of responses from the FastCGI server.\n\nWhen buffering is enabled, nginx receives a response from the FastCGI server\nas soon as possible, saving it into the buffers set by the\n[`fastcgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size) and [`fastcgi_buffers`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers) directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a [temporary file](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_path) on the disk.\nWriting to temporary files is controlled by the\n[`fastcgi_max_temp_file_size`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_max_temp_file_size) and\n[`fastcgi_temp_file_write_size`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_file_write_size) directives.\n\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the FastCGI server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the [`fastcgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size) directive.\n\nBuffering can also be enabled or disabled by passing\n“`yes`” or “`no`” in the\n\"X-Accel-Buffering\" response header field.\nThis capability can be disabled using the\n[`fastcgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers) directive.",
          "description_html": "\u003cp\u003eEnables or disables buffering of responses from the FastCGI server.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is enabled, nginx receives a response from the FastCGI server\nas soon as possible, saving it into the buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_buffers\u003c/code\u003e\u003c/a\u003e directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_path\" target=\"_blank\"\u003etemporary file\u003c/a\u003e on the disk.\nWriting to temporary files is controlled by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_max_temp_file_size\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_max_temp_file_size\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_file_write_size\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_temp_file_write_size\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the FastCGI server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_buffer_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eBuffering can also be enabled or disabled by passing\n“\u003ccode\u003eyes\u003c/code\u003e” or “\u003ccode\u003eno\u003c/code\u003e” in the\n\u0026ldquo;X-Accel-Buffering\u0026rdquo; response header field.\nThis capability can be disabled using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_ignore_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_buffers",
          "default": "8 4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* and *`size`* of the\nbuffers used for reading a response from the FastCGI server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the\nbuffers used for reading a response from the FastCGI server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_busy_buffers_size",
          "default": "8k|16k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "When [buffering](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering) of responses from the FastCGI\nserver is enabled, limits the total *`size`* of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, *`size`* is limited by the size of two buffers set by the\n[`fastcgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size) and [`fastcgi_buffers`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers) directives.",
          "description_html": "\u003cp\u003eWhen \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the FastCGI\nserver is enabled, limits the total \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e is limited by the size of two buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_buffers\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`zone`* | `off`"
          ],
          "isBlock": false,
          "description_md": "Defines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe `off` parameter disables caching inherited\nfrom the previous configuration level.",
          "description_html": "\u003cp\u003eDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe \u003ccode\u003eoff\u003c/code\u003e parameter disables caching inherited\nfrom the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache_background_update",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Allows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n[allow](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_use_stale_updating)\nthe usage of a stale cached response when it is being updated.",
          "description_html": "\u003cp\u003eAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_use_stale_updating\" target=\"_blank\"\u003eallow\u003c/a\u003e\nthe usage of a stale cached response when it is being updated.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache_bypass",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\n```\nfastcgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nfastcgi_cache_bypass $http_pragma    $http_authorization;\n```\nCan be used along with the [`fastcgi_no_cache`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_no_cache) directive.",
          "description_html": "\u003cp\u003eDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nfastcgi_cache_bypass $http_pragma    $http_authorization;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eCan be used along with the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_no_cache\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_no_cache\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache_key",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`*"
          ],
          "isBlock": false,
          "description_md": "Defines a key for caching, for example\n```\nfastcgi_cache_key localhost:9000$request_uri;\n```",
          "description_html": "\u003cp\u003eDefines a key for caching, for example\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_cache_key localhost:9000$request_uri;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "fastcgi_cache_lock",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "When enabled, only one request at a time will be allowed to populate\na new cache element identified according to the [`fastcgi_cache_key`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key)\ndirective by passing a request to a FastCGI server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n[`fastcgi_cache_lock_timeout`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_lock_timeout) directive.",
          "description_html": "\u003cp\u003eWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_cache_key\u003c/code\u003e\u003c/a\u003e\ndirective by passing a request to a FastCGI server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_lock_timeout\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_cache_lock_timeout\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache_lock_age",
          "default": "5s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "If the last request passed to the FastCGI server\nfor populating a new cache element\nhas not completed for the specified *`time`*,\none more request may be passed to the FastCGI server.",
          "description_html": "\u003cp\u003eIf the last request passed to the FastCGI server\nfor populating a new cache element\nhas not completed for the specified \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e,\none more request may be passed to the FastCGI server.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache_lock_timeout",
          "default": "5s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for [`fastcgi_cache_lock`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_lock).\nWhen the *`time`* expires,\nthe request will be passed to the FastCGI server,\nhowever, the response will not be cached.\n\u003e Before 1.7.8, the response could be cached.",
          "description_html": "\u003cp\u003eSets a timeout for \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_lock\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_cache_lock\u003c/code\u003e\u003c/a\u003e.\nWhen the \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e expires,\nthe request will be passed to the FastCGI server,\nhowever, the response will not be cached.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore 1.7.8, the response could be cached.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "fastcgi_cache_max_range_offset",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the FastCGI server\nand the response will not be cached.",
          "description_html": "\u003cp\u003eSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the FastCGI server\nand the response will not be cached.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache_methods",
          "default": "GET HEAD",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`GET` | `HEAD` | `POST` ..."
          ],
          "isBlock": false,
          "description_md": "If the client request method is listed in this directive then\nthe response will be cached.\n“`GET`” and “`HEAD`” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the [`fastcgi_no_cache`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_no_cache) directive.",
          "description_html": "\u003cp\u003eIf the client request method is listed in this directive then\nthe response will be cached.\n“\u003ccode\u003eGET\u003c/code\u003e” and “\u003ccode\u003eHEAD\u003c/code\u003e” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_no_cache\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_no_cache\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache_min_uses",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* of requests after which the response\nwill be cached.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e of requests after which the response\nwill be cached.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache_path",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`path`* [`levels`=*`levels`*] [`use_temp_path`=`on`|`off`] `keys_zone`=*`name`*:*`size`* [`inactive`=*`time`*] [`max_size`=*`size`*] [`min_free`=*`size`*] [`manager_files`=*`number`*] [`manager_sleep`=*`time`*] [`manager_threshold`=*`time`*] [`loader_files`=*`number`*] [`loader_sleep`=*`time`*] [`loader_threshold`=*`time`*] [`purger`=`on`|`off`] [`purger_files`=*`number`*] [`purger_sleep`=*`time`*] [`purger_threshold`=*`time`*]"
          ],
          "isBlock": false,
          "description_md": "Sets the path and other parameters of a cache.\nCache data are stored in files.\nBoth the key and file name in a cache are a result of\napplying the MD5 function to the proxied URL.\n\nThe `levels` parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n```\nfastcgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n```\nfile names in a cache will look like this:\n```\n/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n```\n\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe `use_temp_path` parameter (1.7.10).\nIf this parameter is omitted or set to the value `on`,\nthe directory set by the [`fastcgi_temp_path`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_path) directive\nfor the given location will be used.\nIf the value is set to `off`,\ntemporary files will be put directly in the cache directory.\n\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose *`name`* and *`size`*\nare configured by the `keys_zone` parameter.\nOne megabyte zone can store about 8 thousand keys.\n\u003e As part of\n\u003e [commercial subscription](https://nginx.com/products/),\n\u003e the shared memory zone also stores extended\n\u003e cache [information](https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_),\n\u003e thus, it is required to specify a larger zone size for the same number of keys.\n\u003e For example,\n\u003e one megabyte zone can store about 4 thousand keys.\n\nCached data that are not accessed during the time specified by the\n`inactive` parameter get removed from the cache\nregardless of their freshness.\nBy default, `inactive` is set to 10 minutes.\n\nThe special “cache manager” process monitors the maximum cache size set\nby the `max_size` parameter,\nand the minimum amount of free space set\nby the `min_free` (1.19.1) parameter\non the file system with cache.\nWhen the size is exceeded or there is not enough free space,\nit removes the least recently used data.\nThe data is removed in iterations configured by\n`manager_files`,\n`manager_threshold`, and\n`manager_sleep` parameters (1.11.5).\nDuring one iteration no more than `manager_files` items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n`manager_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `manager_sleep`\nparameter (by default, 50 milliseconds) is made.\n\nA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than `loader_files` items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n`loader_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `loader_sleep`\nparameter (by default, 50 milliseconds) is made.\n\nAdditionally,\nthe following parameters are available as part of our\n[commercial subscription](https://nginx.com/products/):\n\n- `purger`=`on`|`off`\n\n    Instructs whether cache entries that match a\n    [wildcard key](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_purge)\n    will be removed from the disk by the cache purger (1.7.12).\n    Setting the parameter to `on`\n    (default is `off`)\n    will activate the “cache purger” process that\n    permanently iterates through all cache entries\n    and deletes the entries that match the wildcard key.\n- `purger_files`=*`number`*\n\n    Sets the number of items that will be scanned during one iteration (1.7.12).\n    By default, `purger_files` is set to 10.\n- `purger_threshold`=*`number`*\n\n    Sets the duration of one iteration (1.7.12).\n    By default, `purger_threshold` is set to 50 milliseconds.\n- `purger_sleep`=*`number`*\n\n    Sets a pause between iterations (1.7.12).\n    By default, `purger_sleep` is set to 50 milliseconds.\n\n\u003e In versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\n\u003e Previously cached responses will be considered invalid\n\u003e after upgrading to a newer nginx version.",
          "description_html": "\u003cp\u003eSets the path and other parameters of a cache.\nCache data are stored in files.\nBoth the key and file name in a cache are a result of\napplying the MD5 function to the proxied URL.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003elevels\u003c/code\u003e parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003efile names in a cache will look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe \u003ccode\u003euse_temp_path\u003c/code\u003e parameter (1.7.10).\nIf this parameter is omitted or set to the value \u003ccode\u003eon\u003c/code\u003e,\nthe directory set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_path\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_temp_path\u003c/code\u003e\u003c/a\u003e directive\nfor the given location will be used.\nIf the value is set to \u003ccode\u003eoff\u003c/code\u003e,\ntemporary files will be put directly in the cache directory.\u003c/p\u003e\n\n\u003cp\u003eIn addition, all active keys and information about data are stored\nin a shared memory zone, whose \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\nare configured by the \u003ccode\u003ekeys_zone\u003c/code\u003e parameter.\nOne megabyte zone can store about 8 thousand keys.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs part of\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e,\nthe shared memory zone also stores extended\ncache \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_\" target=\"_blank\"\u003einformation\u003c/a\u003e,\nthus, it is required to specify a larger zone size for the same number of keys.\nFor example,\none megabyte zone can store about 4 thousand keys.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCached data that are not accessed during the time specified by the\n\u003ccode\u003einactive\u003c/code\u003e parameter get removed from the cache\nregardless of their freshness.\nBy default, \u003ccode\u003einactive\u003c/code\u003e is set to 10 minutes.\u003c/p\u003e\n\n\u003cp\u003eThe special “cache manager” process monitors the maximum cache size set\nby the \u003ccode\u003emax_size\u003c/code\u003e parameter,\nand the minimum amount of free space set\nby the \u003ccode\u003emin_free\u003c/code\u003e (1.19.1) parameter\non the file system with cache.\nWhen the size is exceeded or there is not enough free space,\nit removes the least recently used data.\nThe data is removed in iterations configured by\n\u003ccode\u003emanager_files\u003c/code\u003e,\n\u003ccode\u003emanager_threshold\u003c/code\u003e, and\n\u003ccode\u003emanager_sleep\u003c/code\u003e parameters (1.11.5).\nDuring one iteration no more than \u003ccode\u003emanager_files\u003c/code\u003e items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n\u003ccode\u003emanager_threshold\u003c/code\u003e parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the \u003ccode\u003emanager_sleep\u003c/code\u003e\nparameter (by default, 50 milliseconds) is made.\u003c/p\u003e\n\n\u003cp\u003eA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than \u003ccode\u003eloader_files\u003c/code\u003e items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n\u003ccode\u003eloader_threshold\u003c/code\u003e parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the \u003ccode\u003eloader_sleep\u003c/code\u003e\nparameter (by default, 50 milliseconds) is made.\u003c/p\u003e\n\n\u003cp\u003eAdditionally,\nthe following parameters are available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger\u003c/code\u003e=\u003ccode\u003eon\u003c/code\u003e|\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eInstructs whether cache entries that match a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_purge\" target=\"_blank\"\u003ewildcard key\u003c/a\u003e\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to \u003ccode\u003eon\u003c/code\u003e\n(default is \u003ccode\u003eoff\u003c/code\u003e)\nwill activate the “cache purger” process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_files\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, \u003ccode\u003epurger_files\u003c/code\u003e is set to 10.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_threshold\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets the duration of one iteration (1.7.12).\nBy default, \u003ccode\u003epurger_threshold\u003c/code\u003e is set to 50 milliseconds.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_sleep\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets a pause between iterations (1.7.12).\nBy default, \u003ccode\u003epurger_sleep\u003c/code\u003e is set to 50 milliseconds.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\nPreviously cached responses will be considered invalid\nafter upgrading to a newer nginx version.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "fastcgi_cache_purge",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "string ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n[cache key](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key) is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n\nIf the [cache key](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key) of a purge request ends\nwith an asterisk (“`*`”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either [inactivity](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_path),\nor processed by the [cache purger](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#purger) (1.7.12),\nor a client attempts to access them.\n\nExample configuration:\n```\nfastcgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        fastcgi_pass        backend;\n        fastcgi_cache       cache_zone;\n        fastcgi_cache_key   $uri;\n        fastcgi_cache_purge $purge_method;\n    }\n}\n```\n\u003e This functionality is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e of a purge request ends\nwith an asterisk (“\u003ccode\u003e*\u003c/code\u003e”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_path\" target=\"_blank\"\u003einactivity\u003c/a\u003e,\nor processed by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#purger\" target=\"_blank\"\u003ecache purger\u003c/a\u003e (1.7.12),\nor a client attempts to access them.\u003c/p\u003e\n\n\u003cp\u003eExample configuration:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        fastcgi_pass        backend;\n        fastcgi_cache       cache_zone;\n        fastcgi_cache_key   $uri;\n        fastcgi_cache_purge $purge_method;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis functionality is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "fastcgi_cache_revalidate",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables revalidation of expired cache items using conditional requests with\nthe \"If-Modified-Since\" and \"If-None-Match\"\nheader fields.",
          "description_html": "\u003cp\u003eEnables revalidation of expired cache items using conditional requests with\nthe \u0026ldquo;If-Modified-Since\u0026rdquo; and \u0026ldquo;If-None-Match\u0026rdquo;\nheader fields.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache_use_stale",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`error` | `timeout` | `invalid_header` | `updating` | `http_500` | `http_503` | `http_403` | `http_404` | `http_429` | `off` ..."
          ],
          "isBlock": false,
          "description_md": "Determines in which cases a stale cached response can be used\nwhen an error occurs during communication with the FastCGI server.\nThe directive’s parameters match the parameters of the\n[`fastcgi_next_upstream`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream) directive.\n\nThe `error` parameter also permits\nusing a stale cached response if a FastCGI server to process a request\ncannot be selected.\n\nAdditionally, the `updating` parameter permits\nusing a stale cached response if it is currently being updated.\nThis allows minimizing the number of accesses to FastCGI servers\nwhen updating cached data.\n\nUsing a stale cached response\ncan also be enabled directly in the response header\nfor a specified number of seconds after the response became stale (1.11.10).\nThis has lower priority than using the directive parameters.\n- The\n    “[stale-while-revalidate](https://datatracker.ietf.org/doc/html/rfc5861#section-3)”\n    extension of the \"Cache-Control\" header field permits\n    using a stale cached response if it is currently being updated.\n- The\n    “[stale-if-error](https://datatracker.ietf.org/doc/html/rfc5861#section-4)”\n    extension of the \"Cache-Control\" header field permits\n    using a stale cached response in case of an error.\n\nTo minimize the number of accesses to FastCGI servers when\npopulating a new cache element, the [`fastcgi_cache_lock`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_lock)\ndirective can be used.",
          "description_html": "\u003cp\u003eDetermines in which cases a stale cached response can be used\nwhen an error occurs during communication with the FastCGI server.\nThe directive’s parameters match the parameters of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_next_upstream\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eerror\u003c/code\u003e parameter also permits\nusing a stale cached response if a FastCGI server to process a request\ncannot be selected.\u003c/p\u003e\n\n\u003cp\u003eAdditionally, the \u003ccode\u003eupdating\u003c/code\u003e parameter permits\nusing a stale cached response if it is currently being updated.\nThis allows minimizing the number of accesses to FastCGI servers\nwhen updating cached data.\u003c/p\u003e\n\n\u003cp\u003eUsing a stale cached response\ncan also be enabled directly in the response header\nfor a specified number of seconds after the response became stale (1.11.10).\nThis has lower priority than using the directive parameters.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe\n“\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5861#section-3\" target=\"_blank\"\u003estale-while-revalidate\u003c/a\u003e”\nextension of the \u0026ldquo;Cache-Control\u0026rdquo; header field permits\nusing a stale cached response if it is currently being updated.\u003c/li\u003e\n\u003cli\u003eThe\n“\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5861#section-4\" target=\"_blank\"\u003estale-if-error\u003c/a\u003e”\nextension of the \u0026ldquo;Cache-Control\u0026rdquo; header field permits\nusing a stale cached response in case of an error.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo minimize the number of accesses to FastCGI servers when\npopulating a new cache element, the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_lock\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_cache_lock\u003c/code\u003e\u003c/a\u003e\ndirective can be used.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_cache_valid",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "[*`code`* ...] *`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets caching time for different response codes.\nFor example, the following directives\n```\nfastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 404      1m;\n```\nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n\nIf only caching *`time`* is specified\n```\nfastcgi_cache_valid 5m;\n```\nthen only 200, 301, and 302 responses are cached.\n\nIn addition, the `any` parameter can be specified\nto cache any responses:\n```\nfastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 301      1h;\nfastcgi_cache_valid any      1m;\n```\n\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n- The \"X-Accel-Expires\" header field sets caching time of a\n    response in seconds.\n    The zero value disables caching for a response.\n    If the value starts with the `@` prefix, it sets an absolute\n    time in seconds since Epoch, up to which the response may be cached.\n- If the header does not include the \"X-Accel-Expires\" field,\n    parameters of caching may be set in the header fields\n    \"Expires\" or \"Cache-Control\".\n- If the header includes the \"Set-Cookie\" field, such a\n    response will not be cached.\n- If the header includes the \"Vary\" field\n    with the special value “`*`”, such a\n    response will not be cached (1.7.7).\n    If the header includes the \"Vary\" field\n    with another value, such a response will be cached\n    taking into account the corresponding request header fields (1.7.7).\n\nProcessing of one or more of these response header fields can be disabled\nusing the [`fastcgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers) directive.",
          "description_html": "\u003cp\u003eSets caching time for different response codes.\nFor example, the following directives\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 404      1m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\u003c/p\u003e\n\n\u003cp\u003eIf only caching \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e is specified\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_cache_valid 5m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ethen only 200, 301, and 302 responses are cached.\u003c/p\u003e\n\n\u003cp\u003eIn addition, the \u003ccode\u003eany\u003c/code\u003e parameter can be specified\nto cache any responses:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_cache_valid 200 302 10m;\nfastcgi_cache_valid 301      1h;\nfastcgi_cache_valid any      1m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe \u0026ldquo;X-Accel-Expires\u0026rdquo; header field sets caching time of a\nresponse in seconds.\nThe zero value disables caching for a response.\nIf the value starts with the \u003ccode\u003e@\u003c/code\u003e prefix, it sets an absolute\ntime in seconds since Epoch, up to which the response may be cached.\u003c/li\u003e\n\u003cli\u003eIf the header does not include the \u0026ldquo;X-Accel-Expires\u0026rdquo; field,\nparameters of caching may be set in the header fields\n\u0026ldquo;Expires\u0026rdquo; or \u0026ldquo;Cache-Control\u0026rdquo;.\u003c/li\u003e\n\u003cli\u003eIf the header includes the \u0026ldquo;Set-Cookie\u0026rdquo; field, such a\nresponse will not be cached.\u003c/li\u003e\n\u003cli\u003eIf the header includes the \u0026ldquo;Vary\u0026rdquo; field\nwith the special value “\u003ccode\u003e*\u003c/code\u003e”, such a\nresponse will not be cached (1.7.7).\nIf the header includes the \u0026ldquo;Vary\u0026rdquo; field\nwith another value, such a response will be cached\ntaking into account the corresponding request header fields (1.7.7).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eProcessing of one or more of these response header fields can be disabled\nusing the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_ignore_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_catch_stderr",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`*"
          ],
          "isBlock": false,
          "description_md": "Sets a string to search for in the error stream of a response\nreceived from a FastCGI server.\nIf the *`string`* is found then it is considered that the FastCGI\nserver has returned an [invalid response](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream).\nThis allows handling application errors in nginx, for example:\n```\nlocation /php/ {\n    fastcgi_pass backend:9000;\n    ...\n    fastcgi_catch_stderr \"PHP Fatal error\";\n    fastcgi_next_upstream error timeout invalid_header;\n}\n```",
          "description_html": "\u003cp\u003eSets a string to search for in the error stream of a response\nreceived from a FastCGI server.\nIf the \u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e is found then it is considered that the FastCGI\nserver has returned an \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\" target=\"_blank\"\u003einvalid response\u003c/a\u003e.\nThis allows handling application errors in nginx, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /php/ {\n    fastcgi_pass backend:9000;\n    ...\n    fastcgi_catch_stderr \u0026quot;PHP Fatal error\u0026quot;;\n    fastcgi_next_upstream error timeout invalid_header;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "fastcgi_connect_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for establishing a connection with a FastCGI server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.",
          "description_html": "\u003cp\u003eDefines a timeout for establishing a connection with a FastCGI server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_force_ranges",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables byte-range support\nfor both cached and uncached responses from the FastCGI server\nregardless of the \"Accept-Ranges\" field in these responses.",
          "description_html": "\u003cp\u003eEnables byte-range support\nfor both cached and uncached responses from the FastCGI server\nregardless of the \u0026ldquo;Accept-Ranges\u0026rdquo; field in these responses.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_hide_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`*"
          ],
          "isBlock": false,
          "description_md": "By default,\nnginx does not pass the header fields \"Status\" and\n\"X-Accel-...\" from the response of a FastCGI\nserver to a client.\nThe `fastcgi_hide_header` directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe [`fastcgi_pass_header`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass_header) directive can be used.",
          "description_html": "\u003cp\u003eBy default,\nnginx does not pass the header fields \u0026ldquo;Status\u0026rdquo; and\n\u0026ldquo;X-Accel-\u0026hellip;\u0026rdquo; from the response of a FastCGI\nserver to a client.\nThe \u003ccode\u003efastcgi_hide_header\u003c/code\u003e directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass_header\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_pass_header\u003c/code\u003e\u003c/a\u003e directive can be used.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_ignore_client_abort",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether the connection with a FastCGI server should be\nclosed when a client closes the connection without waiting\nfor a response.",
          "description_html": "\u003cp\u003eDetermines whether the connection with a FastCGI server should be\nclosed when a client closes the connection without waiting\nfor a response.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_ignore_headers",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`* ..."
          ],
          "isBlock": false,
          "description_md": "Disables processing of certain response header fields from the FastCGI server.\nThe following fields can be ignored: \"X-Accel-Redirect\",\n\"X-Accel-Expires\", \"X-Accel-Limit-Rate\" (1.1.6),\n\"X-Accel-Buffering\" (1.1.6),\n\"X-Accel-Charset\" (1.1.6), \"Expires\",\n\"Cache-Control\", \"Set-Cookie\" (0.8.44),\nand \"Vary\" (1.7.7).\n\nIf not disabled, processing of these header fields has the following\neffect:\n- \"X-Accel-Expires\", \"Expires\",\n    \"Cache-Control\", \"Set-Cookie\",\n    and \"Vary\"\n    set the parameters of response [caching](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_valid);\n- \"X-Accel-Redirect\" performs an\n    [internal redirect](https://nginx.org/en/docs/http/ngx_http_core_module.html#internal) to the specified URI;\n- \"X-Accel-Limit-Rate\" sets the\n    [rate limit](https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_rate) for transmission of a response to a client;\n- \"X-Accel-Buffering\" enables or disables\n    [buffering](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering) of a response;\n- \"X-Accel-Charset\" sets the desired\n    [`charset`](https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset)\n    of a response.",
          "description_html": "\u003cp\u003eDisables processing of certain response header fields from the FastCGI server.\nThe following fields can be ignored: \u0026ldquo;X-Accel-Redirect\u0026rdquo;,\n\u0026ldquo;X-Accel-Expires\u0026rdquo;, \u0026ldquo;X-Accel-Limit-Rate\u0026rdquo; (1.1.6),\n\u0026ldquo;X-Accel-Buffering\u0026rdquo; (1.1.6),\n\u0026ldquo;X-Accel-Charset\u0026rdquo; (1.1.6), \u0026ldquo;Expires\u0026rdquo;,\n\u0026ldquo;Cache-Control\u0026rdquo;, \u0026ldquo;Set-Cookie\u0026rdquo; (0.8.44),\nand \u0026ldquo;Vary\u0026rdquo; (1.7.7).\u003c/p\u003e\n\n\u003cp\u003eIf not disabled, processing of these header fields has the following\neffect:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Expires\u0026rdquo;, \u0026ldquo;Expires\u0026rdquo;,\n\u0026ldquo;Cache-Control\u0026rdquo;, \u0026ldquo;Set-Cookie\u0026rdquo;,\nand \u0026ldquo;Vary\u0026rdquo;\nset the parameters of response \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_valid\" target=\"_blank\"\u003ecaching\u003c/a\u003e;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Redirect\u0026rdquo; performs an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#internal\" target=\"_blank\"\u003einternal redirect\u003c/a\u003e to the specified URI;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Limit-Rate\u0026rdquo; sets the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_rate\" target=\"_blank\"\u003erate limit\u003c/a\u003e for transmission of a response to a client;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Buffering\u0026rdquo; enables or disables\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of a response;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Charset\u0026rdquo; sets the desired\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\" target=\"_blank\"\u003e\u003ccode\u003echarset\u003c/code\u003e\u003c/a\u003e\nof a response.\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "fastcgi_index",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`*"
          ],
          "isBlock": false,
          "description_md": "Sets a file name that will be appended after a URI that ends with\na slash, in the value of the `$fastcgi_script_name` variable.\nFor example, with these settings\n```\nfastcgi_index index.php;\nfastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\n```\nand the “`/page.php`” request,\nthe `SCRIPT_FILENAME` parameter will be equal to\n“`/home/www/scripts/php/page.php`”,\nand with the “`/`” request it will be equal to\n“`/home/www/scripts/php/index.php`”.",
          "description_html": "\u003cp\u003eSets a file name that will be appended after a URI that ends with\na slash, in the value of the \u003ccode\u003e$fastcgi_script_name\u003c/code\u003e variable.\nFor example, with these settings\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_index index.php;\nfastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eand the “\u003ccode\u003e/page.php\u003c/code\u003e” request,\nthe \u003ccode\u003eSCRIPT_FILENAME\u003c/code\u003e parameter will be equal to\n“\u003ccode\u003e/home/www/scripts/php/page.php\u003c/code\u003e”,\nand with the “\u003ccode\u003e/\u003c/code\u003e” request it will be equal to\n“\u003ccode\u003e/home/www/scripts/php/index.php\u003c/code\u003e”.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_intercept_errors",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether FastCGI server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the [`error_page`](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page) directive.",
          "description_html": "\u003cp\u003eDetermines whether FastCGI server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\" target=\"_blank\"\u003e\u003ccode\u003eerror_page\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_keep_conn",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "By default, a FastCGI server will close a connection right after\nsending the response.\nHowever, when this directive is set to the value `on`,\nnginx will instruct a FastCGI server to keep connections open.\nThis is necessary, in particular, for\n[`keepalive`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive)\nconnections to FastCGI servers to function.",
          "description_html": "\u003cp\u003eBy default, a FastCGI server will close a connection right after\nsending the response.\nHowever, when this directive is set to the value \u003ccode\u003eon\u003c/code\u003e,\nnginx will instruct a FastCGI server to keep connections open.\nThis is necessary, in particular, for\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive\" target=\"_blank\"\u003e\u003ccode\u003ekeepalive\u003c/code\u003e\u003c/a\u003e\nconnections to FastCGI servers to function.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_limit_rate",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`rate`*"
          ],
          "isBlock": false,
          "description_md": "Limits the speed of reading the response from the FastCGI server.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the FastCFI server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n[buffering](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering) of responses from the FastCGI\nserver is enabled.",
          "description_html": "\u003cp\u003eLimits the speed of reading the response from the FastCGI server.\nThe \u003cem\u003e\u003ccode\u003erate\u003c/code\u003e\u003c/em\u003e is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the FastCFI server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the FastCGI\nserver is enabled.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_max_temp_file_size",
          "default": "1024m",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "When [buffering](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering) of responses from the FastCGI\nserver is enabled, and the whole response does not fit into the buffers\nset by the [`fastcgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size) and [`fastcgi_buffers`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers)\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum *`size`* of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the [`fastcgi_temp_file_write_size`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_file_write_size) directive.\n\nThe zero value disables buffering of responses to temporary files.\n\n\u003e This restriction does not apply to responses\n\u003e that will be [cached](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache)\n\u003e or [stored](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_store) on disk.",
          "description_html": "\u003cp\u003eWhen \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the FastCGI\nserver is enabled, and the whole response does not fit into the buffers\nset by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_buffers\u003c/code\u003e\u003c/a\u003e\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_file_write_size\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_temp_file_write_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eThe zero value disables buffering of responses to temporary files.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis restriction does not apply to responses\nthat will be \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache\" target=\"_blank\"\u003ecached\u003c/a\u003e\nor \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_store\" target=\"_blank\"\u003estored\u003c/a\u003e on disk.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "fastcgi_next_upstream",
          "default": "error timeout",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`error` | `timeout` | `invalid_header` | `http_500` | `http_503` | `http_403` | `http_404` | `http_429` | `non_idempotent` | `off` ..."
          ],
          "isBlock": false,
          "description_md": "Specifies in which cases a request should be passed to the next server:\n- `error`\n\n    an error occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `timeout`\n\n    a timeout has occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `invalid_header`\n\n    a server returned an empty or invalid response;\n- `http_500`\n\n    a server returned a response with the code 500;\n- `http_503`\n\n    a server returned a response with the code 503;\n- `http_403`\n\n    a server returned a response with the code 403;\n- `http_404`\n\n    a server returned a response with the code 404;\n- `http_429`\n\n    a server returned a response with the code 429 (1.11.13);\n- `non_idempotent`\n\n    normally, requests with a\n    [non-idempotent](https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2)\n    method\n    (`POST`, `LOCK`, `PATCH`)\n    are not passed to the next server\n    if a request has been sent to an upstream server (1.9.13);\n    enabling this option explicitly allows retrying such requests;\n- `off`\n\n    disables passing a request to the next server.\n\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n\nThe directive also defines what is considered an\n[unsuccessful attempt](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails) of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_header` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of `http_500`, `http_503`,\nand `http_429` are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of `http_403` and `http_404`\nare never considered unsuccessful attempts.\n\nPassing a request to the next server can be limited by\n[the number of tries](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream_tries)\nand by [time](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream_timeout).",
          "description_html": "\u003cp\u003eSpecifies in which cases a request should be passed to the next server:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eerror\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ean error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einvalid_header\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned an empty or invalid response;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_500\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 500;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_503\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 503;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_403\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 403;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_404\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 404;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_429\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 429 (1.11.13);\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enon_idempotent\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003enormally, requests with a\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\" target=\"_blank\"\u003enon-idempotent\u003c/a\u003e\nmethod\n(\u003ccode\u003ePOST\u003c/code\u003e, \u003ccode\u003eLOCK\u003c/code\u003e, \u003ccode\u003ePATCH\u003c/code\u003e)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables passing a request to the next server.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\u003c/p\u003e\n\n\u003cp\u003eThe directive also defines what is considered an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\" target=\"_blank\"\u003eunsuccessful attempt\u003c/a\u003e of communication with a server.\nThe cases of \u003ccode\u003eerror\u003c/code\u003e, \u003ccode\u003etimeout\u003c/code\u003e and\n\u003ccode\u003einvalid_header\u003c/code\u003e are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of \u003ccode\u003ehttp_500\u003c/code\u003e, \u003ccode\u003ehttp_503\u003c/code\u003e,\nand \u003ccode\u003ehttp_429\u003c/code\u003e are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of \u003ccode\u003ehttp_403\u003c/code\u003e and \u003ccode\u003ehttp_404\u003c/code\u003e\nare never considered unsuccessful attempts.\u003c/p\u003e\n\n\u003cp\u003ePassing a request to the next server can be limited by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream_tries\" target=\"_blank\"\u003ethe number of tries\u003c/a\u003e\nand by \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream_timeout\" target=\"_blank\"\u003etime\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_next_upstream_timeout",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Limits the time during which a request can be passed to the\n[next server](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the time during which a request can be passed to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_next_upstream_tries",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Limits the number of possible tries for passing a request to the\n[next server](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the number of possible tries for passing a request to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_no_cache",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\n```\nfastcgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nfastcgi_no_cache $http_pragma    $http_authorization;\n```\nCan be used along with the [`fastcgi_cache_bypass`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_bypass) directive.",
          "description_html": "\u003cp\u003eDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nfastcgi_no_cache $http_pragma    $http_authorization;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eCan be used along with the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_bypass\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_cache_bypass\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_param",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`parameter`* *`value`* [`if_not_empty`]"
          ],
          "isBlock": false,
          "description_md": "Sets a *`parameter`* that should be passed to the FastCGI server.\nThe *`value`* can contain text, variables, and their combination.\nThese directives are inherited from the previous configuration level\nif and only if there are no `fastcgi_param` directives\ndefined on the current level.\n\nThe following example shows the minimum required settings for PHP:\n```\nfastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\nfastcgi_param QUERY_STRING    $query_string;\n```\n\nThe `SCRIPT_FILENAME` parameter is used in PHP for\ndetermining the script name, and the `QUERY_STRING`\nparameter is used to pass request parameters.\n\nFor scripts that process `POST` requests, the\nfollowing three parameters are also required:\n```\nfastcgi_param REQUEST_METHOD  $request_method;\nfastcgi_param CONTENT_TYPE    $content_type;\nfastcgi_param CONTENT_LENGTH  $content_length;\n```\n\nIf PHP was built with the `--enable-force-cgi-redirect`\nconfiguration parameter, the `REDIRECT_STATUS` parameter\nshould also be passed with the value “200”:\n```\nfastcgi_param REDIRECT_STATUS 200;\n```\n\nIf the directive is specified with `if_not_empty` (1.1.11) then\nsuch a parameter will be passed to the server only if its value is not empty:\n```\nfastcgi_param HTTPS           $https if_not_empty;\n```",
          "description_html": "\u003cp\u003eSets a \u003cem\u003e\u003ccode\u003eparameter\u003c/code\u003e\u003c/em\u003e that should be passed to the FastCGI server.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combination.\nThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003efastcgi_param\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cp\u003eThe following example shows the minimum required settings for PHP:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\nfastcgi_param QUERY_STRING    $query_string;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003eSCRIPT_FILENAME\u003c/code\u003e parameter is used in PHP for\ndetermining the script name, and the \u003ccode\u003eQUERY_STRING\u003c/code\u003e\nparameter is used to pass request parameters.\u003c/p\u003e\n\n\u003cp\u003eFor scripts that process \u003ccode\u003ePOST\u003c/code\u003e requests, the\nfollowing three parameters are also required:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_param REQUEST_METHOD  $request_method;\nfastcgi_param CONTENT_TYPE    $content_type;\nfastcgi_param CONTENT_LENGTH  $content_length;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf PHP was built with the \u003ccode\u003e--enable-force-cgi-redirect\u003c/code\u003e\nconfiguration parameter, the \u003ccode\u003eREDIRECT_STATUS\u003c/code\u003e parameter\nshould also be passed with the value “200”:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_param REDIRECT_STATUS 200;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf the directive is specified with \u003ccode\u003eif_not_empty\u003c/code\u003e (1.1.11) then\nsuch a parameter will be passed to the server only if its value is not empty:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_param HTTPS           $https if_not_empty;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "fastcgi_pass",
          "default": "",
          "contexts": [
            "location",
            "if in location"
          ],
          "syntax": [
            "*`address`*"
          ],
          "isBlock": false,
          "description_md": "Sets the address of a FastCGI server.\nThe address can be specified as a domain name or IP address,\nand a port:\n```\nfastcgi_pass localhost:9000;\n```\nor as a UNIX-domain socket path:\n```\nfastcgi_pass unix:/tmp/fastcgi.socket;\n```\n\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n[server group](https://nginx.org/en/docs/http/ngx_http_upstream_module.html).\n\nParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n[server groups](https://nginx.org/en/docs/http/ngx_http_upstream_module.html),\nand, if not found, is determined using a\n[`resolver`](https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver).",
          "description_html": "\u003cp\u003eSets the address of a FastCGI server.\nThe address can be specified as a domain name or IP address,\nand a port:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_pass localhost:9000;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eor as a UNIX-domain socket path:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_pass unix:/tmp/fastcgi.socket;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003eserver group\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003eserver groups\u003c/a\u003e,\nand, if not found, is determined using a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\" target=\"_blank\"\u003e\u003ccode\u003eresolver\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_pass_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`*"
          ],
          "isBlock": false,
          "description_md": "Permits passing [otherwise disabled](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_hide_header) header\nfields from a FastCGI server to a client.",
          "description_html": "\u003cp\u003ePermits passing \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_hide_header\" target=\"_blank\"\u003eotherwise disabled\u003c/a\u003e header\nfields from a FastCGI server to a client.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_pass_request_body",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether the original request body is passed\nto the FastCGI server.\nSee also the [`fastcgi_pass_request_headers`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass_request_headers) directive.",
          "description_html": "\u003cp\u003eIndicates whether the original request body is passed\nto the FastCGI server.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass_request_headers\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_pass_request_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_pass_request_headers",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether the header fields of the original request are passed\nto the FastCGI server.\nSee also the [`fastcgi_pass_request_body`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass_request_body) directive.",
          "description_html": "\u003cp\u003eIndicates whether the header fields of the original request are passed\nto the FastCGI server.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass_request_body\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_pass_request_body\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_read_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for reading a response from the FastCGI server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the FastCGI server does not transmit anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eDefines a timeout for reading a response from the FastCGI server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the FastCGI server does not transmit anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_request_buffering",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables buffering of a client request body.\n\nWhen buffering is enabled, the entire request body is\n[read](https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size)\nfrom the client before sending the request to a FastCGI server.\n\nWhen buffering is disabled, the request body is sent to the FastCGI server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n[next server](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream)\nif nginx already started sending the request body.",
          "description_html": "\u003cp\u003eEnables or disables buffering of a client request body.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is enabled, the entire request body is\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\" target=\"_blank\"\u003eread\u003c/a\u003e\nfrom the client before sending the request to a FastCGI server.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is disabled, the request body is sent to the FastCGI server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e\nif nginx already started sending the request body.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_send_lowat",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "If the directive is set to a non-zero value, nginx will try to\nminimize the number\nof send operations on outgoing connections to a FastCGI server by using either\n`NOTE_LOWAT` flag of the\n[`kqueue`](https://nginx.org/en/docs/events.html#kqueue) method,\nor the `SO_SNDLOWAT` socket option,\nwith the specified *`size`*.\n\nThis directive is ignored on Linux, Solaris, and Windows.",
          "description_html": "\u003cp\u003eIf the directive is set to a non-zero value, nginx will try to\nminimize the number\nof send operations on outgoing connections to a FastCGI server by using either\n\u003ccode\u003eNOTE_LOWAT\u003c/code\u003e flag of the\n\u003ca href=\"https://nginx.org/en/docs/events.html#kqueue\" target=\"_blank\"\u003e\u003ccode\u003ekqueue\u003c/code\u003e\u003c/a\u003e method,\nor the \u003ccode\u003eSO_SNDLOWAT\u003c/code\u003e socket option,\nwith the specified \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis directive is ignored on Linux, Solaris, and Windows.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_send_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for transmitting a request to the FastCGI server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the FastCGI server does not receive anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eSets a timeout for transmitting a request to the FastCGI server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the FastCGI server does not receive anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_socket_keepalive",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Configures the “TCP keepalive” behavior\nfor outgoing connections to a FastCGI server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “`on`”, the\n`SO_KEEPALIVE` socket option is turned on for the socket.",
          "description_html": "\u003cp\u003eConfigures the “TCP keepalive” behavior\nfor outgoing connections to a FastCGI server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “\u003ccode\u003eon\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e socket option is turned on for the socket.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_split_path_info",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            "*`regex`*"
          ],
          "isBlock": false,
          "description_md": "Defines a regular expression that captures a value for the\n`$fastcgi_path_info` variable.\nThe regular expression should have two captures: the first becomes\na value of the `$fastcgi_script_name` variable, the second\nbecomes a value of the `$fastcgi_path_info` variable.\nFor example, with these settings\n```\nlocation ~ ^(.+\\.php)(.*)$ {\n    fastcgi_split_path_info       ^(.+\\.php)(.*)$;\n    fastcgi_param SCRIPT_FILENAME /path/to/php$fastcgi_script_name;\n    fastcgi_param PATH_INFO       $fastcgi_path_info;\n```\nand the “`/show.php/article/0001`” request,\nthe `SCRIPT_FILENAME` parameter will be equal to\n“`/path/to/php/show.php`”, and the\n`PATH_INFO` parameter will be equal to\n“`/article/0001`”.",
          "description_html": "\u003cp\u003eDefines a regular expression that captures a value for the\n\u003ccode\u003e$fastcgi_path_info\u003c/code\u003e variable.\nThe regular expression should have two captures: the first becomes\na value of the \u003ccode\u003e$fastcgi_script_name\u003c/code\u003e variable, the second\nbecomes a value of the \u003ccode\u003e$fastcgi_path_info\u003c/code\u003e variable.\nFor example, with these settings\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation ~ ^(.+\\.php)(.*)$ {\n    fastcgi_split_path_info       ^(.+\\.php)(.*)$;\n    fastcgi_param SCRIPT_FILENAME /path/to/php$fastcgi_script_name;\n    fastcgi_param PATH_INFO       $fastcgi_path_info;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eand the “\u003ccode\u003e/show.php/article/0001\u003c/code\u003e” request,\nthe \u003ccode\u003eSCRIPT_FILENAME\u003c/code\u003e parameter will be equal to\n“\u003ccode\u003e/path/to/php/show.php\u003c/code\u003e”, and the\n\u003ccode\u003ePATH_INFO\u003c/code\u003e parameter will be equal to\n“\u003ccode\u003e/article/0001\u003c/code\u003e”.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_store",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off` | *`string`*"
          ],
          "isBlock": false,
          "description_md": "Enables saving of files to a disk.\nThe `on` parameter saves files with paths\ncorresponding to the directives\n[`alias`](https://nginx.org/en/docs/http/ngx_http_core_module.html#alias) or\n[`root`](https://nginx.org/en/docs/http/ngx_http_core_module.html#root).\nThe `off` parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n*`string`* with variables:\n```\nfastcgi_store /data/www$original_uri;\n```\n\nThe modification time of files is set according to the received\n\"Last-Modified\" response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the [`fastcgi_temp_path`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_path)\ndirective, are put on the same file system.\n\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n```\nlocation /images/ {\n    root                 /data/www;\n    error_page           404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    fastcgi_pass         backend:9000;\n    ...\n\n    fastcgi_store        on;\n    fastcgi_store_access user:rw group:rw all:r;\n    fastcgi_temp_path    /data/temp;\n\n    alias                /data/www/;\n}\n```",
          "description_html": "\u003cp\u003eEnables saving of files to a disk.\nThe \u003ccode\u003eon\u003c/code\u003e parameter saves files with paths\ncorresponding to the directives\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\" target=\"_blank\"\u003e\u003ccode\u003ealias\u003c/code\u003e\u003c/a\u003e or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\" target=\"_blank\"\u003e\u003ccode\u003eroot\u003c/code\u003e\u003c/a\u003e.\nThe \u003ccode\u003eoff\u003c/code\u003e parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n\u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e with variables:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_store /data/www$original_uri;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe modification time of files is set according to the received\n\u0026ldquo;Last-Modified\u0026rdquo; response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_temp_path\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_temp_path\u003c/code\u003e\u003c/a\u003e\ndirective, are put on the same file system.\u003c/p\u003e\n\n\u003cp\u003eThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /images/ {\n    root                 /data/www;\n    error_page           404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    fastcgi_pass         backend:9000;\n    ...\n\n    fastcgi_store        on;\n    fastcgi_store_access user:rw group:rw all:r;\n    fastcgi_temp_path    /data/temp;\n\n    alias                /data/www/;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "fastcgi_store_access",
          "default": "user:rw",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`users`*:*`permissions`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets access permissions for newly created files and directories, e.g.:\n```\nfastcgi_store_access user:rw group:rw all:r;\n```\n\nIf any `group` or `all` access permissions\nare specified then `user` permissions may be omitted:\n```\nfastcgi_store_access group:rw all:r;\n```",
          "description_html": "\u003cp\u003eSets access permissions for newly created files and directories, e.g.:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_store_access user:rw group:rw all:r;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf any \u003ccode\u003egroup\u003c/code\u003e or \u003ccode\u003eall\u003c/code\u003e access permissions\nare specified then \u003ccode\u003euser\u003c/code\u003e permissions may be omitted:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_store_access group:rw all:r;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "fastcgi_temp_file_write_size",
          "default": "8k|16k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Limits the *`size`* of data written to a temporary file\nat a time, when buffering of responses from the FastCGI server\nto temporary files is enabled.\nBy default, *`size`* is limited by two buffers set by the\n[`fastcgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size) and [`fastcgi_buffers`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers) directives.\nThe maximum size of a temporary file is set by the\n[`fastcgi_max_temp_file_size`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_max_temp_file_size) directive.",
          "description_html": "\u003cp\u003eLimits the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of data written to a temporary file\nat a time, when buffering of responses from the FastCGI server\nto temporary files is enabled.\nBy default, \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e is limited by two buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_buffers\u003c/code\u003e\u003c/a\u003e directives.\nThe maximum size of a temporary file is set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_max_temp_file_size\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_max_temp_file_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "fastcgi_temp_path",
          "default": "fastcgi_temp",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`path`* [*`level1`* [*`level2`* [*`level3`*]]]"
          ],
          "isBlock": false,
          "description_md": "Defines a directory for storing temporary files\nwith data received from FastCGI servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\n```\nfastcgi_temp_path /spool/nginx/fastcgi_temp 1 2;\n```\na temporary file might look like this:\n```\n/spool/nginx/fastcgi_temp/7/45/00000123457\n```\n\nSee also the `use_temp_path` parameter of the\n[`fastcgi_cache_path`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_path) directive.",
          "description_html": "\u003cp\u003eDefines a directory for storing temporary files\nwith data received from FastCGI servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efastcgi_temp_path /spool/nginx/fastcgi_temp 1 2;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ea temporary file might look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/spool/nginx/fastcgi_temp/7/45/00000123457\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee also the \u003ccode\u003euse_temp_path\u003c/code\u003e parameter of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_cache_path\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_cache_path\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_flv_module.html",
      "name": "ngx_http_flv_module",
      "directives": [
        {
          "name": "flv",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Turns on module processing in a surrounding location.",
          "description_html": "\u003cp\u003eTurns on module processing in a surrounding location.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_geo_module.html",
      "name": "ngx_http_geo_module",
      "directives": [
        {
          "name": "geo",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "[*`$address`*] *`$variable`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Describes the dependency of values of the specified variable\non the client IP address.\nBy default, the address is taken from the `$remote_addr` variable,\nbut it can also be taken from another variable (0.7.27), for example:\n```\ngeo $arg_remote_addr $geo {\n    ...;\n}\n```\n\n\u003e Since variables are evaluated only when used, the mere existence\n\u003e of even a large number of declared “`geo`” variables\n\u003e does not cause any extra costs for request processing.\n\nIf the value of a variable does not represent a valid IP address\nthen the “`255.255.255.255`” address is used.\n\nAddresses are specified either as prefixes in CIDR notation\n(including individual addresses) or as ranges (0.7.23).\n\u003e IPv6 prefixes are supported starting from versions 1.3.10 and 1.2.7.\n\nThe following special parameters are also supported:\n- `delete`\n\n    deletes the specified network (0.7.23).\n- `default`\n\n    a value set to the variable if the client address does not\n    match any of the specified addresses.\n    When addresses are specified in CIDR notation,\n    “`0.0.0.0/0`” and “`::/0`”\n    can be used instead of `default`.\n    When `default` is not specified, the default\n    value will be an empty string.\n- `include`\n\n    includes a file with addresses and values.\n    There can be several inclusions.\n- `proxy`\n\n    defines trusted addresses (0.8.7, 0.7.63).\n    When a request comes from a trusted address,\n    an address from the \"X-Forwarded-For\" request\n    header field will be used instead.\n    In contrast to the regular addresses, trusted addresses are\n    checked sequentially.\n    \u003e Trusted IPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.\n- `proxy_recursive`\n\n    enables recursive address search (1.3.0, 1.2.1).\n    If recursive search is disabled then instead of the original client\n    address that matches one of the trusted addresses, the last\n    address sent in \"X-Forwarded-For\" will be used.\n    If recursive search is enabled then instead of the original client\n    address that matches one of the trusted addresses, the last\n    non-trusted address sent in \"X-Forwarded-For\" will be used.\n- `ranges`\n\n    indicates that addresses are specified as ranges (0.7.23).\n    This parameter should be the first.\n    To speed up loading of a geo base, addresses should be put in ascending order.\n\nExample:\n```\ngeo $country {\n    default        ZZ;\n    include        conf/geo.conf;\n    delete         127.0.0.0/16;\n    proxy          192.168.100.0/24;\n    proxy          2001:0db8::/32;\n\n    127.0.0.0/24   US;\n    127.0.0.1/32   RU;\n    10.1.0.0/16    RU;\n    192.168.1.0/24 UK;\n}\n```\n\nThe `conf/geo.conf` file could contain the following lines:\n```\n10.2.0.0/16    RU;\n192.168.2.0/24 RU;\n```\n\nA value of the most specific match is used.\nFor example, for the 127.0.0.1 address the value “`RU`”\nwill be chosen, not “`US`”.\n\nExample with ranges:\n```\ngeo $country {\n    ranges;\n    default                   ZZ;\n    127.0.0.0-127.0.0.0       US;\n    127.0.0.1-127.0.0.1       RU;\n    127.0.0.1-127.0.0.255     US;\n    10.1.0.0-10.1.255.255     RU;\n    192.168.1.0-192.168.1.255 UK;\n}\n```",
          "description_html": "\u003cp\u003eDescribes the dependency of values of the specified variable\non the client IP address.\nBy default, the address is taken from the \u003ccode\u003e$remote_addr\u003c/code\u003e variable,\nbut it can also be taken from another variable (0.7.27), for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egeo $arg_remote_addr $geo {\n    ...;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSince variables are evaluated only when used, the mere existence\nof even a large number of declared “\u003ccode\u003egeo\u003c/code\u003e” variables\ndoes not cause any extra costs for request processing.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIf the value of a variable does not represent a valid IP address\nthen the “\u003ccode\u003e255.255.255.255\u003c/code\u003e” address is used.\u003c/p\u003e\n\n\u003cp\u003eAddresses are specified either as prefixes in CIDR notation\n(including individual addresses) or as ranges (0.7.23).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIPv6 prefixes are supported starting from versions 1.3.10 and 1.2.7.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe following special parameters are also supported:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edelete\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edeletes the specified network (0.7.23).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edefault\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea value set to the variable if the client address does not\nmatch any of the specified addresses.\nWhen addresses are specified in CIDR notation,\n“\u003ccode\u003e0.0.0.0/0\u003c/code\u003e” and “\u003ccode\u003e::/0\u003c/code\u003e”\ncan be used instead of \u003ccode\u003edefault\u003c/code\u003e.\nWhen \u003ccode\u003edefault\u003c/code\u003e is not specified, the default\nvalue will be an empty string.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einclude\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eincludes a file with addresses and values.\nThere can be several inclusions.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eproxy\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edefines trusted addresses (0.8.7, 0.7.63).\nWhen a request comes from a trusted address,\nan address from the \u0026ldquo;X-Forwarded-For\u0026rdquo; request\nheader field will be used instead.\nIn contrast to the regular addresses, trusted addresses are\nchecked sequentially.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTrusted IPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eproxy_recursive\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables recursive address search (1.3.0, 1.2.1).\nIf recursive search is disabled then instead of the original client\naddress that matches one of the trusted addresses, the last\naddress sent in \u0026ldquo;X-Forwarded-For\u0026rdquo; will be used.\nIf recursive search is enabled then instead of the original client\naddress that matches one of the trusted addresses, the last\nnon-trusted address sent in \u0026ldquo;X-Forwarded-For\u0026rdquo; will be used.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eranges\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eindicates that addresses are specified as ranges (0.7.23).\nThis parameter should be the first.\nTo speed up loading of a geo base, addresses should be put in ascending order.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egeo $country {\n    default        ZZ;\n    include        conf/geo.conf;\n    delete         127.0.0.0/16;\n    proxy          192.168.100.0/24;\n    proxy          2001:0db8::/32;\n\n    127.0.0.0/24   US;\n    127.0.0.1/32   RU;\n    10.1.0.0/16    RU;\n    192.168.1.0/24 UK;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003econf/geo.conf\u003c/code\u003e file could contain the following lines:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e10.2.0.0/16    RU;\n192.168.2.0/24 RU;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA value of the most specific match is used.\nFor example, for the 127.0.0.1 address the value “\u003ccode\u003eRU\u003c/code\u003e”\nwill be chosen, not “\u003ccode\u003eUS\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eExample with ranges:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egeo $country {\n    ranges;\n    default                   ZZ;\n    127.0.0.0-127.0.0.0       US;\n    127.0.0.1-127.0.0.1       RU;\n    127.0.0.1-127.0.0.255     US;\n    10.1.0.0-10.1.255.255     RU;\n    192.168.1.0-192.168.1.255 UK;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_geoip_module.html",
      "name": "ngx_http_geoip_module",
      "directives": [
        {
          "name": "geoip_country",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a database used to determine the country\ndepending on the client IP address.\nThe following variables are available when using this database:\n- `$geoip_country_code`\n\n    two-letter country code, for example,\n    “`RU`”, “`US`”.\n- `$geoip_country_code3`\n\n    three-letter country code, for example,\n    “`RUS`”, “`USA`”.\n- `$geoip_country_name`\n\n    country name, for example,\n    “`Russian Federation`”, “`United States`”.",
          "description_html": "\u003cp\u003eSpecifies a database used to determine the country\ndepending on the client IP address.\nThe following variables are available when using this database:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_country_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etwo-letter country code, for example,\n“\u003ccode\u003eRU\u003c/code\u003e”, “\u003ccode\u003eUS\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_country_code3\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethree-letter country code, for example,\n“\u003ccode\u003eRUS\u003c/code\u003e”, “\u003ccode\u003eUSA\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_country_name\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ecountry name, for example,\n“\u003ccode\u003eRussian Federation\u003c/code\u003e”, “\u003ccode\u003eUnited States\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "geoip_city",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a database used to determine the country, region, and city\ndepending on the client IP address.\nThe following variables are available when using this database:\n- `$geoip_area_code`\n\n    telephone area code (US only).\n    \u003e This variable may contain outdated information since\n    \u003e the corresponding database field is deprecated.\n- `$geoip_city_continent_code`\n\n    two-letter continent code, for example,\n    “`EU`”, “`NA`”.\n- `$geoip_city_country_code`\n\n    two-letter country code, for example,\n    “`RU`”, “`US`”.\n- `$geoip_city_country_code3`\n\n    three-letter country code, for example,\n    “`RUS`”, “`USA`”.\n- `$geoip_city_country_name`\n\n    country name, for example,\n    “`Russian Federation`”, “`United States`”.\n- `$geoip_dma_code`\n\n    DMA region code in US (also known as “metro code”), according to the\n    [geotargeting](https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions)\n    in Google AdWords API.\n- `$geoip_latitude`\n\n    latitude.\n- `$geoip_longitude`\n\n    longitude.\n- `$geoip_region`\n\n    two-symbol country region code (region, territory, state, province, federal land\n    and the like), for example,\n    “`48`”, “`DC`”.\n- `$geoip_region_name`\n\n    country region name (region, territory, state, province, federal land\n    and the like), for example,\n    “`Moscow City`”, “`District of Columbia`”.\n- `$geoip_city`\n\n    city name, for example,\n    “`Moscow`”, “`Washington`”.\n- `$geoip_postal_code`\n\n    postal code.",
          "description_html": "\u003cp\u003eSpecifies a database used to determine the country, region, and city\ndepending on the client IP address.\nThe following variables are available when using this database:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_area_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etelephone area code (US only).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis variable may contain outdated information since\nthe corresponding database field is deprecated.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_city_continent_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etwo-letter continent code, for example,\n“\u003ccode\u003eEU\u003c/code\u003e”, “\u003ccode\u003eNA\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_city_country_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etwo-letter country code, for example,\n“\u003ccode\u003eRU\u003c/code\u003e”, “\u003ccode\u003eUS\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_city_country_code3\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethree-letter country code, for example,\n“\u003ccode\u003eRUS\u003c/code\u003e”, “\u003ccode\u003eUSA\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_city_country_name\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ecountry name, for example,\n“\u003ccode\u003eRussian Federation\u003c/code\u003e”, “\u003ccode\u003eUnited States\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_dma_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eDMA region code in US (also known as “metro code”), according to the\n\u003ca href=\"https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions\" target=\"_blank\"\u003egeotargeting\u003c/a\u003e\nin Google AdWords API.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_latitude\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003elatitude.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_longitude\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003elongitude.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_region\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etwo-symbol country region code (region, territory, state, province, federal land\nand the like), for example,\n“\u003ccode\u003e48\u003c/code\u003e”, “\u003ccode\u003eDC\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_region_name\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ecountry region name (region, territory, state, province, federal land\nand the like), for example,\n“\u003ccode\u003eMoscow City\u003c/code\u003e”, “\u003ccode\u003eDistrict of Columbia\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_city\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ecity name, for example,\n“\u003ccode\u003eMoscow\u003c/code\u003e”, “\u003ccode\u003eWashington\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_postal_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003epostal code.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "geoip_org",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a database used to determine the organization\ndepending on the client IP address.\nThe following variable is available when using this database:\n- `$geoip_org`\n\n    organization name, for example, “The University of Melbourne”.",
          "description_html": "\u003cp\u003eSpecifies a database used to determine the organization\ndepending on the client IP address.\nThe following variable is available when using this database:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_org\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eorganization name, for example, “The University of Melbourne”.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "geoip_proxy",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`address`* | *`CIDR`*"
          ],
          "isBlock": false,
          "description_md": "Defines trusted addresses.\nWhen a request comes from a trusted address,\nan address from the \"X-Forwarded-For\" request\nheader field will be used instead.",
          "description_html": "\u003cp\u003eDefines trusted addresses.\nWhen a request comes from a trusted address,\nan address from the \u0026ldquo;X-Forwarded-For\u0026rdquo; request\nheader field will be used instead.\u003c/p\u003e\n"
        },
        {
          "name": "geoip_proxy_recursive",
          "default": "off",
          "contexts": [
            "http"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "If recursive search is disabled then instead of the original client\naddress that matches one of the trusted addresses, the last\naddress sent in \"X-Forwarded-For\" will be used.\nIf recursive search is enabled then instead of the original client\naddress that matches one of the trusted addresses, the last\nnon-trusted address sent in \"X-Forwarded-For\" will be used.",
          "description_html": "\u003cp\u003eIf recursive search is disabled then instead of the original client\naddress that matches one of the trusted addresses, the last\naddress sent in \u0026ldquo;X-Forwarded-For\u0026rdquo; will be used.\nIf recursive search is enabled then instead of the original client\naddress that matches one of the trusted addresses, the last\nnon-trusted address sent in \u0026ldquo;X-Forwarded-For\u0026rdquo; will be used.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_grpc_module.html",
      "name": "ngx_http_grpc_module",
      "directives": [
        {
          "name": "grpc_bind",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`address`* [`transparent `] | `off`"
          ],
          "isBlock": false,
          "description_md": "Makes outgoing connections to a gRPC server originate\nfrom the specified local IP address with an optional port.\nParameter value can contain variables.\nThe special value `off` cancels the effect\nof the `grpc_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n\nThe `transparent` parameter allows\noutgoing connections to a gRPC server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\n```\ngrpc_bind $remote_addr transparent;\n```\nIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n[superuser](https://nginx.org/en/docs/ngx_core_module.html#user) privileges.\nOn Linux it is not required as if\nthe `transparent` parameter is specified, worker processes\ninherit the `CAP_NET_RAW` capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the gRPC server.",
          "description_html": "\u003cp\u003eMakes outgoing connections to a gRPC server originate\nfrom the specified local IP address with an optional port.\nParameter value can contain variables.\nThe special value \u003ccode\u003eoff\u003c/code\u003e cancels the effect\nof the \u003ccode\u003egrpc_bind\u003c/code\u003e directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003etransparent\u003c/code\u003e parameter allows\noutgoing connections to a gRPC server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egrpc_bind $remote_addr transparent;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#user\" target=\"_blank\"\u003esuperuser\u003c/a\u003e privileges.\nOn Linux it is not required as if\nthe \u003ccode\u003etransparent\u003c/code\u003e parameter is specified, worker processes\ninherit the \u003ccode\u003eCAP_NET_RAW\u003c/code\u003e capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the gRPC server.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_buffer_size",
          "default": "4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading the response\nreceived from the gRPC server.\nThe response is passed to the client synchronously, as soon as it is received.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading the response\nreceived from the gRPC server.\nThe response is passed to the client synchronously, as soon as it is received.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_connect_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for establishing a connection with a gRPC server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.",
          "description_html": "\u003cp\u003eDefines a timeout for establishing a connection with a gRPC server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_hide_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`*"
          ],
          "isBlock": false,
          "description_md": "By default,\nnginx does not pass the header fields \"Date\",\n\"Server\", and\n\"X-Accel-...\" from the response of a gRPC\nserver to a client.\nThe `grpc_hide_header` directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe [`grpc_pass_header`](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass_header) directive can be used.",
          "description_html": "\u003cp\u003eBy default,\nnginx does not pass the header fields \u0026ldquo;Date\u0026rdquo;,\n\u0026ldquo;Server\u0026rdquo;, and\n\u0026ldquo;X-Accel-\u0026hellip;\u0026rdquo; from the response of a gRPC\nserver to a client.\nThe \u003ccode\u003egrpc_hide_header\u003c/code\u003e directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass_header\" target=\"_blank\"\u003e\u003ccode\u003egrpc_pass_header\u003c/code\u003e\u003c/a\u003e directive can be used.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ignore_headers",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`* ..."
          ],
          "isBlock": false,
          "description_md": "Disables processing of certain response header fields from the gRPC server.\nThe following fields can be ignored: \"X-Accel-Redirect\"\nand \"X-Accel-Charset\".\n\nIf not disabled, processing of these header fields has the following\neffect:\n- \"X-Accel-Redirect\" performs an\n    [internal redirect](https://nginx.org/en/docs/http/ngx_http_core_module.html#internal) to the specified URI;\n- \"X-Accel-Charset\" sets the desired\n    [`charset`](https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset)\n    of a response.",
          "description_html": "\u003cp\u003eDisables processing of certain response header fields from the gRPC server.\nThe following fields can be ignored: \u0026ldquo;X-Accel-Redirect\u0026rdquo;\nand \u0026ldquo;X-Accel-Charset\u0026rdquo;.\u003c/p\u003e\n\n\u003cp\u003eIf not disabled, processing of these header fields has the following\neffect:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Redirect\u0026rdquo; performs an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#internal\" target=\"_blank\"\u003einternal redirect\u003c/a\u003e to the specified URI;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Charset\u0026rdquo; sets the desired\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\" target=\"_blank\"\u003e\u003ccode\u003echarset\u003c/code\u003e\u003c/a\u003e\nof a response.\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "grpc_intercept_errors",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether gRPC server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the [`error_page`](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page) directive.",
          "description_html": "\u003cp\u003eDetermines whether gRPC server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\" target=\"_blank\"\u003e\u003ccode\u003eerror_page\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_next_upstream",
          "default": "error timeout",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`error` | `timeout` | `invalid_header` | `http_500` | `http_502` | `http_503` | `http_504` | `http_403` | `http_404` | `http_429` | `non_idempotent` | `off` ..."
          ],
          "isBlock": false,
          "description_md": "Specifies in which cases a request should be passed to the next server:\n- `error`\n\n    an error occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `timeout`\n\n    a timeout has occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `invalid_header`\n\n    a server returned an empty or invalid response;\n- `http_500`\n\n    a server returned a response with the code 500;\n- `http_502`\n\n    a server returned a response with the code 502;\n- `http_503`\n\n    a server returned a response with the code 503;\n- `http_504`\n\n    a server returned a response with the code 504;\n- `http_403`\n\n    a server returned a response with the code 403;\n- `http_404`\n\n    a server returned a response with the code 404;\n- `http_429`\n\n    a server returned a response with the code 429;\n- `non_idempotent`\n\n    normally, requests with a\n    [non-idempotent](https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2)\n    method\n    (`POST`, `LOCK`, `PATCH`)\n    are not passed to the next server\n    if a request has been sent to an upstream server;\n    enabling this option explicitly allows retrying such requests;\n- `off`\n\n    disables passing a request to the next server.\n\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n\nThe directive also defines what is considered an\n[unsuccessful attempt](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails) of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_header` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of `http_500`, `http_502`,\n`http_503`, `http_504`,\nand `http_429` are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of `http_403` and `http_404`\nare never considered unsuccessful attempts.\n\nPassing a request to the next server can be limited by\n[the number of tries](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream_tries)\nand by [time](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream_timeout).",
          "description_html": "\u003cp\u003eSpecifies in which cases a request should be passed to the next server:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eerror\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ean error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einvalid_header\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned an empty or invalid response;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_500\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 500;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_502\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 502;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_503\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 503;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_504\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 504;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_403\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 403;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_404\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 404;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_429\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 429;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enon_idempotent\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003enormally, requests with a\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\" target=\"_blank\"\u003enon-idempotent\u003c/a\u003e\nmethod\n(\u003ccode\u003ePOST\u003c/code\u003e, \u003ccode\u003eLOCK\u003c/code\u003e, \u003ccode\u003ePATCH\u003c/code\u003e)\nare not passed to the next server\nif a request has been sent to an upstream server;\nenabling this option explicitly allows retrying such requests;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables passing a request to the next server.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\u003c/p\u003e\n\n\u003cp\u003eThe directive also defines what is considered an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\" target=\"_blank\"\u003eunsuccessful attempt\u003c/a\u003e of communication with a server.\nThe cases of \u003ccode\u003eerror\u003c/code\u003e, \u003ccode\u003etimeout\u003c/code\u003e and\n\u003ccode\u003einvalid_header\u003c/code\u003e are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of \u003ccode\u003ehttp_500\u003c/code\u003e, \u003ccode\u003ehttp_502\u003c/code\u003e,\n\u003ccode\u003ehttp_503\u003c/code\u003e, \u003ccode\u003ehttp_504\u003c/code\u003e,\nand \u003ccode\u003ehttp_429\u003c/code\u003e are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of \u003ccode\u003ehttp_403\u003c/code\u003e and \u003ccode\u003ehttp_404\u003c/code\u003e\nare never considered unsuccessful attempts.\u003c/p\u003e\n\n\u003cp\u003ePassing a request to the next server can be limited by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream_tries\" target=\"_blank\"\u003ethe number of tries\u003c/a\u003e\nand by \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream_timeout\" target=\"_blank\"\u003etime\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_next_upstream_timeout",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Limits the time during which a request can be passed to the\n[next server](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the time during which a request can be passed to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_next_upstream_tries",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Limits the number of possible tries for passing a request to the\n[next server](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the number of possible tries for passing a request to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_pass",
          "default": "",
          "contexts": [
            "location",
            "if in location"
          ],
          "syntax": [
            "*`address`*"
          ],
          "isBlock": false,
          "description_md": "Sets the gRPC server address.\nThe address can be specified as a domain name or IP address,\nand a port:\n```\ngrpc_pass localhost:9000;\n```\nor as a UNIX-domain socket path:\n```\ngrpc_pass unix:/tmp/grpc.socket;\n```\nAlternatively, the “`grpc://`” scheme can be used:\n```\ngrpc_pass grpc://127.0.0.1:9000;\n```\nTo use gRPC over SSL, the “`grpcs://`” scheme should be used:\n```\ngrpc_pass grpcs://127.0.0.1:443;\n```\n\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n[server group](https://nginx.org/en/docs/http/ngx_http_upstream_module.html).\n\nParameter value can contain variables (1.17.8).\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n[server groups](https://nginx.org/en/docs/http/ngx_http_upstream_module.html),\nand, if not found, is determined using a\n[`resolver`](https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver).",
          "description_html": "\u003cp\u003eSets the gRPC server address.\nThe address can be specified as a domain name or IP address,\nand a port:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egrpc_pass localhost:9000;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eor as a UNIX-domain socket path:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egrpc_pass unix:/tmp/grpc.socket;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAlternatively, the “\u003ccode\u003egrpc://\u003c/code\u003e” scheme can be used:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egrpc_pass grpc://127.0.0.1:9000;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo use gRPC over SSL, the “\u003ccode\u003egrpcs://\u003c/code\u003e” scheme should be used:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egrpc_pass grpcs://127.0.0.1:443;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003eserver group\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eParameter value can contain variables (1.17.8).\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003eserver groups\u003c/a\u003e,\nand, if not found, is determined using a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\" target=\"_blank\"\u003e\u003ccode\u003eresolver\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_pass_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`*"
          ],
          "isBlock": false,
          "description_md": "Permits passing [otherwise disabled](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_hide_header) header\nfields from a gRPC server to a client.",
          "description_html": "\u003cp\u003ePermits passing \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_hide_header\" target=\"_blank\"\u003eotherwise disabled\u003c/a\u003e header\nfields from a gRPC server to a client.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_read_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for reading a response from the gRPC server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the gRPC server does not transmit anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eDefines a timeout for reading a response from the gRPC server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the gRPC server does not transmit anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_send_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for transmitting a request to the gRPC server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the gRPC server does not receive anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eSets a timeout for transmitting a request to the gRPC server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the gRPC server does not receive anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_set_header",
          "default": "Content-Length $content_length",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Allows redefining or appending fields to the request header\n[passed](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass_request_headers) to the gRPC server.\nThe *`value`* can contain text, variables, and their combinations.\nThese directives are inherited from the previous configuration level\nif and only if there are no `grpc_set_header` directives\ndefined on the current level.\n\nIf the value of a header field is an empty string then this\nfield will not be passed to a gRPC server:\n```\ngrpc_set_header Accept-Encoding \"\";\n```",
          "description_html": "\u003cp\u003eAllows redefining or appending fields to the request header\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass_request_headers\" target=\"_blank\"\u003epassed\u003c/a\u003e to the gRPC server.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combinations.\nThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003egrpc_set_header\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cp\u003eIf the value of a header field is an empty string then this\nfield will not be passed to a gRPC server:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egrpc_set_header Accept-Encoding \u0026quot;\u0026quot;;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "grpc_socket_keepalive",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Configures the “TCP keepalive” behavior\nfor outgoing connections to a gRPC server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “`on`”, the\n`SO_KEEPALIVE` socket option is turned on for the socket.",
          "description_html": "\u003cp\u003eConfigures the “TCP keepalive” behavior\nfor outgoing connections to a gRPC server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “\u003ccode\u003eon\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e socket option is turned on for the socket.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_certificate",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the certificate in the PEM format\nused for authentication to a gRPC SSL server.\n\nSince version 1.21.0, variables can be used in the *`file`* name.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the certificate in the PEM format\nused for authentication to a gRPC SSL server.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.21.0, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_certificate_key",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the secret key in the PEM format\nused for authentication to a gRPC SSL server.\n\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`*,\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n\nSince version 1.21.0, variables can be used in the *`file`* name.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key in the PEM format\nused for authentication to a gRPC SSL server.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003eengine\u003c/code\u003e:\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e,\nwhich loads a secret key with a specified \u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\nfrom the OpenSSL engine \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.21.0, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_ciphers",
          "default": "DEFAULT",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`ciphers`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the enabled ciphers for requests to a gRPC SSL server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n\nThe full list can be viewed using the\n“`openssl ciphers`” command.",
          "description_html": "\u003cp\u003eSpecifies the enabled ciphers for requests to a gRPC SSL server.\nThe ciphers are specified in the format understood by the OpenSSL library.\u003c/p\u003e\n\n\u003cp\u003eThe full list can be viewed using the\n“\u003ccode\u003eopenssl ciphers\u003c/code\u003e” command.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_conf_command",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets arbitrary OpenSSL configuration\n[commands](https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html)\nwhen establishing a connection with the gRPC SSL server.\n\u003e The directive is supported when using OpenSSL 1.0.2 or higher.\n\nSeveral `grpc_ssl_conf_command` directives\ncan be specified on the same level.\nThese directives are inherited from the previous configuration level\nif and only if there are\nno `grpc_ssl_conf_command` directives\ndefined on the current level.\n\n\u003e Note that configuring OpenSSL directly\n\u003e might result in unexpected behavior.",
          "description_html": "\u003cp\u003eSets arbitrary OpenSSL configuration\n\u003ca href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\" target=\"_blank\"\u003ecommands\u003c/a\u003e\nwhen establishing a connection with the gRPC SSL server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is supported when using OpenSSL 1.0.2 or higher.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003egrpc_ssl_conf_command\u003c/code\u003e directives\ncan be specified on the same level.\nThese directives are inherited from the previous configuration level\nif and only if there are\nno \u003ccode\u003egrpc_ssl_conf_command\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote that configuring OpenSSL directly\nmight result in unexpected behavior.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "grpc_ssl_crl",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to [verify](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify)\nthe certificate of the gRPC SSL server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with revoked certificates (CRL)\nin the PEM format used to \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the gRPC SSL server.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_name",
          "default": "host from grpc_pass",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`*"
          ],
          "isBlock": false,
          "description_md": "Allows overriding the server name used to\n[verify](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify)\nthe certificate of the gRPC SSL server and to be\n[passed through SNI](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_server_name)\nwhen establishing a connection with the gRPC SSL server.\n\nBy default, the host part from [`grpc_pass`](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass) is used.",
          "description_html": "\u003cp\u003eAllows overriding the server name used to\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the gRPC SSL server and to be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_server_name\" target=\"_blank\"\u003epassed through SNI\u003c/a\u003e\nwhen establishing a connection with the gRPC SSL server.\u003c/p\u003e\n\n\u003cp\u003eBy default, the host part from \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_pass\" target=\"_blank\"\u003e\u003ccode\u003egrpc_pass\u003c/code\u003e\u003c/a\u003e is used.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_password_file",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with passphrases for\n[secret keys](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_certificate_key)\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with passphrases for\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_certificate_key\" target=\"_blank\"\u003esecret keys\u003c/a\u003e\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_protocols",
          "default": "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "[`SSLv2`] [`SSLv3`] [`TLSv1`] [`TLSv1.1`] [`TLSv1.2`] [`TLSv1.3`]"
          ],
          "isBlock": false,
          "description_md": "Enables the specified protocols for requests to a gRPC SSL server.\n\n\u003e The `TLSv1.3` parameter is used by default\n\u003e since 1.23.4.",
          "description_html": "\u003cp\u003eEnables the specified protocols for requests to a gRPC SSL server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003eTLSv1.3\u003c/code\u003e parameter is used by default\nsince 1.23.4.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "grpc_ssl_server_name",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables passing of the server name through\n[TLS Server Name Indication extension](http://en.wikipedia.org/wiki/Server_Name_Indication) (SNI, RFC 6066)\nwhen establishing a connection with the gRPC SSL server.",
          "description_html": "\u003cp\u003eEnables or disables passing of the server name through\n\u003ca href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\" target=\"_blank\"\u003eTLS Server Name Indication extension\u003c/a\u003e (SNI, RFC 6066)\nwhen establishing a connection with the gRPC SSL server.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_session_reuse",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether SSL sessions can be reused when working with\nthe gRPC server.\nIf the errors\n“`SSL3_GET_FINISHED:digest check failed`”\nappear in the logs, try disabling session reuse.",
          "description_html": "\u003cp\u003eDetermines whether SSL sessions can be reused when working with\nthe gRPC server.\nIf the errors\n“\u003ccode\u003eSSL3_GET_FINISHED:digest check failed\u003c/code\u003e”\nappear in the logs, try disabling session reuse.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_trusted_certificate",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify)\nthe certificate of the gRPC SSL server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the gRPC SSL server.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_verify",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables verification of the gRPC SSL server certificate.",
          "description_html": "\u003cp\u003eEnables or disables verification of the gRPC SSL server certificate.\u003c/p\u003e\n"
        },
        {
          "name": "grpc_ssl_verify_depth",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the verification depth in the gRPC SSL server certificates chain.",
          "description_html": "\u003cp\u003eSets the verification depth in the gRPC SSL server certificates chain.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_gunzip_module.html",
      "name": "ngx_http_gunzip_module",
      "directives": [
        {
          "name": "gunzip",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables decompression of gzipped responses\nfor clients that lack gzip support.\nIf enabled, the following directives are also taken into account\nwhen determining if clients support gzip:\n[`gzip_http_version`](https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_http_version),\n[`gzip_proxied`](https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied), and\n[`gzip_disable`](https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_disable).\nSee also the [`gzip_vary`](https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_vary) directive.",
          "description_html": "\u003cp\u003eEnables or disables decompression of gzipped responses\nfor clients that lack gzip support.\nIf enabled, the following directives are also taken into account\nwhen determining if clients support gzip:\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_http_version\" target=\"_blank\"\u003e\u003ccode\u003egzip_http_version\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied\" target=\"_blank\"\u003e\u003ccode\u003egzip_proxied\u003c/code\u003e\u003c/a\u003e, and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_disable\" target=\"_blank\"\u003e\u003ccode\u003egzip_disable\u003c/code\u003e\u003c/a\u003e.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_vary\" target=\"_blank\"\u003e\u003ccode\u003egzip_vary\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "gunzip_buffers",
          "default": "32 4k|16 8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* and *`size`* of buffers\nused to decompress a response.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of buffers\nused to decompress a response.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_gzip_module.html",
      "name": "ngx_http_gzip_module",
      "directives": [
        {
          "name": "gzip",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables gzipping of responses.",
          "description_html": "\u003cp\u003eEnables or disables gzipping of responses.\u003c/p\u003e\n"
        },
        {
          "name": "gzip_buffers",
          "default": "32 4k|16 8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* and *`size`* of buffers\nused to compress a response.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n\u003e Until version 0.7.28, four 4K or 8K buffers were used by default.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of buffers\nused to compress a response.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eUntil version 0.7.28, four 4K or 8K buffers were used by default.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "gzip_comp_level",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`level`*"
          ],
          "isBlock": false,
          "description_md": "Sets a gzip compression *`level`* of a response.\nAcceptable values are in the range from 1 to 9.",
          "description_html": "\u003cp\u003eSets a gzip compression \u003cem\u003e\u003ccode\u003elevel\u003c/code\u003e\u003c/em\u003e of a response.\nAcceptable values are in the range from 1 to 9.\u003c/p\u003e\n"
        },
        {
          "name": "gzip_disable",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`regex`* ..."
          ],
          "isBlock": false,
          "description_md": "Disables gzipping of responses for requests with\n\"User-Agent\" header fields matching\nany of the specified regular expressions.\n\nThe special mask “`msie6`” (0.7.12) corresponds to\nthe regular expression “`MSIE [4-6]\\.`”, but works faster.\nStarting from version 0.8.11, “`MSIE 6.0; ... SV1`”\nis excluded from this mask.",
          "description_html": "\u003cp\u003eDisables gzipping of responses for requests with\n\u0026ldquo;User-Agent\u0026rdquo; header fields matching\nany of the specified regular expressions.\u003c/p\u003e\n\n\u003cp\u003eThe special mask “\u003ccode\u003emsie6\u003c/code\u003e” (0.7.12) corresponds to\nthe regular expression “\u003ccode\u003eMSIE [4-6]\\.\u003c/code\u003e”, but works faster.\nStarting from version 0.8.11, “\u003ccode\u003eMSIE 6.0; ... SV1\u003c/code\u003e”\nis excluded from this mask.\u003c/p\u003e\n"
        },
        {
          "name": "gzip_http_version",
          "default": "1.1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`1.0` | `1.1`"
          ],
          "isBlock": false,
          "description_md": "Sets the minimum HTTP version of a request required to compress a response.",
          "description_html": "\u003cp\u003eSets the minimum HTTP version of a request required to compress a response.\u003c/p\u003e\n"
        },
        {
          "name": "gzip_min_length",
          "default": "20",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`length`*"
          ],
          "isBlock": false,
          "description_md": "Sets the minimum length of a response that will be gzipped.\nThe length is determined only from the \"Content-Length\"\nresponse header field.",
          "description_html": "\u003cp\u003eSets the minimum length of a response that will be gzipped.\nThe length is determined only from the \u0026ldquo;Content-Length\u0026rdquo;\nresponse header field.\u003c/p\u003e\n"
        },
        {
          "name": "gzip_proxied",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`off` | `expired` | `no-cache` | `no-store` | `private` | `no_last_modified` | `no_etag` | `auth` | `any` ..."
          ],
          "isBlock": false,
          "description_md": "Enables or disables gzipping of responses for proxied\nrequests depending on the request and response.\nThe fact that the request is proxied is determined by\nthe presence of the \"Via\" request header field.\nThe directive accepts multiple parameters:\n- `off`\n\n    disables compression for all proxied requests,\n    ignoring other parameters;\n- `expired`\n\n    enables compression if a response header includes the\n    \"Expires\" field with a value that disables caching;\n- `no-cache`\n\n    enables compression if a response header includes the\n    \"Cache-Control\" field with the\n    “`no-cache`” parameter;\n- `no-store`\n\n    enables compression if a response header includes the\n    \"Cache-Control\" field with the\n    “`no-store`” parameter;\n- `private`\n\n    enables compression if a response header includes the\n    \"Cache-Control\" field with the\n    “`private`” parameter;\n- `no_last_modified`\n\n    enables compression if a response header does not include the\n    \"Last-Modified\" field;\n- `no_etag`\n\n    enables compression if a response header does not include the\n    \"ETag\" field;\n- `auth`\n\n    enables compression if a request header includes the\n    \"Authorization\" field;\n- `any`\n\n    enables compression for all proxied requests.",
          "description_html": "\u003cp\u003eEnables or disables gzipping of responses for proxied\nrequests depending on the request and response.\nThe fact that the request is proxied is determined by\nthe presence of the \u0026ldquo;Via\u0026rdquo; request header field.\nThe directive accepts multiple parameters:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables compression for all proxied requests,\nignoring other parameters;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eexpired\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables compression if a response header includes the\n\u0026ldquo;Expires\u0026rdquo; field with a value that disables caching;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eno-cache\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables compression if a response header includes the\n\u0026ldquo;Cache-Control\u0026rdquo; field with the\n“\u003ccode\u003eno-cache\u003c/code\u003e” parameter;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eno-store\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables compression if a response header includes the\n\u0026ldquo;Cache-Control\u0026rdquo; field with the\n“\u003ccode\u003eno-store\u003c/code\u003e” parameter;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eprivate\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables compression if a response header includes the\n\u0026ldquo;Cache-Control\u0026rdquo; field with the\n“\u003ccode\u003eprivate\u003c/code\u003e” parameter;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eno_last_modified\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables compression if a response header does not include the\n\u0026ldquo;Last-Modified\u0026rdquo; field;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eno_etag\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables compression if a response header does not include the\n\u0026ldquo;ETag\u0026rdquo; field;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eauth\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables compression if a request header includes the\n\u0026ldquo;Authorization\u0026rdquo; field;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eany\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables compression for all proxied requests.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "gzip_types",
          "default": "text/html",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`mime-type`* ..."
          ],
          "isBlock": false,
          "description_md": "Enables gzipping of responses for the specified MIME types in addition\nto “`text/html`”.\nThe special value “`*`” matches any MIME type (0.8.29).\nResponses with the “`text/html`” type are always compressed.",
          "description_html": "\u003cp\u003eEnables gzipping of responses for the specified MIME types in addition\nto “\u003ccode\u003etext/html\u003c/code\u003e”.\nThe special value “\u003ccode\u003e*\u003c/code\u003e” matches any MIME type (0.8.29).\nResponses with the “\u003ccode\u003etext/html\u003c/code\u003e” type are always compressed.\u003c/p\u003e\n"
        },
        {
          "name": "gzip_vary",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables inserting the \"Vary: Accept-Encoding\"\nresponse header field if the directives\n[`gzip`](https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip),\n[`gzip_static`](https://nginx.org/en/docs/http/ngx_http_gzip_static_module.html#gzip_static), or\n[`gunzip`](https://nginx.org/en/docs/http/ngx_http_gunzip_module.html#gunzip)\nare active.",
          "description_html": "\u003cp\u003eEnables or disables inserting the \u0026ldquo;Vary: Accept-Encoding\u0026rdquo;\nresponse header field if the directives\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip\" target=\"_blank\"\u003e\u003ccode\u003egzip\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gzip_static_module.html#gzip_static\" target=\"_blank\"\u003e\u003ccode\u003egzip_static\u003c/code\u003e\u003c/a\u003e, or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gunzip_module.html#gunzip\" target=\"_blank\"\u003e\u003ccode\u003egunzip\u003c/code\u003e\u003c/a\u003e\nare active.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_gzip_static_module.html",
      "name": "ngx_http_gzip_static_module",
      "directives": [
        {
          "name": "gzip_static",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off` | `always`"
          ],
          "isBlock": false,
          "description_md": "Enables (“`on`”) or disables (“`off`”)\nchecking the existence of precompressed files.\nThe following directives are also taken into account:\n[`gzip_http_version`](https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_http_version),\n[`gzip_proxied`](https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied),\n[`gzip_disable`](https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_disable),\nand [`gzip_vary`](https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_vary).\n\nWith the “`always`” value (1.3.6), gzipped file is used\nin all cases, without checking if the client supports it.\nIt is useful if there are no uncompressed files on the disk anyway\nor the [ngx_http_gunzip_module](https://nginx.org/en/docs/http/ngx_http_gunzip_module.html)\nis used.\n\nThe files can be compressed using the `gzip` command,\nor any other compatible one.\nIt is recommended that the modification date and time of original and\ncompressed files be the same.",
          "description_html": "\u003cp\u003eEnables (“\u003ccode\u003eon\u003c/code\u003e”) or disables (“\u003ccode\u003eoff\u003c/code\u003e”)\nchecking the existence of precompressed files.\nThe following directives are also taken into account:\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_http_version\" target=\"_blank\"\u003e\u003ccode\u003egzip_http_version\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied\" target=\"_blank\"\u003e\u003ccode\u003egzip_proxied\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_disable\" target=\"_blank\"\u003e\u003ccode\u003egzip_disable\u003c/code\u003e\u003c/a\u003e,\nand \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_vary\" target=\"_blank\"\u003e\u003ccode\u003egzip_vary\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eWith the “\u003ccode\u003ealways\u003c/code\u003e” value (1.3.6), gzipped file is used\nin all cases, without checking if the client supports it.\nIt is useful if there are no uncompressed files on the disk anyway\nor the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_gunzip_module.html\" target=\"_blank\"\u003engx_http_gunzip_module\u003c/a\u003e\nis used.\u003c/p\u003e\n\n\u003cp\u003eThe files can be compressed using the \u003ccode\u003egzip\u003c/code\u003e command,\nor any other compatible one.\nIt is recommended that the modification date and time of original and\ncompressed files be the same.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_headers_module.html",
      "name": "ngx_http_headers_module",
      "directives": [
        {
          "name": "add_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "*`name`* *`value`* [`always`]"
          ],
          "isBlock": false,
          "description_md": "Adds the specified field to a response header provided that\nthe response code equals 200, 201 (1.3.10), 204, 206, 301, 302, 303, 304,\n307 (1.1.16, 1.0.13), or 308 (1.13.0).\nParameter value can contain variables.\n\nThere could be several `add_header` directives.\nThese directives are inherited from the previous configuration level\nif and only if there are no `add_header` directives\ndefined on the current level.\n\nIf the `always` parameter is specified (1.7.5),\nthe header field will be added regardless of the response code.",
          "description_html": "\u003cp\u003eAdds the specified field to a response header provided that\nthe response code equals 200, 201 (1.3.10), 204, 206, 301, 302, 303, 304,\n307 (1.1.16, 1.0.13), or 308 (1.13.0).\nParameter value can contain variables.\u003c/p\u003e\n\n\u003cp\u003eThere could be several \u003ccode\u003eadd_header\u003c/code\u003e directives.\nThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003eadd_header\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003ealways\u003c/code\u003e parameter is specified (1.7.5),\nthe header field will be added regardless of the response code.\u003c/p\u003e\n"
        },
        {
          "name": "add_trailer",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "*`name`* *`value`* [`always`]"
          ],
          "isBlock": false,
          "description_md": "Adds the specified field to the end of a response provided that\nthe response code equals 200, 201, 206, 301, 302, 303, 307, or 308.\nParameter value can contain variables.\n\nThere could be several `add_trailer` directives.\nThese directives are inherited from the previous configuration level\nif and only if there are no `add_trailer` directives\ndefined on the current level.\n\nIf the `always` parameter is specified\nthe specified field will be added regardless of the response code.",
          "description_html": "\u003cp\u003eAdds the specified field to the end of a response provided that\nthe response code equals 200, 201, 206, 301, 302, 303, 307, or 308.\nParameter value can contain variables.\u003c/p\u003e\n\n\u003cp\u003eThere could be several \u003ccode\u003eadd_trailer\u003c/code\u003e directives.\nThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003eadd_trailer\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003ealways\u003c/code\u003e parameter is specified\nthe specified field will be added regardless of the response code.\u003c/p\u003e\n"
        },
        {
          "name": "expires",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "[`modified`] *`time`*",
            "`epoch` | `max` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables adding or modifying the \"Expires\"\nand \"Cache-Control\" response header fields provided that\nthe response code equals 200, 201 (1.3.10), 204, 206, 301, 302, 303, 304,\n307 (1.1.16, 1.0.13), or 308 (1.13.0).\nThe parameter can be a positive or negative\n[time](https://nginx.org/en/docs/syntax.html).\n\nThe time in the \"Expires\" field is computed as a sum of the\ncurrent time and *`time`* specified in the directive.\nIf the `modified` parameter is used (0.7.0, 0.6.32)\nthen the time is computed as a sum of the file’s modification time and\nthe *`time`* specified in the directive.\n\nIn addition, it is possible to specify a time of day using\nthe “`@`” prefix (0.7.9, 0.6.34):\n```\nexpires @15h30m;\n```\n\nThe contents of the \"Cache-Control\" field depends\non the sign of the specified time:\n- time is negative — \"Cache-Control: no-cache\".\n- time is positive or zero —\n    \"Cache-Control: max-age=\",\n    where *`t`* is a time specified in the directive, in seconds.\n\nThe `epoch` parameter sets \"Expires\"\nto the value “`Thu, 01 Jan 1970 00:00:01 GMT`”,\nand \"Cache-Control\" to “`no-cache`”.\n\nThe `max` parameter sets \"Expires\"\nto the value “`Thu, 31 Dec 2037 23:55:55 GMT`”,\nand \"Cache-Control\" to 10 years.\n\nThe `off` parameter disables adding or modifying the\n\"Expires\" and \"Cache-Control\" response\nheader fields.\n\nThe last parameter value can contain variables (1.7.9):\n```\nmap $sent_http_content_type $expires {\n    default         off;\n    application/pdf 42d;\n    ~image/         max;\n}\n\nexpires $expires;\n```",
          "description_html": "\u003cp\u003eEnables or disables adding or modifying the \u0026ldquo;Expires\u0026rdquo;\nand \u0026ldquo;Cache-Control\u0026rdquo; response header fields provided that\nthe response code equals 200, 201 (1.3.10), 204, 206, 301, 302, 303, 304,\n307 (1.1.16, 1.0.13), or 308 (1.13.0).\nThe parameter can be a positive or negative\n\u003ca href=\"https://nginx.org/en/docs/syntax.html\" target=\"_blank\"\u003etime\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe time in the \u0026ldquo;Expires\u0026rdquo; field is computed as a sum of the\ncurrent time and \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e specified in the directive.\nIf the \u003ccode\u003emodified\u003c/code\u003e parameter is used (0.7.0, 0.6.32)\nthen the time is computed as a sum of the file’s modification time and\nthe \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e specified in the directive.\u003c/p\u003e\n\n\u003cp\u003eIn addition, it is possible to specify a time of day using\nthe “\u003ccode\u003e@\u003c/code\u003e” prefix (0.7.9, 0.6.34):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eexpires @15h30m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe contents of the \u0026ldquo;Cache-Control\u0026rdquo; field depends\non the sign of the specified time:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003etime is negative — \u0026ldquo;Cache-Control: no-cache\u0026rdquo;.\u003c/li\u003e\n\u003cli\u003etime is positive or zero —\n\u0026ldquo;Cache-Control: max-age=\u0026rdquo;,\nwhere \u003cem\u003e\u003ccode\u003et\u003c/code\u003e\u003c/em\u003e is a time specified in the directive, in seconds.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe \u003ccode\u003eepoch\u003c/code\u003e parameter sets \u0026ldquo;Expires\u0026rdquo;\nto the value “\u003ccode\u003eThu, 01 Jan 1970 00:00:01 GMT\u003c/code\u003e”,\nand \u0026ldquo;Cache-Control\u0026rdquo; to “\u003ccode\u003eno-cache\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003emax\u003c/code\u003e parameter sets \u0026ldquo;Expires\u0026rdquo;\nto the value “\u003ccode\u003eThu, 31 Dec 2037 23:55:55 GMT\u003c/code\u003e”,\nand \u0026ldquo;Cache-Control\u0026rdquo; to 10 years.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoff\u003c/code\u003e parameter disables adding or modifying the\n\u0026ldquo;Expires\u0026rdquo; and \u0026ldquo;Cache-Control\u0026rdquo; response\nheader fields.\u003c/p\u003e\n\n\u003cp\u003eThe last parameter value can contain variables (1.7.9):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003emap $sent_http_content_type $expires {\n    default         off;\n    application/pdf 42d;\n    ~image/         max;\n}\n\nexpires $expires;\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_hls_module.html",
      "name": "ngx_http_hls_module",
      "directives": [
        {
          "name": "hls",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Turns on HLS streaming in the surrounding location.",
          "description_html": "\u003cp\u003eTurns on HLS streaming in the surrounding location.\u003c/p\u003e\n"
        },
        {
          "name": "hls_buffers",
          "default": "8 2m",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`number`* and *`size`* of buffers\nthat are used for reading and writing data frames.",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of buffers\nthat are used for reading and writing data frames.\u003c/p\u003e\n"
        },
        {
          "name": "hls_forward_args",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Adds arguments from a playlist request to URIs of fragments.\nThis may be useful for performing client authorization at the moment of\nrequesting a fragment, or when protecting an HLS stream with the\n[ngx_http_secure_link_module](https://nginx.org/en/docs/http/ngx_http_secure_link_module.html)\nmodule.\n\nFor example, if a client requests a playlist\n`http://example.com/hls/test.mp4.m3u8?a=1\u0026b=2`,\nthe arguments `a=1` and `b=2`\nwill be added to URIs of fragments after the arguments\n`start` and `end`:\n```\n#EXTM3U\n#EXT-X-VERSION:3\n#EXT-X-TARGETDURATION:15\n#EXT-X-PLAYLIST-TYPE:VOD\n\n#EXTINF:9.333,\ntest.mp4.ts?start=0.000\u0026end=9.333\u0026a=1\u0026b=2\n#EXTINF:7.167,\ntest.mp4.ts?start=9.333\u0026end=16.500\u0026a=1\u0026b=2\n#EXTINF:5.416,\ntest.mp4.ts?start=16.500\u0026end=21.916\u0026a=1\u0026b=2\n#EXTINF:5.500,\ntest.mp4.ts?start=21.916\u0026end=27.416\u0026a=1\u0026b=2\n#EXTINF:15.167,\ntest.mp4.ts?start=27.416\u0026end=42.583\u0026a=1\u0026b=2\n#EXTINF:9.626,\ntest.mp4.ts?start=42.583\u0026end=52.209\u0026a=1\u0026b=2\n\n#EXT-X-ENDLIST\n```\n\nIf an HLS stream is protected with the\n[ngx_http_secure_link_module](https://nginx.org/en/docs/http/ngx_http_secure_link_module.html)\nmodule, `$uri` should not be used in the\n[`secure_link_md5`](https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5)\nexpression because this will cause errors when requesting the fragments.\n[Base URI](https://nginx.org/en/docs/http/ngx_http_map_module.html#map) should be used\ninstead of `$uri`\n(`$hls_uri` in the example):\n```\nhttp {\n    ...\n\n    map $uri $hls_uri {\n        ~^(?\u003cbase_uri\u003e.*).m3u8$ $base_uri;\n        ~^(?\u003cbase_uri\u003e.*).ts$   $base_uri;\n        default                 $uri;\n    }\n\n    server {\n        ...\n\n        location /hls/ {\n            hls;\n            hls_forward_args on;\n\n            alias /var/videos/;\n\n            secure_link $arg_md5,$arg_expires;\n            secure_link_md5 \"$secure_link_expires$hls_uri$remote_addr secret\";\n\n            if ($secure_link = \"\") {\n                return 403;\n            }\n\n            if ($secure_link = \"0\") {\n                return 410;\n            }\n        }\n    }\n}\n```",
          "description_html": "\u003cp\u003eAdds arguments from a playlist request to URIs of fragments.\nThis may be useful for performing client authorization at the moment of\nrequesting a fragment, or when protecting an HLS stream with the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html\" target=\"_blank\"\u003engx_http_secure_link_module\u003c/a\u003e\nmodule.\u003c/p\u003e\n\n\u003cp\u003eFor example, if a client requests a playlist\n\u003ccode\u003ehttp://example.com/hls/test.mp4.m3u8?a=1\u0026amp;b=2\u003c/code\u003e,\nthe arguments \u003ccode\u003ea=1\u003c/code\u003e and \u003ccode\u003eb=2\u003c/code\u003e\nwill be added to URIs of fragments after the arguments\n\u003ccode\u003estart\u003c/code\u003e and \u003ccode\u003eend\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e#EXTM3U\n#EXT-X-VERSION:3\n#EXT-X-TARGETDURATION:15\n#EXT-X-PLAYLIST-TYPE:VOD\n\n#EXTINF:9.333,\ntest.mp4.ts?start=0.000\u0026amp;end=9.333\u0026amp;a=1\u0026amp;b=2\n#EXTINF:7.167,\ntest.mp4.ts?start=9.333\u0026amp;end=16.500\u0026amp;a=1\u0026amp;b=2\n#EXTINF:5.416,\ntest.mp4.ts?start=16.500\u0026amp;end=21.916\u0026amp;a=1\u0026amp;b=2\n#EXTINF:5.500,\ntest.mp4.ts?start=21.916\u0026amp;end=27.416\u0026amp;a=1\u0026amp;b=2\n#EXTINF:15.167,\ntest.mp4.ts?start=27.416\u0026amp;end=42.583\u0026amp;a=1\u0026amp;b=2\n#EXTINF:9.626,\ntest.mp4.ts?start=42.583\u0026amp;end=52.209\u0026amp;a=1\u0026amp;b=2\n\n#EXT-X-ENDLIST\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf an HLS stream is protected with the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html\" target=\"_blank\"\u003engx_http_secure_link_module\u003c/a\u003e\nmodule, \u003ccode\u003e$uri\u003c/code\u003e should not be used in the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5\" target=\"_blank\"\u003e\u003ccode\u003esecure_link_md5\u003c/code\u003e\u003c/a\u003e\nexpression because this will cause errors when requesting the fragments.\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_map_module.html#map\" target=\"_blank\"\u003eBase URI\u003c/a\u003e should be used\ninstead of \u003ccode\u003e$uri\u003c/code\u003e\n(\u003ccode\u003e$hls_uri\u003c/code\u003e in the example):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp {\n    ...\n\n    map $uri $hls_uri {\n        ~^(?\u0026lt;base_uri\u0026gt;.*).m3u8$ $base_uri;\n        ~^(?\u0026lt;base_uri\u0026gt;.*).ts$   $base_uri;\n        default                 $uri;\n    }\n\n    server {\n        ...\n\n        location /hls/ {\n            hls;\n            hls_forward_args on;\n\n            alias /var/videos/;\n\n            secure_link $arg_md5,$arg_expires;\n            secure_link_md5 \u0026quot;$secure_link_expires$hls_uri$remote_addr secret\u0026quot;;\n\n            if ($secure_link = \u0026quot;\u0026quot;) {\n                return 403;\n            }\n\n            if ($secure_link = \u0026quot;0\u0026quot;) {\n                return 410;\n            }\n        }\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "hls_fragment",
          "default": "5s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines the default fragment length for playlist URIs requested without the\n“`len`” argument.",
          "description_html": "\u003cp\u003eDefines the default fragment length for playlist URIs requested without the\n“\u003ccode\u003elen\u003c/code\u003e” argument.\u003c/p\u003e\n"
        },
        {
          "name": "hls_mp4_buffer_size",
          "default": "512k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the initial *`size`* of the buffer used for\nprocessing MP4 and MOV files.",
          "description_html": "\u003cp\u003eSets the initial \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for\nprocessing MP4 and MOV files.\u003c/p\u003e\n"
        },
        {
          "name": "hls_mp4_max_buffer_size",
          "default": "10m",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "During metadata processing, a larger buffer may become necessary.\nIts size cannot exceed the specified *`size`*,\nor else nginx will return the server error\n500 (Internal Server Error),\nand log the following message:\n```\n\"/some/movie/file.mp4\" mp4 moov atom is too large:\n12583268, you may want to increase hls_mp4_max_buffer_size\n```",
          "description_html": "\u003cp\u003eDuring metadata processing, a larger buffer may become necessary.\nIts size cannot exceed the specified \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e,\nor else nginx will return the server error\n500 (Internal Server Error),\nand log the following message:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026quot;/some/movie/file.mp4\u0026quot; mp4 moov atom is too large:\n12583268, you may want to increase hls_mp4_max_buffer_size\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_image_filter_module.html",
      "name": "ngx_http_image_filter_module",
      "directives": [
        {
          "name": "image_filter",
          "default": "off",
          "contexts": [
            "location"
          ],
          "syntax": [
            "`off`",
            "`test`",
            "`size`",
            "`rotate` `90` | `180` | `270`",
            "`resize` *`width`* *`height`*",
            "`crop` *`width`* *`height`*"
          ],
          "isBlock": false,
          "description_md": "Sets the type of transformation to perform on images:\n- `off`\n\n    turns off module processing in a surrounding location.\n- `test`\n\n    ensures that responses are images in either JPEG, GIF, PNG, or WebP format.\n    Otherwise, the\n    415 (Unsupported Media Type)\n    error is returned.\n- `size`\n\n    outputs information about images in a JSON format, e.g.:\n    ```\n    { \"img\" : { \"width\": 100, \"height\": 100, \"type\": \"gif\" } }\n    ```\n    In case of an error, the output is as follows:\n    ```\n    {}\n    ```\n- `rotate`\n`90`|`180`|`270`\n\n    rotates images counter-clockwise by the specified number of degrees.\n    Parameter value can contain variables.\n    This mode can be used either alone or along with the\n    `resize` and `crop` transformations.\n- `resize`\n*`width`*\n*`height`*\n\n    proportionally reduces an image to the specified sizes.\n    To reduce by only one dimension, another dimension can be specified as\n    “`-`”.\n    In case of an error, the server will return code\n    415 (Unsupported Media Type).\n    Parameter values can contain variables.\n    When used along with the `rotate` parameter,\n    the rotation happens after reduction.\n- `crop`\n*`width`*\n*`height`*\n\n    proportionally reduces an image to the larger side size\n    and crops extraneous edges by another side.\n    To reduce by only one dimension, another dimension can be specified as\n    “`-`”.\n    In case of an error, the server will return code\n    415 (Unsupported Media Type).\n    Parameter values can contain variables.\n    When used along with the `rotate` parameter,\n    the rotation happens before reduction.",
          "description_html": "\u003cp\u003eSets the type of transformation to perform on images:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eturns off module processing in a surrounding location.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etest\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eensures that responses are images in either JPEG, GIF, PNG, or WebP format.\nOtherwise, the\n415 (Unsupported Media Type)\nerror is returned.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eoutputs information about images in a JSON format, e.g.:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e{ \u0026quot;img\u0026quot; : { \u0026quot;width\u0026quot;: 100, \u0026quot;height\u0026quot;: 100, \u0026quot;type\u0026quot;: \u0026quot;gif\u0026quot; } }\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn case of an error, the output is as follows:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e{}\n\u003c/code\u003e\u003c/pre\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003erotate\u003c/code\u003e\n\u003ccode\u003e90\u003c/code\u003e|\u003ccode\u003e180\u003c/code\u003e|\u003ccode\u003e270\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003erotates images counter-clockwise by the specified number of degrees.\nParameter value can contain variables.\nThis mode can be used either alone or along with the\n\u003ccode\u003eresize\u003c/code\u003e and \u003ccode\u003ecrop\u003c/code\u003e transformations.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eresize\u003c/code\u003e\n\u003cem\u003e\u003ccode\u003ewidth\u003c/code\u003e\u003c/em\u003e\n\u003cem\u003e\u003ccode\u003eheight\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eproportionally reduces an image to the specified sizes.\nTo reduce by only one dimension, another dimension can be specified as\n“\u003ccode\u003e-\u003c/code\u003e”.\nIn case of an error, the server will return code\n415 (Unsupported Media Type).\nParameter values can contain variables.\nWhen used along with the \u003ccode\u003erotate\u003c/code\u003e parameter,\nthe rotation happens after reduction.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ecrop\u003c/code\u003e\n\u003cem\u003e\u003ccode\u003ewidth\u003c/code\u003e\u003c/em\u003e\n\u003cem\u003e\u003ccode\u003eheight\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eproportionally reduces an image to the larger side size\nand crops extraneous edges by another side.\nTo reduce by only one dimension, another dimension can be specified as\n“\u003ccode\u003e-\u003c/code\u003e”.\nIn case of an error, the server will return code\n415 (Unsupported Media Type).\nParameter values can contain variables.\nWhen used along with the \u003ccode\u003erotate\u003c/code\u003e parameter,\nthe rotation happens before reduction.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "image_filter_buffer",
          "default": "1M",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum size of the buffer used for reading images.\nWhen the size is exceeded the server returns error\n415 (Unsupported Media Type).",
          "description_html": "\u003cp\u003eSets the maximum size of the buffer used for reading images.\nWhen the size is exceeded the server returns error\n415 (Unsupported Media Type).\u003c/p\u003e\n"
        },
        {
          "name": "image_filter_interlace",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "If enabled, final images will be interlaced.\nFor JPEG, final images will be in “progressive JPEG” format.",
          "description_html": "\u003cp\u003eIf enabled, final images will be interlaced.\nFor JPEG, final images will be in “progressive JPEG” format.\u003c/p\u003e\n"
        },
        {
          "name": "image_filter_jpeg_quality",
          "default": "75",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`quality`*"
          ],
          "isBlock": false,
          "description_md": "Sets the desired *`quality`* of the transformed JPEG images.\nAcceptable values are in the range from 1 to 100.\nLesser values usually imply both lower image quality and less data to transfer.\nThe maximum recommended value is 95.\nParameter value can contain variables.",
          "description_html": "\u003cp\u003eSets the desired \u003cem\u003e\u003ccode\u003equality\u003c/code\u003e\u003c/em\u003e of the transformed JPEG images.\nAcceptable values are in the range from 1 to 100.\nLesser values usually imply both lower image quality and less data to transfer.\nThe maximum recommended value is 95.\nParameter value can contain variables.\u003c/p\u003e\n"
        },
        {
          "name": "image_filter_sharpen",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`percent`*"
          ],
          "isBlock": false,
          "description_md": "Increases sharpness of the final image.\nThe sharpness percentage can exceed 100.\nThe zero value disables sharpening.\nParameter value can contain variables.",
          "description_html": "\u003cp\u003eIncreases sharpness of the final image.\nThe sharpness percentage can exceed 100.\nThe zero value disables sharpening.\nParameter value can contain variables.\u003c/p\u003e\n"
        },
        {
          "name": "image_filter_transparency",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on`|`off`"
          ],
          "isBlock": false,
          "description_md": "Defines whether transparency should be preserved when transforming\nGIF images or PNG images with colors specified by a palette.\nThe loss of transparency results in images of a better quality.\nThe alpha channel transparency in PNG is always preserved.",
          "description_html": "\u003cp\u003eDefines whether transparency should be preserved when transforming\nGIF images or PNG images with colors specified by a palette.\nThe loss of transparency results in images of a better quality.\nThe alpha channel transparency in PNG is always preserved.\u003c/p\u003e\n"
        },
        {
          "name": "image_filter_webp_quality",
          "default": "80",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`quality`*"
          ],
          "isBlock": false,
          "description_md": "Sets the desired *`quality`* of the transformed WebP images.\nAcceptable values are in the range from 1 to 100.\nLesser values usually imply both lower image quality and less data to transfer.\nParameter value can contain variables.",
          "description_html": "\u003cp\u003eSets the desired \u003cem\u003e\u003ccode\u003equality\u003c/code\u003e\u003c/em\u003e of the transformed WebP images.\nAcceptable values are in the range from 1 to 100.\nLesser values usually imply both lower image quality and less data to transfer.\nParameter value can contain variables.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_index_module.html",
      "name": "ngx_http_index_module",
      "directives": [
        {
          "name": "index",
          "default": "index.html",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`* ..."
          ],
          "isBlock": false,
          "description_md": "Defines files that will be used as an index.\nThe *`file`* name can contain variables.\nFiles are checked in the specified order.\nThe last element of the list can be a file with an absolute path.\nExample:\n```\nindex index.$geo.html index.0.html /index.html;\n```\n\nIt should be noted that using an index file causes an internal redirect,\nand the request can be processed in a different location.\nFor example, with the following configuration:\n```\nlocation = / {\n    index index.html;\n}\n\nlocation / {\n    ...\n}\n```\na “`/`” request will actually be processed in the\nsecond location as “`/index.html`”.",
          "description_html": "\u003cp\u003eDefines files that will be used as an index.\nThe \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name can contain variables.\nFiles are checked in the specified order.\nThe last element of the list can be a file with an absolute path.\nExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eindex index.$geo.html index.0.html /index.html;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIt should be noted that using an index file causes an internal redirect,\nand the request can be processed in a different location.\nFor example, with the following configuration:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation = / {\n    index index.html;\n}\n\nlocation / {\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ea “\u003ccode\u003e/\u003c/code\u003e” request will actually be processed in the\nsecond location as “\u003ccode\u003e/index.html\u003c/code\u003e”.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_internal_redirect_module.html",
      "name": "ngx_http_internal_redirect_module",
      "directives": [
        {
          "name": "internal_redirect",
          "default": "",
          "contexts": [
            "server",
            "location"
          ],
          "syntax": [
            "*`uri`*"
          ],
          "isBlock": false,
          "description_md": "Sets the URI for internal redirection of the request.\nIt is also possible to use a\n[named location](https://nginx.org/en/docs/http/ngx_http_core_module.html#location_named)\ninstead of the URI.\nThe *`uri`* value can contain variables.\nIf the *`uri`* value is empty,\nthen the redirect will not be made.",
          "description_html": "\u003cp\u003eSets the URI for internal redirection of the request.\nIt is also possible to use a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#location_named\" target=\"_blank\"\u003enamed location\u003c/a\u003e\ninstead of the URI.\nThe \u003cem\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/em\u003e value can contain variables.\nIf the \u003cem\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/em\u003e value is empty,\nthen the redirect will not be made.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_js_module.html",
      "name": "ngx_http_js_module",
      "directives": [
        {
          "name": "js_body_filter",
          "default": "",
          "contexts": [
            "location",
            "if in location",
            "limit_except"
          ],
          "syntax": [
            "*`function`* | *`module.function`* [*`buffer_type`*=*`string`* | *`buffer`*]"
          ],
          "isBlock": false,
          "description_md": "Sets an njs function as a response body filter.\nThe filter function is called for each data chunk of a response body\nwith the following arguments:\n\n- `r`\n\n    the [HTTP request](https://nginx.org/en/docs/njs/reference.html#http) object\n- `data`\n\n    the incoming data chunk,\n    may be a string or Buffer\n    depending on the `buffer_type` value,\n    by default is a string.\n- `flags`\n\n    an object with the following properties:\n    - `last`\n    \n        a boolean value, true if data is a last buffer.\n\nThe filter function can pass its own modified version\nof the input data chunk to the next body filter by calling\n[`r.sendBuffer()`](https://nginx.org/en/docs/njs/reference.html#r_sendbuffer).\nFor example, to transform all the lowercase letters in the response body:\n```\nfunction filter(r, data, flags) {\n    r.sendBuffer(data.toLowerCase(), flags);\n}\n```\nTo stop filtering (following data chunks will be passed to client\nwithout calling `js_body_filter`),\n[`r.done()`](https://nginx.org/en/docs/njs/reference.html#r_done)\ncan be used.\n\nIf the filter function changes the length of the response body, then\nit is required to clear out the \"Content-Length\" response header\n(if any) in\n[`js_header_filter`](https://nginx.org/en/docs/http/ngx_http_js_module.html#js_header_filter)\nto enforce chunked transfer encoding.\n\n\u003e As the `js_body_filter` handler\n\u003e returns its result immediately, it supports\n\u003e only synchronous operations.\n\u003e Thus, asynchronous operations such as\n\u003e [r.subrequest()](https://nginx.org/en/docs/njs/reference.html#r_subrequest)\n\u003e or\n\u003e [setTimeout()](https://nginx.org/en/docs/njs/reference.html#settimeout)\n\u003e are not supported.\n\n\u003e The directive can be specified inside the\n\u003e [if](https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if) block\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eSets an njs function as a response body filter.\nThe filter function is called for each data chunk of a response body\nwith the following arguments:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003er\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#http\" target=\"_blank\"\u003eHTTP request\u003c/a\u003e object\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edata\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe incoming data chunk,\nmay be a string or Buffer\ndepending on the \u003ccode\u003ebuffer_type\u003c/code\u003e value,\nby default is a string.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eflags\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ean object with the following properties:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003elast\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea boolean value, true if data is a last buffer.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe filter function can pass its own modified version\nof the input data chunk to the next body filter by calling\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#r_sendbuffer\" target=\"_blank\"\u003e\u003ccode\u003er.sendBuffer()\u003c/code\u003e\u003c/a\u003e.\nFor example, to transform all the lowercase letters in the response body:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003efunction filter(r, data, flags) {\n    r.sendBuffer(data.toLowerCase(), flags);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo stop filtering (following data chunks will be passed to client\nwithout calling \u003ccode\u003ejs_body_filter\u003c/code\u003e),\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#r_done\" target=\"_blank\"\u003e\u003ccode\u003er.done()\u003c/code\u003e\u003c/a\u003e\ncan be used.\u003c/p\u003e\n\n\u003cp\u003eIf the filter function changes the length of the response body, then\nit is required to clear out the \u0026ldquo;Content-Length\u0026rdquo; response header\n(if any) in\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_js_module.html#js_header_filter\" target=\"_blank\"\u003e\u003ccode\u003ejs_header_filter\u003c/code\u003e\u003c/a\u003e\nto enforce chunked transfer encoding.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs the \u003ccode\u003ejs_body_filter\u003c/code\u003e handler\nreturns its result immediately, it supports\nonly synchronous operations.\nThus, asynchronous operations such as\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#r_subrequest\" target=\"_blank\"\u003er.subrequest()\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\" target=\"_blank\"\u003esetTimeout()\u003c/a\u003e\nare not supported.\u003c/p\u003e\n\n\u003cp\u003eThe directive can be specified inside the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if\" target=\"_blank\"\u003eif\u003c/a\u003e block\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_content",
          "default": "",
          "contexts": [
            "location",
            "if in location",
            "limit_except"
          ],
          "syntax": [
            "*`function`* | *`module.function`*"
          ],
          "isBlock": false,
          "description_md": "Sets an njs function as a location content handler.\nSince [0.4.0](https://nginx.org/en/docs/njs/changes.html#njs0.4.0),\na module function can be referenced.\n\n\u003e The directive can be specified inside the\n\u003e [if](https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if) block\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eSets an njs function as a location content handler.\nSince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\" target=\"_blank\"\u003e0.4.0\u003c/a\u003e,\na module function can be referenced.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive can be specified inside the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if\" target=\"_blank\"\u003eif\u003c/a\u003e block\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_fetch_buffer_size",
          "default": "16k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading and writing\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading and writing\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_ciphers",
          "default": "HIGH:!aNULL:!MD5",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`ciphers`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the enabled ciphers for HTTPS requests\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).\nThe ciphers are specified in the format understood by the\nOpenSSL library.\n\nThe full list can be viewed using the\n“`openssl ciphers`” command.",
          "description_html": "\u003cp\u003eSpecifies the enabled ciphers for HTTPS requests\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\nThe ciphers are specified in the format understood by the\nOpenSSL library.\u003c/p\u003e\n\n\u003cp\u003eThe full list can be viewed using the\n“\u003ccode\u003eopenssl ciphers\u003c/code\u003e” command.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_max_response_buffer_size",
          "default": "1m",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`size`* of the response received\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the response received\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_protocols",
          "default": "TLSv1 TLSv1.1 TLSv1.2",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "[`TLSv1`] [`TLSv1.1`] [`TLSv1.2`] [`TLSv1.3`]"
          ],
          "isBlock": false,
          "description_md": "Enables the specified protocols for HTTPS requests\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eEnables the specified protocols for HTTPS requests\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for reading and writing\nfor [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).\nThe timeout is set only between two successive read/write operations,\nnot for the whole response.\nIf no data is transmitted within this time, the connection is closed.",
          "description_html": "\u003cp\u003eDefines a timeout for reading and writing\nfor \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\nThe timeout is set only between two successive read/write operations,\nnot for the whole response.\nIf no data is transmitted within this time, the connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_trusted_certificate",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to\n[verify](https://nginx.org/en/docs/njs/reference.html#fetch_verify)\nthe HTTPS certificate\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#fetch_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe HTTPS certificate\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_verify",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables verification of the HTTPS server certificate\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eEnables or disables verification of the HTTPS server certificate\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_verify_depth",
          "default": "100",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the verification depth in the HTTPS server certificates chain\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eSets the verification depth in the HTTPS server certificates chain\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_header_filter",
          "default": "",
          "contexts": [
            "location",
            "if in location",
            "limit_except"
          ],
          "syntax": [
            "*`function`* | *`module.function`*"
          ],
          "isBlock": false,
          "description_md": "Sets an njs function as a response header filter.\nThe directive allows changing arbitrary header fields of a response header.\n\n\u003e As the `js_header_filter` handler\n\u003e returns its result immediately, it supports\n\u003e only synchronous operations.\n\u003e Thus, asynchronous operations such as\n\u003e [r.subrequest()](https://nginx.org/en/docs/njs/reference.html#r_subrequest)\n\u003e or\n\u003e [setTimeout()](https://nginx.org/en/docs/njs/reference.html#settimeout)\n\u003e are not supported.\n\n\u003e The directive can be specified inside the\n\u003e [if](https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if) block\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eSets an njs function as a response header filter.\nThe directive allows changing arbitrary header fields of a response header.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs the \u003ccode\u003ejs_header_filter\u003c/code\u003e handler\nreturns its result immediately, it supports\nonly synchronous operations.\nThus, asynchronous operations such as\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#r_subrequest\" target=\"_blank\"\u003er.subrequest()\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\" target=\"_blank\"\u003esetTimeout()\u003c/a\u003e\nare not supported.\u003c/p\u003e\n\n\u003cp\u003eThe directive can be specified inside the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if\" target=\"_blank\"\u003eif\u003c/a\u003e block\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_import",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`module.js`* | *`export_name from module.js`*"
          ],
          "isBlock": false,
          "description_md": "Imports a module that implements location and variable handlers in njs.\nThe `export_name` is used as a namespace\nto access module functions.\nIf the `export_name` is not specified,\nthe module name will be used as a namespace.\n```\njs_import http.js;\n```\nHere, the module name `http` is used as a namespace\nwhile accessing exports.\nIf the imported module exports `foo()`,\n`http.foo` is used to refer to it.\n\nSeveral `js_import` directives can be specified.\n\n\u003e The directive can be specified on the\n\u003e `server` and `location` level\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eImports a module that implements location and variable handlers in njs.\nThe \u003ccode\u003eexport_name\u003c/code\u003e is used as a namespace\nto access module functions.\nIf the \u003ccode\u003eexport_name\u003c/code\u003e is not specified,\nthe module name will be used as a namespace.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ejs_import http.js;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere, the module name \u003ccode\u003ehttp\u003c/code\u003e is used as a namespace\nwhile accessing exports.\nIf the imported module exports \u003ccode\u003efoo()\u003c/code\u003e,\n\u003ccode\u003ehttp.foo\u003c/code\u003e is used to refer to it.\u003c/p\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003ejs_import\u003c/code\u003e directives can be specified.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive can be specified on the\n\u003ccode\u003eserver\u003c/code\u003e and \u003ccode\u003elocation\u003c/code\u003e level\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_include",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a file that implements location and variable handlers in njs:\n```\nnginx.conf:\njs_include http.js;\nlocation   /version {\n    js_content version;\n}\n\nhttp.js:\nfunction version(r) {\n    r.return(200, njs.version);\n}\n```\n\nThe directive was made obsolete in version\n[0.4.0](https://nginx.org/en/docs/njs/changes.html#njs0.4.0)\nand was removed in version\n[0.7.1](https://nginx.org/en/docs/njs/changes.html#njs0.7.1).\nThe [`js_import`](https://nginx.org/en/docs/http/ngx_http_js_module.html#js_import) directive should be used instead.",
          "description_html": "\u003cp\u003eSpecifies a file that implements location and variable handlers in njs:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003enginx.conf:\njs_include http.js;\nlocation   /version {\n    js_content version;\n}\n\nhttp.js:\nfunction version(r) {\n    r.return(200, njs.version);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe directive was made obsolete in version\n\u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\" target=\"_blank\"\u003e0.4.0\u003c/a\u003e\nand was removed in version\n\u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.1\" target=\"_blank\"\u003e0.7.1\u003c/a\u003e.\nThe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_js_module.html#js_import\" target=\"_blank\"\u003e\u003ccode\u003ejs_import\u003c/code\u003e\u003c/a\u003e directive should be used instead.\u003c/p\u003e\n"
        },
        {
          "name": "js_path",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`path`*"
          ],
          "isBlock": false,
          "description_md": "Sets an additional path for njs modules.\n\n\u003e The directive can be specified on the\n\u003e `server` and `location` level\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eSets an additional path for njs modules.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive can be specified on the\n\u003ccode\u003eserver\u003c/code\u003e and \u003ccode\u003elocation\u003c/code\u003e level\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_preload_object",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name.json`* | *`name`* from *`file.json`*"
          ],
          "isBlock": false,
          "description_md": "Preloads an immutable object at configure time.\nThe `name` is used a name of the global variable\nthough which the object is available in njs code.\nIf the `name` is not specified,\nthe file name will be used instead.\n```\njs_preload_object map.json;\n```\nHere, the `map` is used as a name\nwhile accessing the preloaded object.\n\nSeveral `js_preload_object` directives can be specified.",
          "description_html": "\u003cp\u003ePreloads an immutable object at configure time.\nThe \u003ccode\u003ename\u003c/code\u003e is used a name of the global variable\nthough which the object is available in njs code.\nIf the \u003ccode\u003ename\u003c/code\u003e is not specified,\nthe file name will be used instead.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ejs_preload_object map.json;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere, the \u003ccode\u003emap\u003c/code\u003e is used as a name\nwhile accessing the preloaded object.\u003c/p\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003ejs_preload_object\u003c/code\u003e directives can be specified.\u003c/p\u003e\n"
        },
        {
          "name": "js_set",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`$variable`* *`function`* | *`module.function`*"
          ],
          "isBlock": false,
          "description_md": "Sets an njs `function`\nfor the specified `variable`.\nSince [0.4.0](https://nginx.org/en/docs/njs/changes.html#njs0.4.0),\na module function can be referenced.\n\nThe function is called when\nthe variable is referenced for the first time for a given request.\nThe exact moment depends on a\n[phase](https://nginx.org/en/docs/dev/development_guide.html#http_phases)\nat which the variable is referenced.\nThis can be used to perform some logic\nnot related to variable evaluation.\nFor example, if the variable is referenced only in the\n[`log_format`](https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format) directive,\nits handler will not be executed until the log phase.\nThis handler can be used to do some cleanup\nright before the request is freed.\n\n\u003e As the `js_set` handler\n\u003e returns its result immediately, it supports\n\u003e only synchronous operations.\n\u003e Thus, asynchronous operations such as\n\u003e [r.subrequest()](https://nginx.org/en/docs/njs/reference.html#r_subrequest)\n\u003e or\n\u003e [setTimeout()](https://nginx.org/en/docs/njs/reference.html#settimeout)\n\u003e are not supported.\n\n\u003e The directive can be specified on the\n\u003e `server` and `location` level\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eSets an njs \u003ccode\u003efunction\u003c/code\u003e\nfor the specified \u003ccode\u003evariable\u003c/code\u003e.\nSince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\" target=\"_blank\"\u003e0.4.0\u003c/a\u003e,\na module function can be referenced.\u003c/p\u003e\n\n\u003cp\u003eThe function is called when\nthe variable is referenced for the first time for a given request.\nThe exact moment depends on a\n\u003ca href=\"https://nginx.org/en/docs/dev/development_guide.html#http_phases\" target=\"_blank\"\u003ephase\u003c/a\u003e\nat which the variable is referenced.\nThis can be used to perform some logic\nnot related to variable evaluation.\nFor example, if the variable is referenced only in the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format\" target=\"_blank\"\u003e\u003ccode\u003elog_format\u003c/code\u003e\u003c/a\u003e directive,\nits handler will not be executed until the log phase.\nThis handler can be used to do some cleanup\nright before the request is freed.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs the \u003ccode\u003ejs_set\u003c/code\u003e handler\nreturns its result immediately, it supports\nonly synchronous operations.\nThus, asynchronous operations such as\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#r_subrequest\" target=\"_blank\"\u003er.subrequest()\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\" target=\"_blank\"\u003esetTimeout()\u003c/a\u003e\nare not supported.\u003c/p\u003e\n\n\u003cp\u003eThe directive can be specified on the\n\u003ccode\u003eserver\u003c/code\u003e and \u003ccode\u003elocation\u003c/code\u003e level\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_shared_dict_zone",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "`zone`=*`name`*:*`size`* [`timeout`=*`time`*] [`type`=`string`|`number`] [`evict`]"
          ],
          "isBlock": false,
          "description_md": "Sets the *`name`* and *`size`* of the shared memory zone\nthat keeps the key-value dictionary\nshared between worker processes.\n\nBy default the shared dictionary uses a string as a key and a value.\nThe optional `type` parameter\nallows redefining the value type to number.\n\nThe optional `timeout` parameter sets\nthe time after which all shared dictionary entries are removed from the zone.\n\nThe optional `evict` parameter removes the oldest\nkey-value pair when the zone storage is exhausted.\n\nExamples:\n```\nexample.conf:\n    # Creates a 1Mb dictionary with string values,\n    # removes key-value pairs after 60 seconds of inactivity:\n    js_shared_dict_zone zone=foo:1M timeout=60s;\n\n    # Creates a 512Kb dictionary with string values,\n    # forcibly removes oldest key-value pairs when the zone is exhausted:\n    js_shared_dict_zone zone=bar:512K timeout=30s evict;\n\n    # Creates a 32Kb permanent dictionary with number values:\n    js_shared_dict_zone zone=num:32k type=number;\n\nexample.js:\n    function get(r) {\n        r.return(200, ngx.shared.foo.get(r.args.key));\n    }\n\n    function set(r) {\n        r.return(200, ngx.shared.foo.set(r.args.key, r.args.value));\n    }\n\n    function delete(r) {\n        r.return(200, ngx.shared.bar.delete(r.args.key));\n    }\n\n    function increment(r) {\n        r.return(200, ngx.shared.num.incr(r.args.key, 2));\n    }\n```",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the shared memory zone\nthat keeps the key-value dictionary\nshared between worker processes.\u003c/p\u003e\n\n\u003cp\u003eBy default the shared dictionary uses a string as a key and a value.\nThe optional \u003ccode\u003etype\u003c/code\u003e parameter\nallows redefining the value type to number.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003etimeout\u003c/code\u003e parameter sets\nthe time after which all shared dictionary entries are removed from the zone.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003eevict\u003c/code\u003e parameter removes the oldest\nkey-value pair when the zone storage is exhausted.\u003c/p\u003e\n\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eexample.conf:\n    # Creates a 1Mb dictionary with string values,\n    # removes key-value pairs after 60 seconds of inactivity:\n    js_shared_dict_zone zone=foo:1M timeout=60s;\n\n    # Creates a 512Kb dictionary with string values,\n    # forcibly removes oldest key-value pairs when the zone is exhausted:\n    js_shared_dict_zone zone=bar:512K timeout=30s evict;\n\n    # Creates a 32Kb permanent dictionary with number values:\n    js_shared_dict_zone zone=num:32k type=number;\n\nexample.js:\n    function get(r) {\n        r.return(200, ngx.shared.foo.get(r.args.key));\n    }\n\n    function set(r) {\n        r.return(200, ngx.shared.foo.set(r.args.key, r.args.value));\n    }\n\n    function delete(r) {\n        r.return(200, ngx.shared.bar.delete(r.args.key));\n    }\n\n    function increment(r) {\n        r.return(200, ngx.shared.num.incr(r.args.key, 2));\n    }\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "js_var",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`$variable`* [*`value`*]"
          ],
          "isBlock": false,
          "description_md": "Declares\na [writable](https://nginx.org/en/docs/njs/reference.html#r_variables)\nvariable.\nThe value can contain text, variables, and their combination.\nThe variable is not overwritten after a redirect\nunlike variables created with the\n[`set`](https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#set) directive.\n\n\u003e The directive can be specified on the\n\u003e `server` and `location` level\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eDeclares\na \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#r_variables\" target=\"_blank\"\u003ewritable\u003c/a\u003e\nvariable.\nThe value can contain text, variables, and their combination.\nThe variable is not overwritten after a redirect\nunlike variables created with the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#set\" target=\"_blank\"\u003e\u003ccode\u003eset\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive can be specified on the\n\u003ccode\u003eserver\u003c/code\u003e and \u003ccode\u003elocation\u003c/code\u003e level\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_keyval_module.html",
      "name": "ngx_http_keyval_module",
      "directives": [
        {
          "name": "keyval",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`key`* *`$variable`* `zone`=*`name`*"
          ],
          "isBlock": false,
          "description_md": "Creates a new *`$variable`* whose value\nis looked up by the *`key`* in the key-value database.\nMatching rules are defined by the\n[`type`](https://nginx.org/en/docs/http/ngx_http_keyval_module.html#keyval_type) parameter of the\n[`keyval_zone`](https://nginx.org/en/docs/http/ngx_http_keyval_module.html#keyval_zone) directive.\nThe database is stored in a shared memory zone\nspecified by the `zone` parameter.",
          "description_html": "\u003cp\u003eCreates a new \u003cem\u003e\u003ccode\u003e$variable\u003c/code\u003e\u003c/em\u003e whose value\nis looked up by the \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e in the key-value database.\nMatching rules are defined by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_keyval_module.html#keyval_type\" target=\"_blank\"\u003e\u003ccode\u003etype\u003c/code\u003e\u003c/a\u003e parameter of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_keyval_module.html#keyval_zone\" target=\"_blank\"\u003e\u003ccode\u003ekeyval_zone\u003c/code\u003e\u003c/a\u003e directive.\nThe database is stored in a shared memory zone\nspecified by the \u003ccode\u003ezone\u003c/code\u003e parameter.\u003c/p\u003e\n"
        },
        {
          "name": "keyval_zone",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "`zone`=*`name`*:*`size`* [`state`=*`file`*] [`timeout`=*`time`*] [`type`=`string`|`ip`|`prefix`] [`sync`]"
          ],
          "isBlock": false,
          "description_md": "Sets the *`name`* and *`size`* of the shared memory zone\nthat keeps the key-value database.\nKey-value pairs are managed by the\n[API](https://nginx.org/en/docs/http/ngx_http_api_module.html#http_keyvals_).\n\nThe optional `state` parameter specifies a *`file`*\nthat keeps the current state of the key-value database in the JSON format\nand makes it persistent across nginx restarts.\nChanging the file content directly should be avoided.\n\nExamples:\n```\nkeyval_zone zone=one:32k state=/var/lib/nginx/state/one.keyval; # path for Linux\nkeyval_zone zone=one:32k state=/var/db/nginx/state/one.keyval;  # path for FreeBSD\n```\n\nThe optional `timeout` parameter (1.15.0) sets\nthe time after which key-value pairs are removed from the zone.\n\nThe optional `type` parameter (1.17.1) activates\nan extra index optimized for matching the key of a certain type\nand defines matching rules when evaluating\na [keyval](https://nginx.org/en/docs/http/ngx_http_keyval_module.html#keyval) `$variable`.\n\u003e The index is stored in the same shared memory zone\n\u003e and thus requires additional storage.\n\n\n- `type=string`\n\n    default, no index is enabled;\n    variable lookup is performed using exact match\n    of the record key and a search key\n- `type=ip`\n\n    the search key is the textual representation of IPv4 or IPv6 address\n    or CIDR range;\n    to match a record key, the search key must belong to a subnet\n    specified by a record key or exactly match an IP address\n- `type=prefix`\n\n    variable lookup is performed using prefix match\n    of a record key and a search key (1.17.5);\n    to match a record key, the record key must be a prefix of the search key\n\nThe optional `sync` parameter (1.15.0) enables\n[synchronization](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync)\nof the shared memory zone.\nThe synchronization requires the\n`timeout` parameter to be set.\n\u003e If the synchronization is enabled, removal of key-value pairs (no matter\n\u003e [one](https://nginx.org/en/docs/http/ngx_http_api_module.html#patchHttpKeyvalZoneKeyValue)\n\u003e or\n\u003e [all](https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteHttpKeyvalZoneData))\n\u003e will be performed only on a target cluster node.\n\u003e The same key-value pairs on other cluster nodes\n\u003e will be removed upon `timeout`.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the shared memory zone\nthat keeps the key-value database.\nKey-value pairs are managed by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_keyvals_\" target=\"_blank\"\u003eAPI\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003estate\u003c/code\u003e parameter specifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e\nthat keeps the current state of the key-value database in the JSON format\nand makes it persistent across nginx restarts.\nChanging the file content directly should be avoided.\u003c/p\u003e\n\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ekeyval_zone zone=one:32k state=/var/lib/nginx/state/one.keyval; # path for Linux\nkeyval_zone zone=one:32k state=/var/db/nginx/state/one.keyval;  # path for FreeBSD\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003etimeout\u003c/code\u003e parameter (1.15.0) sets\nthe time after which key-value pairs are removed from the zone.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003etype\u003c/code\u003e parameter (1.17.1) activates\nan extra index optimized for matching the key of a certain type\nand defines matching rules when evaluating\na \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_keyval_module.html#keyval\" target=\"_blank\"\u003ekeyval\u003c/a\u003e \u003ccode\u003e$variable\u003c/code\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe index is stored in the same shared memory zone\nand thus requires additional storage.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etype=string\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edefault, no index is enabled;\nvariable lookup is performed using exact match\nof the record key and a search key\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etype=ip\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe search key is the textual representation of IPv4 or IPv6 address\nor CIDR range;\nto match a record key, the search key must belong to a subnet\nspecified by a record key or exactly match an IP address\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etype=prefix\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003evariable lookup is performed using prefix match\nof a record key and a search key (1.17.5);\nto match a record key, the record key must be a prefix of the search key\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003esync\u003c/code\u003e parameter (1.15.0) enables\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync\" target=\"_blank\"\u003esynchronization\u003c/a\u003e\nof the shared memory zone.\nThe synchronization requires the\n\u003ccode\u003etimeout\u003c/code\u003e parameter to be set.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf the synchronization is enabled, removal of key-value pairs (no matter\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#patchHttpKeyvalZoneKeyValue\" target=\"_blank\"\u003eone\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteHttpKeyvalZoneData\" target=\"_blank\"\u003eall\u003c/a\u003e)\nwill be performed only on a target cluster node.\nThe same key-value pairs on other cluster nodes\nwill be removed upon \u003ccode\u003etimeout\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_limit_conn_module.html",
      "name": "ngx_http_limit_conn_module",
      "directives": [
        {
          "name": "limit_conn",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`zone`* *`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the shared memory zone\nand the maximum allowed number of connections for a given key value.\nWhen this limit is exceeded, the server will return the\n[error](https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_status)\nin reply to a request.\nFor example, the directives\n```\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n\nserver {\n    location /download/ {\n        limit_conn addr 1;\n    }\n```\nallow only one connection per an IP address at a time.\n\u003e In HTTP/2 and HTTP/3,\n\u003e each concurrent request is considered a separate connection.\n\nThere could be several `limit_conn` directives.\nFor example, the following configuration will limit the number\nof connections to the server per a client IP and, at the same time,\nthe total number of connections to the virtual server:\n```\nlimit_conn_zone $binary_remote_addr zone=perip:10m;\nlimit_conn_zone $server_name zone=perserver:10m;\n\nserver {\n    ...\n    limit_conn perip 10;\n    limit_conn perserver 100;\n}\n```\n\nThese directives are inherited from the previous configuration level\nif and only if there are no `limit_conn` directives\ndefined on the current level.",
          "description_html": "\u003cp\u003eSets the shared memory zone\nand the maximum allowed number of connections for a given key value.\nWhen this limit is exceeded, the server will return the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_status\" target=\"_blank\"\u003eerror\u003c/a\u003e\nin reply to a request.\nFor example, the directives\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elimit_conn_zone $binary_remote_addr zone=addr:10m;\n\nserver {\n    location /download/ {\n        limit_conn addr 1;\n    }\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eallow only one connection per an IP address at a time.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn HTTP/2 and HTTP/3,\neach concurrent request is considered a separate connection.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThere could be several \u003ccode\u003elimit_conn\u003c/code\u003e directives.\nFor example, the following configuration will limit the number\nof connections to the server per a client IP and, at the same time,\nthe total number of connections to the virtual server:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elimit_conn_zone $binary_remote_addr zone=perip:10m;\nlimit_conn_zone $server_name zone=perserver:10m;\n\nserver {\n    ...\n    limit_conn perip 10;\n    limit_conn perserver 100;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003elimit_conn\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n"
        },
        {
          "name": "limit_conn_dry_run",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the dry run mode.\nIn this mode, the number of connections is not limited, however,\nin the shared memory zone, the number of excessive connections is accounted\nas usual.",
          "description_html": "\u003cp\u003eEnables the dry run mode.\nIn this mode, the number of connections is not limited, however,\nin the shared memory zone, the number of excessive connections is accounted\nas usual.\u003c/p\u003e\n"
        },
        {
          "name": "limit_conn_log_level",
          "default": "error",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`info` | `notice` | `warn` | `error`"
          ],
          "isBlock": false,
          "description_md": "Sets the desired logging level for cases when the server\nlimits the number of connections.",
          "description_html": "\u003cp\u003eSets the desired logging level for cases when the server\nlimits the number of connections.\u003c/p\u003e\n"
        },
        {
          "name": "limit_conn_status",
          "default": "503",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`code`*"
          ],
          "isBlock": false,
          "description_md": "Sets the status code to return in response to rejected requests.",
          "description_html": "\u003cp\u003eSets the status code to return in response to rejected requests.\u003c/p\u003e\n"
        },
        {
          "name": "limit_conn_zone",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`key`* `zone`=*`name`*:*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets parameters for a shared memory zone\nthat will keep states for various keys.\nIn particular, the state includes the current number of connections.\nThe *`key`* can contain text, variables, and their combination.\nRequests with an empty key value are not accounted.\n\u003e Prior to version 1.7.6, a *`key`* could contain exactly one variable.\n\nUsage example:\n```\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n```\nHere, a client IP address serves as a key.\nNote that instead of `$remote_addr`, the\n`$binary_remote_addr` variable is used here.\nThe `$remote_addr` variable’s size can\nvary from 7 to 15 bytes.\nThe stored state occupies either\n32 or 64 bytes of memory on 32-bit platforms and always 64\nbytes on 64-bit platforms.\nThe `$binary_remote_addr` variable’s size\nis always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses.\nThe stored state always occupies 32 or 64 bytes\non 32-bit platforms and 64 bytes on 64-bit platforms.\nOne megabyte zone can keep about 32 thousand 32-byte states\nor about 16 thousand 64-byte states.\nIf the zone storage is exhausted, the server will return the\n[error](https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_status)\nto all further requests.\n\n\u003e Additionally, as part of our\n\u003e [commercial subscription](https://nginx.com/products/),\n\u003e the\n\u003e [status information](https://nginx.org/en/docs/http/ngx_http_api_module.html#http_limit_conns_)\n\u003e for each such shared memory zone can be\n\u003e [obtained](https://nginx.org/en/docs/http/ngx_http_api_module.html#getHttpLimitConnZone) or\n\u003e [reset](https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteHttpLimitConnZoneStat)\n\u003e with the [API](https://nginx.org/en/docs/http/ngx_http_api_module.html) since 1.17.7.",
          "description_html": "\u003cp\u003eSets parameters for a shared memory zone\nthat will keep states for various keys.\nIn particular, the state includes the current number of connections.\nThe \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combination.\nRequests with an empty key value are not accounted.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.7.6, a \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e could contain exactly one variable.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eUsage example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elimit_conn_zone $binary_remote_addr zone=addr:10m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere, a client IP address serves as a key.\nNote that instead of \u003ccode\u003e$remote_addr\u003c/code\u003e, the\n\u003ccode\u003e$binary_remote_addr\u003c/code\u003e variable is used here.\nThe \u003ccode\u003e$remote_addr\u003c/code\u003e variable’s size can\nvary from 7 to 15 bytes.\nThe stored state occupies either\n32 or 64 bytes of memory on 32-bit platforms and always 64\nbytes on 64-bit platforms.\nThe \u003ccode\u003e$binary_remote_addr\u003c/code\u003e variable’s size\nis always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses.\nThe stored state always occupies 32 or 64 bytes\non 32-bit platforms and 64 bytes on 64-bit platforms.\nOne megabyte zone can keep about 32 thousand 32-byte states\nor about 16 thousand 64-byte states.\nIf the zone storage is exhausted, the server will return the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_status\" target=\"_blank\"\u003eerror\u003c/a\u003e\nto all further requests.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAdditionally, as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e,\nthe\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_limit_conns_\" target=\"_blank\"\u003estatus information\u003c/a\u003e\nfor each such shared memory zone can be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#getHttpLimitConnZone\" target=\"_blank\"\u003eobtained\u003c/a\u003e or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteHttpLimitConnZoneStat\" target=\"_blank\"\u003ereset\u003c/a\u003e\nwith the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\" target=\"_blank\"\u003eAPI\u003c/a\u003e since 1.17.7.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "limit_zone",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`name`* *`$variable`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "This directive was made obsolete in version 1.1.8\nand was removed in version 1.7.6.\nAn equivalent [`limit_conn_zone`](https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_zone) directive\nwith a changed syntax should be used instead:\n\u003e `limit_conn_zone`\n\u003e *`$variable`*\n\u003e `zone`=*`name`*:*`size`*;",
          "description_html": "\u003cp\u003eThis directive was made obsolete in version 1.1.8\nand was removed in version 1.7.6.\nAn equivalent \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html#limit_conn_zone\" target=\"_blank\"\u003e\u003ccode\u003elimit_conn_zone\u003c/code\u003e\u003c/a\u003e directive\nwith a changed syntax should be used instead:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003elimit_conn_zone\u003c/code\u003e\n\u003cem\u003e\u003ccode\u003e$variable\u003c/code\u003e\u003c/em\u003e\n\u003ccode\u003ezone\u003c/code\u003e=\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e;\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_limit_req_module.html",
      "name": "ngx_http_limit_req_module",
      "directives": [
        {
          "name": "limit_req",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`zone`=*`name`* [`burst`=*`number`*] [`nodelay` | `delay`=*`number`*]"
          ],
          "isBlock": false,
          "description_md": "Sets the shared memory zone\nand the maximum burst size of requests.\nIf the requests rate exceeds the rate configured for a zone,\ntheir processing is delayed such that requests are processed\nat a defined rate.\nExcessive requests are delayed until their number exceeds the\nmaximum burst size\nin which case the request is terminated with an\n[error](https://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req_status).\nBy default, the maximum burst size is equal to zero.\nFor example, the directives\n```\nlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\n\nserver {\n    location /search/ {\n        limit_req zone=one burst=5;\n    }\n```\nallow not more than 1 request per second at an average,\nwith bursts not exceeding 5 requests.\n\nIf delaying of excessive requests while requests are being limited is not\ndesired, the parameter `nodelay` should be used:\n```\nlimit_req zone=one burst=5 nodelay;\n```\n\nThe `delay` parameter (1.15.7) specifies a limit\nat which excessive requests become delayed.\nDefault value is zero, i.e. all excessive requests are delayed.\n\nThere could be several `limit_req` directives.\nFor example, the following configuration will limit the processing rate\nof requests coming from a single IP address and, at the same time,\nthe request processing rate by the virtual server:\n```\nlimit_req_zone $binary_remote_addr zone=perip:10m rate=1r/s;\nlimit_req_zone $server_name zone=perserver:10m rate=10r/s;\n\nserver {\n    ...\n    limit_req zone=perip burst=5 nodelay;\n    limit_req zone=perserver burst=10;\n}\n```\n\nThese directives are inherited from the previous configuration level\nif and only if there are no `limit_req` directives\ndefined on the current level.",
          "description_html": "\u003cp\u003eSets the shared memory zone\nand the maximum burst size of requests.\nIf the requests rate exceeds the rate configured for a zone,\ntheir processing is delayed such that requests are processed\nat a defined rate.\nExcessive requests are delayed until their number exceeds the\nmaximum burst size\nin which case the request is terminated with an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req_status\" target=\"_blank\"\u003eerror\u003c/a\u003e.\nBy default, the maximum burst size is equal to zero.\nFor example, the directives\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elimit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\n\nserver {\n    location /search/ {\n        limit_req zone=one burst=5;\n    }\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eallow not more than 1 request per second at an average,\nwith bursts not exceeding 5 requests.\u003c/p\u003e\n\n\u003cp\u003eIf delaying of excessive requests while requests are being limited is not\ndesired, the parameter \u003ccode\u003enodelay\u003c/code\u003e should be used:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elimit_req zone=one burst=5 nodelay;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003edelay\u003c/code\u003e parameter (1.15.7) specifies a limit\nat which excessive requests become delayed.\nDefault value is zero, i.e. all excessive requests are delayed.\u003c/p\u003e\n\n\u003cp\u003eThere could be several \u003ccode\u003elimit_req\u003c/code\u003e directives.\nFor example, the following configuration will limit the processing rate\nof requests coming from a single IP address and, at the same time,\nthe request processing rate by the virtual server:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elimit_req_zone $binary_remote_addr zone=perip:10m rate=1r/s;\nlimit_req_zone $server_name zone=perserver:10m rate=10r/s;\n\nserver {\n    ...\n    limit_req zone=perip burst=5 nodelay;\n    limit_req zone=perserver burst=10;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003elimit_req\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n"
        },
        {
          "name": "limit_req_dry_run",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the dry run mode.\nIn this mode, requests processing rate is not limited, however,\nin the shared memory zone, the number of excessive requests is accounted\nas usual.",
          "description_html": "\u003cp\u003eEnables the dry run mode.\nIn this mode, requests processing rate is not limited, however,\nin the shared memory zone, the number of excessive requests is accounted\nas usual.\u003c/p\u003e\n"
        },
        {
          "name": "limit_req_log_level",
          "default": "error",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`info` | `notice` | `warn` | `error`"
          ],
          "isBlock": false,
          "description_md": "Sets the desired logging level\nfor cases when the server refuses to process requests\ndue to rate exceeding,\nor delays request processing.\nLogging level for delays is one point less than for refusals; for example,\nif “`limit_req_log_level notice`” is specified,\ndelays are logged with the `info` level.",
          "description_html": "\u003cp\u003eSets the desired logging level\nfor cases when the server refuses to process requests\ndue to rate exceeding,\nor delays request processing.\nLogging level for delays is one point less than for refusals; for example,\nif “\u003ccode\u003elimit_req_log_level notice\u003c/code\u003e” is specified,\ndelays are logged with the \u003ccode\u003einfo\u003c/code\u003e level.\u003c/p\u003e\n"
        },
        {
          "name": "limit_req_status",
          "default": "503",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`code`*"
          ],
          "isBlock": false,
          "description_md": "Sets the status code to return in response to rejected requests.",
          "description_html": "\u003cp\u003eSets the status code to return in response to rejected requests.\u003c/p\u003e\n"
        },
        {
          "name": "limit_req_zone",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`key`* `zone`=*`name`*:*`size`* `rate`=*`rate`* [`sync`]"
          ],
          "isBlock": false,
          "description_md": "Sets parameters for a shared memory zone\nthat will keep states for various keys.\nIn particular, the state stores the current number of excessive requests.\nThe *`key`* can contain text, variables, and their combination.\nRequests with an empty key value are not accounted.\n\u003e Prior to version 1.7.6, a *`key`* could contain exactly one variable.\n\nUsage example:\n```\nlimit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\n```\n\nHere, the states are kept in a 10 megabyte zone “one”, and an\naverage request processing rate for this zone cannot exceed\n1 request per second.\n\nA client IP address serves as a key.\nNote that instead of `$remote_addr`, the\n`$binary_remote_addr` variable is used here.\nThe `$binary_remote_addr` variable’s size\nis always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses.\nThe stored state always occupies\n64 bytes on 32-bit platforms and 128 bytes on 64-bit platforms.\nOne megabyte zone can keep about 16 thousand 64-byte states\nor about 8 thousand 128-byte states.\n\nIf the zone storage is exhausted, the least recently used state is removed.\nIf even after that a new state cannot be created, the request is terminated with\nan [error](https://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req_status).\n\nThe rate is specified in requests per second (r/s).\nIf a rate of less than one request per second is desired,\nit is specified in request per minute (r/m).\nFor example, half-request per second is 30r/m.\n\nThe `sync` parameter (1.15.3) enables\n[synchronization](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync)\nof the shared memory zone.\n\u003e The `sync` parameter is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).\n\n\u003e Additionally, as part of our\n\u003e [commercial subscription](https://nginx.com/products/),\n\u003e the\n\u003e [status information](https://nginx.org/en/docs/http/ngx_http_api_module.html#http_limit_reqs_)\n\u003e for each such shared memory zone can be\n\u003e [obtained](https://nginx.org/en/docs/http/ngx_http_api_module.html#getHttpLimitReqZone) or\n\u003e [reset](https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteHttpLimitReqZoneStat)\n\u003e with the [API](https://nginx.org/en/docs/http/ngx_http_api_module.html) since 1.17.7.",
          "description_html": "\u003cp\u003eSets parameters for a shared memory zone\nthat will keep states for various keys.\nIn particular, the state stores the current number of excessive requests.\nThe \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combination.\nRequests with an empty key value are not accounted.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.7.6, a \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e could contain exactly one variable.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eUsage example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elimit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere, the states are kept in a 10 megabyte zone “one”, and an\naverage request processing rate for this zone cannot exceed\n1 request per second.\u003c/p\u003e\n\n\u003cp\u003eA client IP address serves as a key.\nNote that instead of \u003ccode\u003e$remote_addr\u003c/code\u003e, the\n\u003ccode\u003e$binary_remote_addr\u003c/code\u003e variable is used here.\nThe \u003ccode\u003e$binary_remote_addr\u003c/code\u003e variable’s size\nis always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses.\nThe stored state always occupies\n64 bytes on 32-bit platforms and 128 bytes on 64-bit platforms.\nOne megabyte zone can keep about 16 thousand 64-byte states\nor about 8 thousand 128-byte states.\u003c/p\u003e\n\n\u003cp\u003eIf the zone storage is exhausted, the least recently used state is removed.\nIf even after that a new state cannot be created, the request is terminated with\nan \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_limit_req_module.html#limit_req_status\" target=\"_blank\"\u003eerror\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe rate is specified in requests per second (r/s).\nIf a rate of less than one request per second is desired,\nit is specified in request per minute (r/m).\nFor example, half-request per second is 30r/m.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003esync\u003c/code\u003e parameter (1.15.3) enables\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync\" target=\"_blank\"\u003esynchronization\u003c/a\u003e\nof the shared memory zone.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003esync\u003c/code\u003e parameter is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eAdditionally, as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e,\nthe\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_limit_reqs_\" target=\"_blank\"\u003estatus information\u003c/a\u003e\nfor each such shared memory zone can be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#getHttpLimitReqZone\" target=\"_blank\"\u003eobtained\u003c/a\u003e or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteHttpLimitReqZoneStat\" target=\"_blank\"\u003ereset\u003c/a\u003e\nwith the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\" target=\"_blank\"\u003eAPI\u003c/a\u003e since 1.17.7.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_log_module.html",
      "name": "ngx_http_log_module",
      "directives": [
        {
          "name": "access_log",
          "default": "logs/access.log combined",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location",
            "limit_except"
          ],
          "syntax": [
            "*`path`* [*`format`* [`buffer`=*`size`*] [`gzip[=]`] [`flush`=*`time`*] [`if`=*`condition`*]]",
            "`off`"
          ],
          "isBlock": false,
          "description_md": "Sets the path, format, and configuration for a buffered log write.\nSeveral logs can be specified on the same configuration level.\nLogging to [syslog](https://nginx.org/en/docs/syslog.html)\ncan be configured by specifying\nthe “`syslog:`” prefix in the first parameter.\nThe special value `off` cancels all\n`access_log` directives on the current level.\nIf the format is not specified then the predefined\n“`combined`” format is used.\n\nIf either the `buffer` or `gzip`\n(1.3.10, 1.2.7)\nparameter is used, writes to log will be buffered.\n\u003e The buffer size must not exceed the size of an atomic write to a disk file.\n\u003e For FreeBSD this size is unlimited.\n\nWhen buffering is enabled, the data will be written to the file:\n- if the next log line does not fit into the buffer;\n- if the buffered data is older than specified by the `flush`\n    parameter (1.3.10, 1.2.7);\n- when a worker process is [re-opening](https://nginx.org/en/docs/control.html) log\n    files or is shutting down.\n\nIf the `gzip` parameter is used, then the buffered data will\nbe compressed before writing to the file.\nThe compression level can be set between 1 (fastest, less compression)\nand 9 (slowest, best compression).\nBy default, the buffer size is equal to 64K bytes, and the compression level\nis set to 1.\nSince the data is compressed in atomic blocks, the log file can be decompressed\nor read by “`zcat`” at any time.\n\nExample:\n```\naccess_log /path/to/log.gz combined gzip flush=5m;\n```\n\n\u003e For gzip compression to work, nginx must be built with the zlib library.\n\nThe file path can contain variables (0.7.6+),\nbut such logs have some constraints:\n- the [`user`](https://nginx.org/en/docs/ngx_core_module.html#user)\n    whose credentials are used by worker processes should\n    have permissions to create files in a directory with\n    such logs;\n- buffered writes do not work;\n- the file is opened and closed for each log write.\n    However, since the descriptors of frequently used files can be stored\n    in a [cache](https://nginx.org/en/docs/http/ngx_http_log_module.html#open_log_file_cache), writing to the old file\n    can continue during the time specified by the [`open_log_file_cache`](https://nginx.org/en/docs/http/ngx_http_log_module.html#open_log_file_cache)\n    directive’s `valid` parameter\n- during each log write the existence of the request’s\n    [root directory](https://nginx.org/en/docs/http/ngx_http_core_module.html#root)\n    is checked, and if it does not exist the log is not\n    created.\n    It is thus a good idea to specify both\n    [`root`](https://nginx.org/en/docs/http/ngx_http_core_module.html#root)\n    and `access_log` on the same configuration level:\n    ```\n    server {\n        root       /spool/vhost/data/$host;\n        access_log /spool/vhost/logs/$host;\n        ...\n    ```\n\nThe `if` parameter (1.7.0) enables conditional logging.\nA request will not be logged if the *`condition`* evaluates to “0”\nor an empty string.\nIn the following example, the requests with response codes 2xx and 3xx\nwill not be logged:\n```\nmap $status $loggable {\n    ~^[23]  0;\n    default 1;\n}\n\naccess_log /path/to/access.log combined if=$loggable;\n```",
          "description_html": "\u003cp\u003eSets the path, format, and configuration for a buffered log write.\nSeveral logs can be specified on the same configuration level.\nLogging to \u003ca href=\"https://nginx.org/en/docs/syslog.html\" target=\"_blank\"\u003esyslog\u003c/a\u003e\ncan be configured by specifying\nthe “\u003ccode\u003esyslog:\u003c/code\u003e” prefix in the first parameter.\nThe special value \u003ccode\u003eoff\u003c/code\u003e cancels all\n\u003ccode\u003eaccess_log\u003c/code\u003e directives on the current level.\nIf the format is not specified then the predefined\n“\u003ccode\u003ecombined\u003c/code\u003e” format is used.\u003c/p\u003e\n\n\u003cp\u003eIf either the \u003ccode\u003ebuffer\u003c/code\u003e or \u003ccode\u003egzip\u003c/code\u003e\n(1.3.10, 1.2.7)\nparameter is used, writes to log will be buffered.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe buffer size must not exceed the size of an atomic write to a disk file.\nFor FreeBSD this size is unlimited.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhen buffering is enabled, the data will be written to the file:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eif the next log line does not fit into the buffer;\u003c/li\u003e\n\u003cli\u003eif the buffered data is older than specified by the \u003ccode\u003eflush\u003c/code\u003e\nparameter (1.3.10, 1.2.7);\u003c/li\u003e\n\u003cli\u003ewhen a worker process is \u003ca href=\"https://nginx.org/en/docs/control.html\" target=\"_blank\"\u003ere-opening\u003c/a\u003e log\nfiles or is shutting down.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf the \u003ccode\u003egzip\u003c/code\u003e parameter is used, then the buffered data will\nbe compressed before writing to the file.\nThe compression level can be set between 1 (fastest, less compression)\nand 9 (slowest, best compression).\nBy default, the buffer size is equal to 64K bytes, and the compression level\nis set to 1.\nSince the data is compressed in atomic blocks, the log file can be decompressed\nor read by “\u003ccode\u003ezcat\u003c/code\u003e” at any time.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eaccess_log /path/to/log.gz combined gzip flush=5m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFor gzip compression to work, nginx must be built with the zlib library.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe file path can contain variables (0.7.6+),\nbut such logs have some constraints:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe \u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#user\" target=\"_blank\"\u003e\u003ccode\u003euser\u003c/code\u003e\u003c/a\u003e\nwhose credentials are used by worker processes should\nhave permissions to create files in a directory with\nsuch logs;\u003c/li\u003e\n\u003cli\u003ebuffered writes do not work;\u003c/li\u003e\n\u003cli\u003ethe file is opened and closed for each log write.\nHowever, since the descriptors of frequently used files can be stored\nin a \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_log_module.html#open_log_file_cache\" target=\"_blank\"\u003ecache\u003c/a\u003e, writing to the old file\ncan continue during the time specified by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_log_module.html#open_log_file_cache\" target=\"_blank\"\u003e\u003ccode\u003eopen_log_file_cache\u003c/code\u003e\u003c/a\u003e\ndirective’s \u003ccode\u003evalid\u003c/code\u003e parameter\u003c/li\u003e\n\u003cli\u003eduring each log write the existence of the request’s\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\" target=\"_blank\"\u003eroot directory\u003c/a\u003e\nis checked, and if it does not exist the log is not\ncreated.\nIt is thus a good idea to specify both\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\" target=\"_blank\"\u003e\u003ccode\u003eroot\u003c/code\u003e\u003c/a\u003e\nand \u003ccode\u003eaccess_log\u003c/code\u003e on the same configuration level:\n\n\u003cpre\u003e\u003ccode\u003e\nserver {\n    root       /spool/vhost/data/$host;\n    access_log /spool/vhost/logs/$host;\n    ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe \u003ccode\u003eif\u003c/code\u003e parameter (1.7.0) enables conditional logging.\nA request will not be logged if the \u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e evaluates to “0”\nor an empty string.\nIn the following example, the requests with response codes 2xx and 3xx\nwill not be logged:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003emap $status $loggable {\n    ~^[23]  0;\n    default 1;\n}\n\naccess_log /path/to/access.log combined if=$loggable;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "log_format",
          "default": "combined \"...\"",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`name`* [`escape`=`default`|`json`|`none`] *`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Specifies log format.\n\nThe `escape` parameter (1.11.8) allows setting\n`json` or `default` characters escaping\nin variables, by default, `default` escaping is used.\nThe `none` value (1.13.10) disables escaping.\n\nFor `default` escaping,\ncharacters “`\"`”, “`\\`”,\nand other characters with values less than 32 (0.7.0) or above 126 (1.1.6)\nare escaped as “`\\xXX`”.\nIf the variable value is not found,\na hyphen (“`-`”) will be logged.\n\nFor `json` escaping,\nall characters not allowed\nin JSON [strings](https://datatracker.ietf.org/doc/html/rfc8259#section-7)\nwill be escaped:\ncharacters “`\"`” and\n“`\\`” are escaped as\n“`\\\"`” and “`\\\\`”,\ncharacters with values less than 32 are escaped as\n“`\\n`”,\n“`\\r`”,\n“`\\t`”,\n“`\\b`”,\n“`\\f`”, or\n“`\\u00XX`”.\n\nThe log format can contain common variables, and variables that\nexist only at the time of a log write:\n- `$bytes_sent`\n\n    the number of bytes sent to a client\n- `$connection`\n\n    connection serial number\n- `$connection_requests`\n\n    the current number of requests made through a connection (1.1.18)\n- `$msec`\n\n    time in seconds with a milliseconds resolution at the time of the log write\n- `$pipe`\n\n    “`p`” if request was pipelined, “`.`”\n    otherwise\n- `$request_length`\n\n    request length (including request line, header, and request body)\n- `$request_time`\n\n    request processing time in seconds with a milliseconds resolution;\n    time elapsed between the first bytes were read from the client and\n    the log write after the last bytes were sent to the client\n- `$status`\n\n    response status\n- `$time_iso8601`\n\n    local time in the ISO 8601 standard format\n- `$time_local`\n\n    local time in the Common Log Format\n\n\n\u003e In the modern nginx versions variables\n\u003e [$status](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_status)\n\u003e (1.3.2, 1.2.2),\n\u003e [$bytes_sent](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_bytes_sent)\n\u003e (1.3.8, 1.2.5),\n\u003e [$connection](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_connection)\n\u003e (1.3.8, 1.2.5),\n\u003e [$connection_requests](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_connection_requests)\n\u003e (1.3.8, 1.2.5),\n\u003e [$msec](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_msec)\n\u003e (1.3.9, 1.2.6),\n\u003e [$request_time](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_time)\n\u003e (1.3.9, 1.2.6),\n\u003e [$pipe](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_pipe)\n\u003e (1.3.12, 1.2.7),\n\u003e [$request_length](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_length)\n\u003e (1.3.12, 1.2.7),\n\u003e [$time_iso8601](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_time_iso8601)\n\u003e (1.3.12, 1.2.7),\n\u003e and\n\u003e [$time_local](https://nginx.org/en/docs/http/ngx_http_core_module.html#var_time_local)\n\u003e (1.3.12, 1.2.7)\n\u003e are also available as common variables.\n\nHeader lines sent to a client have the prefix\n“`sent_http_`”, for example,\n`$sent_http_content_range`.\n\nThe configuration always includes the predefined\n“`combined`” format:\n```\nlog_format combined '$remote_addr - $remote_user [$time_local] '\n                    '\"$request\" $status $body_bytes_sent '\n                    '\"$http_referer\" \"$http_user_agent\"';\n```",
          "description_html": "\u003cp\u003eSpecifies log format.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eescape\u003c/code\u003e parameter (1.11.8) allows setting\n\u003ccode\u003ejson\u003c/code\u003e or \u003ccode\u003edefault\u003c/code\u003e characters escaping\nin variables, by default, \u003ccode\u003edefault\u003c/code\u003e escaping is used.\nThe \u003ccode\u003enone\u003c/code\u003e value (1.13.10) disables escaping.\u003c/p\u003e\n\n\u003cp\u003eFor \u003ccode\u003edefault\u003c/code\u003e escaping,\ncharacters “\u003ccode\u003e\u0026quot;\u003c/code\u003e”, “\u003ccode\u003e\\\u003c/code\u003e”,\nand other characters with values less than 32 (0.7.0) or above 126 (1.1.6)\nare escaped as “\u003ccode\u003e\\xXX\u003c/code\u003e”.\nIf the variable value is not found,\na hyphen (“\u003ccode\u003e-\u003c/code\u003e”) will be logged.\u003c/p\u003e\n\n\u003cp\u003eFor \u003ccode\u003ejson\u003c/code\u003e escaping,\nall characters not allowed\nin JSON \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc8259#section-7\" target=\"_blank\"\u003estrings\u003c/a\u003e\nwill be escaped:\ncharacters “\u003ccode\u003e\u0026quot;\u003c/code\u003e” and\n“\u003ccode\u003e\\\u003c/code\u003e” are escaped as\n“\u003ccode\u003e\\\u0026quot;\u003c/code\u003e” and “\u003ccode\u003e\\\\\u003c/code\u003e”,\ncharacters with values less than 32 are escaped as\n“\u003ccode\u003e\\n\u003c/code\u003e”,\n“\u003ccode\u003e\\r\u003c/code\u003e”,\n“\u003ccode\u003e\\t\u003c/code\u003e”,\n“\u003ccode\u003e\\b\u003c/code\u003e”,\n“\u003ccode\u003e\\f\u003c/code\u003e”, or\n“\u003ccode\u003e\\u00XX\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eThe log format can contain common variables, and variables that\nexist only at the time of a log write:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$bytes_sent\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe number of bytes sent to a client\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$connection\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003econnection serial number\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$connection_requests\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe current number of requests made through a connection (1.1.18)\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$msec\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etime in seconds with a milliseconds resolution at the time of the log write\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$pipe\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e“\u003ccode\u003ep\u003c/code\u003e” if request was pipelined, “\u003ccode\u003e.\u003c/code\u003e”\notherwise\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$request_length\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003erequest length (including request line, header, and request body)\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$request_time\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003erequest processing time in seconds with a milliseconds resolution;\ntime elapsed between the first bytes were read from the client and\nthe log write after the last bytes were sent to the client\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$status\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eresponse status\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$time_iso8601\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003elocal time in the ISO 8601 standard format\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$time_local\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003elocal time in the Common Log Format\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn the modern nginx versions variables\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_status\" target=\"_blank\"\u003e$status\u003c/a\u003e\n(1.3.2, 1.2.2),\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_bytes_sent\" target=\"_blank\"\u003e$bytes_sent\u003c/a\u003e\n(1.3.8, 1.2.5),\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_connection\" target=\"_blank\"\u003e$connection\u003c/a\u003e\n(1.3.8, 1.2.5),\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_connection_requests\" target=\"_blank\"\u003e$connection_requests\u003c/a\u003e\n(1.3.8, 1.2.5),\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_msec\" target=\"_blank\"\u003e$msec\u003c/a\u003e\n(1.3.9, 1.2.6),\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_time\" target=\"_blank\"\u003e$request_time\u003c/a\u003e\n(1.3.9, 1.2.6),\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_pipe\" target=\"_blank\"\u003e$pipe\u003c/a\u003e\n(1.3.12, 1.2.7),\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_length\" target=\"_blank\"\u003e$request_length\u003c/a\u003e\n(1.3.12, 1.2.7),\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_time_iso8601\" target=\"_blank\"\u003e$time_iso8601\u003c/a\u003e\n(1.3.12, 1.2.7),\nand\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#var_time_local\" target=\"_blank\"\u003e$time_local\u003c/a\u003e\n(1.3.12, 1.2.7)\nare also available as common variables.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eHeader lines sent to a client have the prefix\n“\u003ccode\u003esent_http_\u003c/code\u003e”, for example,\n\u003ccode\u003e$sent_http_content_range\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe configuration always includes the predefined\n“\u003ccode\u003ecombined\u003c/code\u003e” format:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elog_format combined '$remote_addr - $remote_user [$time_local] '\n                    '\u0026quot;$request\u0026quot; $status $body_bytes_sent '\n                    '\u0026quot;$http_referer\u0026quot; \u0026quot;$http_user_agent\u0026quot;';\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "open_log_file_cache",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`max`=*`N`* [`inactive`=*`time`*] [`min_uses`=*`N`*] [`valid`=*`time`*]",
            "`off`"
          ],
          "isBlock": false,
          "description_md": "Defines a cache that stores the file descriptors of frequently used logs\nwhose names contain variables.\nThe directive has the following parameters:\n- `max`\n\n    sets the maximum number of descriptors in a cache;\n    if the cache becomes full the least recently used (LRU)\n    descriptors are closed\n- `inactive`\n\n    sets the time after which the cached descriptor is closed\n    if there were no access during this time;\n    by default, 10 seconds\n- `min_uses`\n\n    sets the minimum number of file uses during the time\n    defined by the `inactive` parameter\n    to let the descriptor stay open in a cache;\n    by default, 1\n- `valid`\n\n    sets the time after which it should be checked that the file\n    still exists with the same name; by default, 60 seconds\n- `off`\n\n    disables caching\n\nUsage example:\n```\nopen_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;\n```",
          "description_html": "\u003cp\u003eDefines a cache that stores the file descriptors of frequently used logs\nwhose names contain variables.\nThe directive has the following parameters:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emax\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esets the maximum number of descriptors in a cache;\nif the cache becomes full the least recently used (LRU)\ndescriptors are closed\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einactive\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esets the time after which the cached descriptor is closed\nif there were no access during this time;\nby default, 10 seconds\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emin_uses\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esets the minimum number of file uses during the time\ndefined by the \u003ccode\u003einactive\u003c/code\u003e parameter\nto let the descriptor stay open in a cache;\nby default, 1\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003evalid\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esets the time after which it should be checked that the file\nstill exists with the same name; by default, 60 seconds\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables caching\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUsage example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eopen_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_map_module.html",
      "name": "ngx_http_map_module",
      "directives": [
        {
          "name": "map",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`string`* *`$variable`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Creates a new variable whose value\ndepends on values of one or more of the source variables\nspecified in the first parameter.\n\u003e Before version 0.9.0 only a single variable could be\n\u003e specified in the first parameter.\n\n\u003e Since variables are evaluated only when they are used, the mere declaration\n\u003e even of a large number of “`map`” variables\n\u003e does not add any extra costs to request processing.\n\nParameters inside the `map` block specify a mapping\nbetween source and resulting values.\n\nSource values are specified as strings or regular expressions (0.9.6).\n\nStrings are matched ignoring the case.\n\nA regular expression should either start from the “`~`”\nsymbol for a case-sensitive matching, or from the “`~*`”\nsymbols (1.0.4) for case-insensitive matching.\nA regular expression can contain named and positional captures\nthat can later be used in other directives along with the\nresulting variable.\n\nIf a source value matches one of the names of special parameters\ndescribed below, it should be prefixed with the “`\\`” symbol.\n\nThe resulting value can contain text,\nvariable (0.9.0), and their combination (1.11.0).\n\nThe following special parameters are also supported:\n- `default` *`value`*\n\n    sets the resulting value if the source value matches none\n    of the specified variants.\n    When `default` is not specified, the default\n    resulting value will be an empty string.\n- `hostnames`\n\n    indicates that source values can be hostnames with a prefix or suffix mask:\n    ```\n    *.example.com 1;\n    example.*     1;\n    ```\n    The following two records\n    ```\n    example.com   1;\n    *.example.com 1;\n    ```\n    can be combined:\n    ```\n    .example.com  1;\n    ```\n    This parameter should be specified before the list of values.\n- `include` *`file`*\n\n    includes a file with values.\n    There can be several inclusions.\n- `volatile`\n\n    indicates that the variable is not cacheable (1.11.7).\n\nIf the source value matches more than one of the specified variants,\ne.g. both a mask and a regular expression match, the first matching\nvariant will be chosen, in the following order of priority:\n1. string value without a mask\n2. longest string value with a prefix mask,\n    e.g. “`*.example.com`”\n3. longest string value with a suffix mask,\n    e.g. “`mail.*`”\n4. first matching regular expression\n    (in order of appearance in a configuration file)\n5. default value",
          "description_html": "\u003cp\u003eCreates a new variable whose value\ndepends on values of one or more of the source variables\nspecified in the first parameter.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore version 0.9.0 only a single variable could be\nspecified in the first parameter.\u003c/p\u003e\n\n\u003cp\u003eSince variables are evaluated only when they are used, the mere declaration\neven of a large number of “\u003ccode\u003emap\u003c/code\u003e” variables\ndoes not add any extra costs to request processing.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eParameters inside the \u003ccode\u003emap\u003c/code\u003e block specify a mapping\nbetween source and resulting values.\u003c/p\u003e\n\n\u003cp\u003eSource values are specified as strings or regular expressions (0.9.6).\u003c/p\u003e\n\n\u003cp\u003eStrings are matched ignoring the case.\u003c/p\u003e\n\n\u003cp\u003eA regular expression should either start from the “\u003ccode\u003e~\u003c/code\u003e”\nsymbol for a case-sensitive matching, or from the “\u003ccode\u003e~*\u003c/code\u003e”\nsymbols (1.0.4) for case-insensitive matching.\nA regular expression can contain named and positional captures\nthat can later be used in other directives along with the\nresulting variable.\u003c/p\u003e\n\n\u003cp\u003eIf a source value matches one of the names of special parameters\ndescribed below, it should be prefixed with the “\u003ccode\u003e\\\u003c/code\u003e” symbol.\u003c/p\u003e\n\n\u003cp\u003eThe resulting value can contain text,\nvariable (0.9.0), and their combination (1.11.0).\u003c/p\u003e\n\n\u003cp\u003eThe following special parameters are also supported:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edefault\u003c/code\u003e \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the resulting value if the source value matches none\nof the specified variants.\nWhen \u003ccode\u003edefault\u003c/code\u003e is not specified, the default\nresulting value will be an empty string.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehostnames\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eindicates that source values can be hostnames with a prefix or suffix mask:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e*.example.com 1;\nexample.*     1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe following two records\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eexample.com   1;\n*.example.com 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ecan be combined:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e.example.com  1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis parameter should be specified before the list of values.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einclude\u003c/code\u003e \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eincludes a file with values.\nThere can be several inclusions.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003evolatile\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eindicates that the variable is not cacheable (1.11.7).\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf the source value matches more than one of the specified variants,\ne.g. both a mask and a regular expression match, the first matching\nvariant will be chosen, in the following order of priority:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003estring value without a mask\u003c/li\u003e\n\u003cli\u003elongest string value with a prefix mask,\ne.g. “\u003ccode\u003e*.example.com\u003c/code\u003e”\u003c/li\u003e\n\u003cli\u003elongest string value with a suffix mask,\ne.g. “\u003ccode\u003email.*\u003c/code\u003e”\u003c/li\u003e\n\u003cli\u003efirst matching regular expression\n(in order of appearance in a configuration file)\u003c/li\u003e\n\u003cli\u003edefault value\u003c/li\u003e\n\u003c/ol\u003e\n"
        },
        {
          "name": "map_hash_bucket_size",
          "default": "32|64|128",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the bucket size for the [`map`](https://nginx.org/en/docs/http/ngx_http_map_module.html#map) variables hash tables.\nDefault value depends on the processor’s cache line size.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the bucket size for the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_map_module.html#map\" target=\"_blank\"\u003e\u003ccode\u003emap\u003c/code\u003e\u003c/a\u003e variables hash tables.\nDefault value depends on the processor’s cache line size.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "map_hash_max_size",
          "default": "2048",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`size`* of the [`map`](https://nginx.org/en/docs/http/ngx_http_map_module.html#map) variables\nhash tables.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_map_module.html#map\" target=\"_blank\"\u003e\u003ccode\u003emap\u003c/code\u003e\u003c/a\u003e variables\nhash tables.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_memcached_module.html",
      "name": "ngx_http_memcached_module",
      "directives": [
        {
          "name": "memcached_bind",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`address`* [`transparent `] | `off`"
          ],
          "isBlock": false,
          "description_md": "Makes outgoing connections to a memcached server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value `off` (1.3.12) cancels the effect\nof the `memcached_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n\nThe `transparent` parameter (1.11.0) allows\noutgoing connections to a memcached server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\n```\nmemcached_bind $remote_addr transparent;\n```\nIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n[superuser](https://nginx.org/en/docs/ngx_core_module.html#user) privileges.\nOn Linux it is not required (1.13.8) as if\nthe `transparent` parameter is specified, worker processes\ninherit the `CAP_NET_RAW` capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the memcached server.",
          "description_html": "\u003cp\u003eMakes outgoing connections to a memcached server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value \u003ccode\u003eoff\u003c/code\u003e (1.3.12) cancels the effect\nof the \u003ccode\u003ememcached_bind\u003c/code\u003e directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003etransparent\u003c/code\u003e parameter (1.11.0) allows\noutgoing connections to a memcached server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ememcached_bind $remote_addr transparent;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#user\" target=\"_blank\"\u003esuperuser\u003c/a\u003e privileges.\nOn Linux it is not required (1.13.8) as if\nthe \u003ccode\u003etransparent\u003c/code\u003e parameter is specified, worker processes\ninherit the \u003ccode\u003eCAP_NET_RAW\u003c/code\u003e capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the memcached server.\u003c/p\u003e\n"
        },
        {
          "name": "memcached_buffer_size",
          "default": "4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading the response\nreceived from the memcached server.\nThe response is passed to the client synchronously, as soon as it is received.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading the response\nreceived from the memcached server.\nThe response is passed to the client synchronously, as soon as it is received.\u003c/p\u003e\n"
        },
        {
          "name": "memcached_connect_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for establishing a connection with a memcached server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.",
          "description_html": "\u003cp\u003eDefines a timeout for establishing a connection with a memcached server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\u003c/p\u003e\n"
        },
        {
          "name": "memcached_gzip_flag",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`flag`*"
          ],
          "isBlock": false,
          "description_md": "Enables the test for the *`flag`* presence in the memcached\nserver response and sets the “`Content-Encoding`”\nresponse header field to “`gzip`”\nif the flag is set.",
          "description_html": "\u003cp\u003eEnables the test for the \u003cem\u003e\u003ccode\u003eflag\u003c/code\u003e\u003c/em\u003e presence in the memcached\nserver response and sets the “\u003ccode\u003eContent-Encoding\u003c/code\u003e”\nresponse header field to “\u003ccode\u003egzip\u003c/code\u003e”\nif the flag is set.\u003c/p\u003e\n"
        },
        {
          "name": "memcached_next_upstream",
          "default": "error timeout",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`error` | `timeout` | `invalid_response` | `not_found` | `off` ..."
          ],
          "isBlock": false,
          "description_md": "Specifies in which cases a request should be passed to the next server:\n- `error`\n\n    an error occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `timeout`\n\n    a timeout has occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `invalid_response`\n\n    a server returned an empty or invalid response;\n- `not_found`\n\n    a response was not found on the server;\n- `off`\n\n    disables passing a request to the next server.\n\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n\nThe directive also defines what is considered an\n[unsuccessful attempt](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails) of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_response` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe case of `not_found`\nis never considered an unsuccessful attempt.\n\nPassing a request to the next server can be limited by\n[the number of tries](https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream_tries)\nand by [time](https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream_timeout).",
          "description_html": "\u003cp\u003eSpecifies in which cases a request should be passed to the next server:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eerror\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ean error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einvalid_response\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned an empty or invalid response;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enot_found\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea response was not found on the server;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables passing a request to the next server.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\u003c/p\u003e\n\n\u003cp\u003eThe directive also defines what is considered an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\" target=\"_blank\"\u003eunsuccessful attempt\u003c/a\u003e of communication with a server.\nThe cases of \u003ccode\u003eerror\u003c/code\u003e, \u003ccode\u003etimeout\u003c/code\u003e and\n\u003ccode\u003einvalid_response\u003c/code\u003e are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe case of \u003ccode\u003enot_found\u003c/code\u003e\nis never considered an unsuccessful attempt.\u003c/p\u003e\n\n\u003cp\u003ePassing a request to the next server can be limited by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream_tries\" target=\"_blank\"\u003ethe number of tries\u003c/a\u003e\nand by \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream_timeout\" target=\"_blank\"\u003etime\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "memcached_next_upstream_timeout",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Limits the time during which a request can be passed to the\n[next server](https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the time during which a request can be passed to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "memcached_next_upstream_tries",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Limits the number of possible tries for passing a request to the\n[next server](https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the number of possible tries for passing a request to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "memcached_pass",
          "default": "",
          "contexts": [
            "location",
            "if in location"
          ],
          "syntax": [
            "*`address`*"
          ],
          "isBlock": false,
          "description_md": "Sets the memcached server address.\nThe address can be specified as a domain name or IP address,\nand a port:\n```\nmemcached_pass localhost:11211;\n```\nor as a UNIX-domain socket path:\n```\nmemcached_pass unix:/tmp/memcached.socket;\n```\n\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n[server group](https://nginx.org/en/docs/http/ngx_http_upstream_module.html).",
          "description_html": "\u003cp\u003eSets the memcached server address.\nThe address can be specified as a domain name or IP address,\nand a port:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ememcached_pass localhost:11211;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eor as a UNIX-domain socket path:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ememcached_pass unix:/tmp/memcached.socket;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003eserver group\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "memcached_read_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for reading a response from the memcached server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the memcached server does not transmit anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eDefines a timeout for reading a response from the memcached server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the memcached server does not transmit anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "memcached_send_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for transmitting a request to the memcached server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the memcached server does not receive anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eSets a timeout for transmitting a request to the memcached server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the memcached server does not receive anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "memcached_socket_keepalive",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Configures the “TCP keepalive” behavior\nfor outgoing connections to a memcached server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “`on`”, the\n`SO_KEEPALIVE` socket option is turned on for the socket.",
          "description_html": "\u003cp\u003eConfigures the “TCP keepalive” behavior\nfor outgoing connections to a memcached server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “\u003ccode\u003eon\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e socket option is turned on for the socket.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_mirror_module.html",
      "name": "ngx_http_mirror_module",
      "directives": [
        {
          "name": "mirror",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`uri`* | `off`"
          ],
          "isBlock": false,
          "description_md": "Sets the URI to which an original request will be mirrored.\nSeveral mirrors can be specified on the same configuration level.",
          "description_html": "\u003cp\u003eSets the URI to which an original request will be mirrored.\nSeveral mirrors can be specified on the same configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "mirror_request_body",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether the client request body is mirrored.\nWhen enabled, the client request body will be read\nprior to creating mirror subrequests.\nIn this case, unbuffered client request body proxying\nset by the\n[`proxy_request_buffering`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_request_buffering),\n[`fastcgi_request_buffering`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_request_buffering),\n[`scgi_request_buffering`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_request_buffering),\nand\n[`uwsgi_request_buffering`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_request_buffering)\ndirectives will be disabled.\n```\nlocation / {\n    mirror /mirror;\n    mirror_request_body off;\n    proxy_pass http://backend;\n}\n\nlocation = /mirror {\n    internal;\n    proxy_pass http://log_backend;\n    proxy_pass_request_body off;\n    proxy_set_header Content-Length \"\";\n    proxy_set_header X-Original-URI $request_uri;\n}\n```",
          "description_html": "\u003cp\u003eIndicates whether the client request body is mirrored.\nWhen enabled, the client request body will be read\nprior to creating mirror subrequests.\nIn this case, unbuffered client request body proxying\nset by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_request_buffering\" target=\"_blank\"\u003e\u003ccode\u003eproxy_request_buffering\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_request_buffering\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_request_buffering\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_request_buffering\" target=\"_blank\"\u003e\u003ccode\u003escgi_request_buffering\u003c/code\u003e\u003c/a\u003e,\nand\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_request_buffering\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_request_buffering\u003c/code\u003e\u003c/a\u003e\ndirectives will be disabled.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    mirror /mirror;\n    mirror_request_body off;\n    proxy_pass http://backend;\n}\n\nlocation = /mirror {\n    internal;\n    proxy_pass http://log_backend;\n    proxy_pass_request_body off;\n    proxy_set_header Content-Length \u0026quot;\u0026quot;;\n    proxy_set_header X-Original-URI $request_uri;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_mp4_module.html",
      "name": "ngx_http_mp4_module",
      "directives": [
        {
          "name": "mp4",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Turns on module processing in a surrounding location.",
          "description_html": "\u003cp\u003eTurns on module processing in a surrounding location.\u003c/p\u003e\n"
        },
        {
          "name": "mp4_buffer_size",
          "default": "512K",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the initial *`size`* of the buffer used for\nprocessing MP4 files.",
          "description_html": "\u003cp\u003eSets the initial \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for\nprocessing MP4 files.\u003c/p\u003e\n"
        },
        {
          "name": "mp4_max_buffer_size",
          "default": "10M",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "During metadata processing, a larger buffer may become necessary.\nIts size cannot exceed the specified *`size`*,\nor else nginx will return the\n500 (Internal Server Error) server error,\nand log the following message:\n```\n\"/some/movie/file.mp4\" mp4 moov atom is too large:\n12583268, you may want to increase mp4_max_buffer_size\n```",
          "description_html": "\u003cp\u003eDuring metadata processing, a larger buffer may become necessary.\nIts size cannot exceed the specified \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e,\nor else nginx will return the\n500 (Internal Server Error) server error,\nand log the following message:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026quot;/some/movie/file.mp4\u0026quot; mp4 moov atom is too large:\n12583268, you may want to increase mp4_max_buffer_size\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "mp4_limit_rate",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off` | *`factor`*"
          ],
          "isBlock": false,
          "description_md": "Limits the rate of response transmission to a client.\nThe rate is limited based on the average bitrate of the\nMP4 file served.\nTo calculate the rate, the bitrate is multiplied by the specified\n*`factor`*.\nThe special value “`on`” corresponds to the factor of 1.1.\nThe special value “`off`” disables rate limiting.\nThe limit is set per a request, and so if a client simultaneously opens\ntwo connections, the overall rate will be twice as much\nas the specified limit.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eLimits the rate of response transmission to a client.\nThe rate is limited based on the average bitrate of the\nMP4 file served.\nTo calculate the rate, the bitrate is multiplied by the specified\n\u003cem\u003e\u003ccode\u003efactor\u003c/code\u003e\u003c/em\u003e.\nThe special value “\u003ccode\u003eon\u003c/code\u003e” corresponds to the factor of 1.1.\nThe special value “\u003ccode\u003eoff\u003c/code\u003e” disables rate limiting.\nThe limit is set per a request, and so if a client simultaneously opens\ntwo connections, the overall rate will be twice as much\nas the specified limit.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "mp4_limit_rate_after",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets the initial amount of media data (measured in playback time)\nafter which the further transmission of the response to a client\nwill be rate limited.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eSets the initial amount of media data (measured in playback time)\nafter which the further transmission of the response to a client\nwill be rate limited.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "mp4_start_key_frame",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Forces output video to always start with a key video frame.\nIf the `start` argument does not point to a key frame,\ninitial frames are hidden using an mp4 edit list.\nEdit lists are supported by major players and browsers such as\nChrome, Safari, QuickTime and ffmpeg,\npartially supported by Firefox.",
          "description_html": "\u003cp\u003eForces output video to always start with a key video frame.\nIf the \u003ccode\u003estart\u003c/code\u003e argument does not point to a key frame,\ninitial frames are hidden using an mp4 edit list.\nEdit lists are supported by major players and browsers such as\nChrome, Safari, QuickTime and ffmpeg,\npartially supported by Firefox.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_perl_module.html",
      "name": "ngx_http_perl_module",
      "directives": [
        {
          "name": "perl",
          "default": "",
          "contexts": [
            "location",
            "limit_except"
          ],
          "syntax": [
            "*`module`*::*`function`*|'sub { ... }'"
          ],
          "isBlock": false,
          "description_md": "Sets a Perl handler for the given location.",
          "description_html": "\u003cp\u003eSets a Perl handler for the given location.\u003c/p\u003e\n"
        },
        {
          "name": "perl_modules",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`path`*"
          ],
          "isBlock": false,
          "description_md": "Sets an additional path for Perl modules.",
          "description_html": "\u003cp\u003eSets an additional path for Perl modules.\u003c/p\u003e\n"
        },
        {
          "name": "perl_require",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`module`*"
          ],
          "isBlock": false,
          "description_md": "Defines the name of a module that will be loaded during each\nreconfiguration.\nSeveral `perl_require` directives can be present.",
          "description_html": "\u003cp\u003eDefines the name of a module that will be loaded during each\nreconfiguration.\nSeveral \u003ccode\u003eperl_require\u003c/code\u003e directives can be present.\u003c/p\u003e\n"
        },
        {
          "name": "perl_set",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`$variable`* *`module`*::*`function`*|'sub { ... }'"
          ],
          "isBlock": false,
          "description_md": "Installs a Perl handler for the specified variable.",
          "description_html": "\u003cp\u003eInstalls a Perl handler for the specified variable.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_proxy_module.html",
      "name": "ngx_http_proxy_module",
      "directives": [
        {
          "name": "proxy_bind",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`address`* [`transparent`] | `off`"
          ],
          "isBlock": false,
          "description_md": "Makes outgoing connections to a proxied server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value `off` (1.3.12) cancels the effect\nof the `proxy_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n\nThe `transparent` parameter (1.11.0) allows\noutgoing connections to a proxied server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\n```\nproxy_bind $remote_addr transparent;\n```\nIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n[superuser](https://nginx.org/en/docs/ngx_core_module.html#user) privileges.\nOn Linux it is not required (1.13.8) as if\nthe `transparent` parameter is specified, worker processes\ninherit the `CAP_NET_RAW` capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the proxied server.",
          "description_html": "\u003cp\u003eMakes outgoing connections to a proxied server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value \u003ccode\u003eoff\u003c/code\u003e (1.3.12) cancels the effect\nof the \u003ccode\u003eproxy_bind\u003c/code\u003e directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003etransparent\u003c/code\u003e parameter (1.11.0) allows\noutgoing connections to a proxied server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_bind $remote_addr transparent;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#user\" target=\"_blank\"\u003esuperuser\u003c/a\u003e privileges.\nOn Linux it is not required (1.13.8) as if\nthe \u003ccode\u003etransparent\u003c/code\u003e parameter is specified, worker processes\ninherit the \u003ccode\u003eCAP_NET_RAW\u003c/code\u003e capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the proxied server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_buffer_size",
          "default": "4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading the first part\nof the response received from the proxied server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading the first part\nof the response received from the proxied server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_buffering",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables buffering of responses from the proxied server.\n\nWhen buffering is enabled, nginx receives a response from the proxied server\nas soon as possible, saving it into the buffers set by the\n[`proxy_buffer_size`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size) and [`proxy_buffers`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers) directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a [temporary file](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path) on the disk.\nWriting to temporary files is controlled by the\n[`proxy_max_temp_file_size`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size) and\n[`proxy_temp_file_write_size`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size) directives.\n\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the proxied server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the [`proxy_buffer_size`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size) directive.\n\nBuffering can also be enabled or disabled by passing\n“`yes`” or “`no`” in the\n\"X-Accel-Buffering\" response header field.\nThis capability can be disabled using the\n[`proxy_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers) directive.",
          "description_html": "\u003cp\u003eEnables or disables buffering of responses from the proxied server.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is enabled, nginx receives a response from the proxied server\nas soon as possible, saving it into the buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003eproxy_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\" target=\"_blank\"\u003e\u003ccode\u003eproxy_buffers\u003c/code\u003e\u003c/a\u003e directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path\" target=\"_blank\"\u003etemporary file\u003c/a\u003e on the disk.\nWriting to temporary files is controlled by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size\" target=\"_blank\"\u003e\u003ccode\u003eproxy_max_temp_file_size\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size\" target=\"_blank\"\u003e\u003ccode\u003eproxy_temp_file_write_size\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the proxied server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003eproxy_buffer_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eBuffering can also be enabled or disabled by passing\n“\u003ccode\u003eyes\u003c/code\u003e” or “\u003ccode\u003eno\u003c/code\u003e” in the\n\u0026ldquo;X-Accel-Buffering\u0026rdquo; response header field.\nThis capability can be disabled using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003eproxy_ignore_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_buffers",
          "default": "8 4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* and *`size`* of the\nbuffers used for reading a response from the proxied server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the\nbuffers used for reading a response from the proxied server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_busy_buffers_size",
          "default": "8k|16k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "When [buffering](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering) of responses from the proxied\nserver is enabled, limits the total *`size`* of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, *`size`* is limited by the size of two buffers set by the\n[`proxy_buffer_size`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size) and [`proxy_buffers`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers) directives.",
          "description_html": "\u003cp\u003eWhen \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the proxied\nserver is enabled, limits the total \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e is limited by the size of two buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003eproxy_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\" target=\"_blank\"\u003e\u003ccode\u003eproxy_buffers\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`zone`* | `off`"
          ],
          "isBlock": false,
          "description_md": "Defines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe `off` parameter disables caching inherited\nfrom the previous configuration level.",
          "description_html": "\u003cp\u003eDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe \u003ccode\u003eoff\u003c/code\u003e parameter disables caching inherited\nfrom the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_background_update",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Allows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n[allow](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_use_stale_updating)\nthe usage of a stale cached response when it is being updated.",
          "description_html": "\u003cp\u003eAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_use_stale_updating\" target=\"_blank\"\u003eallow\u003c/a\u003e\nthe usage of a stale cached response when it is being updated.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_bypass",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\n```\nproxy_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nproxy_cache_bypass $http_pragma    $http_authorization;\n```\nCan be used along with the [`proxy_no_cache`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache) directive.",
          "description_html": "\u003cp\u003eDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nproxy_cache_bypass $http_pragma    $http_authorization;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eCan be used along with the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache\" target=\"_blank\"\u003e\u003ccode\u003eproxy_no_cache\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_convert_head",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the conversion of the “`HEAD`” method\nto “`GET`” for caching.\nWhen the conversion is disabled, the\n[cache key](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key) should be configured\nto include the `$request_method`.",
          "description_html": "\u003cp\u003eEnables or disables the conversion of the “\u003ccode\u003eHEAD\u003c/code\u003e” method\nto “\u003ccode\u003eGET\u003c/code\u003e” for caching.\nWhen the conversion is disabled, the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e should be configured\nto include the \u003ccode\u003e$request_method\u003c/code\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_key",
          "default": "$scheme$proxy_host$request_uri",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`*"
          ],
          "isBlock": false,
          "description_md": "Defines a key for caching, for example\n```\nproxy_cache_key \"$host$request_uri $cookie_user\";\n```\nBy default, the directive’s value is close to the string\n```\nproxy_cache_key $scheme$proxy_host$uri$is_args$args;\n```",
          "description_html": "\u003cp\u003eDefines a key for caching, for example\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cache_key \u0026quot;$host$request_uri $cookie_user\u0026quot;;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eBy default, the directive’s value is close to the string\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cache_key $scheme$proxy_host$uri$is_args$args;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "proxy_cache_lock",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "When enabled, only one request at a time will be allowed to populate\na new cache element identified according to the [`proxy_cache_key`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key)\ndirective by passing a request to a proxied server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n[`proxy_cache_lock_timeout`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock_timeout) directive.",
          "description_html": "\u003cp\u003eWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\" target=\"_blank\"\u003e\u003ccode\u003eproxy_cache_key\u003c/code\u003e\u003c/a\u003e\ndirective by passing a request to a proxied server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock_timeout\" target=\"_blank\"\u003e\u003ccode\u003eproxy_cache_lock_timeout\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_lock_age",
          "default": "5s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "If the last request passed to the proxied server\nfor populating a new cache element\nhas not completed for the specified *`time`*,\none more request may be passed to the proxied server.",
          "description_html": "\u003cp\u003eIf the last request passed to the proxied server\nfor populating a new cache element\nhas not completed for the specified \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e,\none more request may be passed to the proxied server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_lock_timeout",
          "default": "5s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for [`proxy_cache_lock`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock).\nWhen the *`time`* expires,\nthe request will be passed to the proxied server,\nhowever, the response will not be cached.\n\u003e Before 1.7.8, the response could be cached.",
          "description_html": "\u003cp\u003eSets a timeout for \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock\" target=\"_blank\"\u003e\u003ccode\u003eproxy_cache_lock\u003c/code\u003e\u003c/a\u003e.\nWhen the \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e expires,\nthe request will be passed to the proxied server,\nhowever, the response will not be cached.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore 1.7.8, the response could be cached.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "proxy_cache_max_range_offset",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the proxied server\nand the response will not be cached.",
          "description_html": "\u003cp\u003eSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the proxied server\nand the response will not be cached.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_methods",
          "default": "GET HEAD",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`GET` | `HEAD` | `POST` ..."
          ],
          "isBlock": false,
          "description_md": "If the client request method is listed in this directive then\nthe response will be cached.\n“`GET`” and “`HEAD`” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the [`proxy_no_cache`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache) directive.",
          "description_html": "\u003cp\u003eIf the client request method is listed in this directive then\nthe response will be cached.\n“\u003ccode\u003eGET\u003c/code\u003e” and “\u003ccode\u003eHEAD\u003c/code\u003e” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache\" target=\"_blank\"\u003e\u003ccode\u003eproxy_no_cache\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_min_uses",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* of requests after which the response\nwill be cached.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e of requests after which the response\nwill be cached.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_path",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`path`* [`levels`=*`levels`*] [`use_temp_path`=`on`|`off`] `keys_zone`=*`name`*:*`size`* [`inactive`=*`time`*] [`max_size`=*`size`*] [`min_free`=*`size`*] [`manager_files`=*`number`*] [`manager_sleep`=*`time`*] [`manager_threshold`=*`time`*] [`loader_files`=*`number`*] [`loader_sleep`=*`time`*] [`loader_threshold`=*`time`*] [`purger`=`on`|`off`] [`purger_files`=*`number`*] [`purger_sleep`=*`time`*] [`purger_threshold`=*`time`*]"
          ],
          "isBlock": false,
          "description_md": "Sets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n[cache key](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key).\nThe `levels` parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n```\nproxy_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n```\nfile names in a cache will look like this:\n```\n/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n```\n\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nThe directory for temporary files is set based on\nthe `use_temp_path` parameter (1.7.10).\nIf this parameter is omitted or set to the value `on`,\nthe directory set by the [`proxy_temp_path`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path) directive\nfor the given location will be used.\nIf the value is set to `off`,\ntemporary files will be put directly in the cache directory.\n\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose *`name`* and *`size`*\nare configured by the `keys_zone` parameter.\nOne megabyte zone can store about 8 thousand keys.\n\u003e As part of\n\u003e [commercial subscription](https://nginx.com/products/),\n\u003e the shared memory zone also stores extended\n\u003e cache [information](https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_),\n\u003e thus, it is required to specify a larger zone size for the same number of keys.\n\u003e For example,\n\u003e one megabyte zone can store about 4 thousand keys.\n\nCached data that are not accessed during the time specified by the\n`inactive` parameter get removed from the cache\nregardless of their freshness.\nBy default, `inactive` is set to 10 minutes.\n\nThe special “cache manager” process monitors the maximum cache size set\nby the `max_size` parameter,\nand the minimum amount of free space set\nby the `min_free` (1.19.1) parameter\non the file system with cache.\nWhen the size is exceeded or there is not enough free space,\nit removes the least recently used data.\nThe data is removed in iterations configured by\n`manager_files`,\n`manager_threshold`, and\n`manager_sleep` parameters (1.11.5).\nDuring one iteration no more than `manager_files` items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n`manager_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `manager_sleep`\nparameter (by default, 50 milliseconds) is made.\n\nA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than `loader_files` items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n`loader_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `loader_sleep`\nparameter (by default, 50 milliseconds) is made.\n\nAdditionally,\nthe following parameters are available as part of our\n[commercial subscription](https://nginx.com/products/):\n\n- `purger`=`on`|`off`\n\n    Instructs whether cache entries that match a\n    [wildcard key](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_purge)\n    will be removed from the disk by the cache purger (1.7.12).\n    Setting the parameter to `on`\n    (default is `off`)\n    will activate the “cache purger” process that\n    permanently iterates through all cache entries\n    and deletes the entries that match the wildcard key.\n- `purger_files`=*`number`*\n\n    Sets the number of items that will be scanned during one iteration (1.7.12).\n    By default, `purger_files` is set to 10.\n- `purger_threshold`=*`number`*\n\n    Sets the duration of one iteration (1.7.12).\n    By default, `purger_threshold` is set to 50 milliseconds.\n- `purger_sleep`=*`number`*\n\n    Sets a pause between iterations (1.7.12).\n    By default, `purger_sleep` is set to 50 milliseconds.\n\n\u003e In versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\n\u003e Previously cached responses will be considered invalid\n\u003e after upgrading to a newer nginx version.",
          "description_html": "\u003cp\u003eSets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e.\nThe \u003ccode\u003elevels\u003c/code\u003e parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003efile names in a cache will look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nThe directory for temporary files is set based on\nthe \u003ccode\u003euse_temp_path\u003c/code\u003e parameter (1.7.10).\nIf this parameter is omitted or set to the value \u003ccode\u003eon\u003c/code\u003e,\nthe directory set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path\" target=\"_blank\"\u003e\u003ccode\u003eproxy_temp_path\u003c/code\u003e\u003c/a\u003e directive\nfor the given location will be used.\nIf the value is set to \u003ccode\u003eoff\u003c/code\u003e,\ntemporary files will be put directly in the cache directory.\u003c/p\u003e\n\n\u003cp\u003eIn addition, all active keys and information about data are stored\nin a shared memory zone, whose \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\nare configured by the \u003ccode\u003ekeys_zone\u003c/code\u003e parameter.\nOne megabyte zone can store about 8 thousand keys.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs part of\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e,\nthe shared memory zone also stores extended\ncache \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_\" target=\"_blank\"\u003einformation\u003c/a\u003e,\nthus, it is required to specify a larger zone size for the same number of keys.\nFor example,\none megabyte zone can store about 4 thousand keys.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCached data that are not accessed during the time specified by the\n\u003ccode\u003einactive\u003c/code\u003e parameter get removed from the cache\nregardless of their freshness.\nBy default, \u003ccode\u003einactive\u003c/code\u003e is set to 10 minutes.\u003c/p\u003e\n\n\u003cp\u003eThe special “cache manager” process monitors the maximum cache size set\nby the \u003ccode\u003emax_size\u003c/code\u003e parameter,\nand the minimum amount of free space set\nby the \u003ccode\u003emin_free\u003c/code\u003e (1.19.1) parameter\non the file system with cache.\nWhen the size is exceeded or there is not enough free space,\nit removes the least recently used data.\nThe data is removed in iterations configured by\n\u003ccode\u003emanager_files\u003c/code\u003e,\n\u003ccode\u003emanager_threshold\u003c/code\u003e, and\n\u003ccode\u003emanager_sleep\u003c/code\u003e parameters (1.11.5).\nDuring one iteration no more than \u003ccode\u003emanager_files\u003c/code\u003e items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n\u003ccode\u003emanager_threshold\u003c/code\u003e parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the \u003ccode\u003emanager_sleep\u003c/code\u003e\nparameter (by default, 50 milliseconds) is made.\u003c/p\u003e\n\n\u003cp\u003eA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than \u003ccode\u003eloader_files\u003c/code\u003e items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n\u003ccode\u003eloader_threshold\u003c/code\u003e parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the \u003ccode\u003eloader_sleep\u003c/code\u003e\nparameter (by default, 50 milliseconds) is made.\u003c/p\u003e\n\n\u003cp\u003eAdditionally,\nthe following parameters are available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger\u003c/code\u003e=\u003ccode\u003eon\u003c/code\u003e|\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eInstructs whether cache entries that match a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_purge\" target=\"_blank\"\u003ewildcard key\u003c/a\u003e\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to \u003ccode\u003eon\u003c/code\u003e\n(default is \u003ccode\u003eoff\u003c/code\u003e)\nwill activate the “cache purger” process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_files\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, \u003ccode\u003epurger_files\u003c/code\u003e is set to 10.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_threshold\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets the duration of one iteration (1.7.12).\nBy default, \u003ccode\u003epurger_threshold\u003c/code\u003e is set to 50 milliseconds.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_sleep\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets a pause between iterations (1.7.12).\nBy default, \u003ccode\u003epurger_sleep\u003c/code\u003e is set to 50 milliseconds.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\nPreviously cached responses will be considered invalid\nafter upgrading to a newer nginx version.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "proxy_cache_purge",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "string ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n[cache key](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key) is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n\nIf the [cache key](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key) of a purge request ends\nwith an asterisk (“`*`”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either [inactivity](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path),\nor processed by the [cache purger](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#purger) (1.7.12),\nor a client attempts to access them.\n\nExample configuration:\n```\nproxy_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        proxy_pass http://backend;\n        proxy_cache cache_zone;\n        proxy_cache_key $uri;\n        proxy_cache_purge $purge_method;\n    }\n}\n```\n\u003e This functionality is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e of a purge request ends\nwith an asterisk (“\u003ccode\u003e*\u003c/code\u003e”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path\" target=\"_blank\"\u003einactivity\u003c/a\u003e,\nor processed by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#purger\" target=\"_blank\"\u003ecache purger\u003c/a\u003e (1.7.12),\nor a client attempts to access them.\u003c/p\u003e\n\n\u003cp\u003eExample configuration:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        proxy_pass http://backend;\n        proxy_cache cache_zone;\n        proxy_cache_key $uri;\n        proxy_cache_purge $purge_method;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis functionality is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "proxy_cache_revalidate",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables revalidation of expired cache items using conditional requests with\nthe \"If-Modified-Since\" and \"If-None-Match\"\nheader fields.",
          "description_html": "\u003cp\u003eEnables revalidation of expired cache items using conditional requests with\nthe \u0026ldquo;If-Modified-Since\u0026rdquo; and \u0026ldquo;If-None-Match\u0026rdquo;\nheader fields.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_use_stale",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`error` | `timeout` | `invalid_header` | `updating` | `http_500` | `http_502` | `http_503` | `http_504` | `http_403` | `http_404` | `http_429` | `off` ..."
          ],
          "isBlock": false,
          "description_md": "Determines in which cases a stale cached response can be used\nduring communication with the proxied server.\nThe directive’s parameters match the parameters of the\n[`proxy_next_upstream`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream) directive.\n\nThe `error` parameter also permits\nusing a stale cached response if a proxied server to process a request\ncannot be selected.\n\nAdditionally, the `updating` parameter permits\nusing a stale cached response if it is currently being updated.\nThis allows minimizing the number of accesses to proxied servers\nwhen updating cached data.\n\nUsing a stale cached response\ncan also be enabled directly in the response header\nfor a specified number of seconds after the response became stale (1.11.10).\nThis has lower priority than using the directive parameters.\n- The\n    “[stale-while-revalidate](https://datatracker.ietf.org/doc/html/rfc5861#section-3)”\n    extension of the \"Cache-Control\" header field permits\n    using a stale cached response if it is currently being updated.\n- The\n    “[stale-if-error](https://datatracker.ietf.org/doc/html/rfc5861#section-4)”\n    extension of the \"Cache-Control\" header field permits\n    using a stale cached response in case of an error.\n\nTo minimize the number of accesses to proxied servers when\npopulating a new cache element, the [`proxy_cache_lock`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock)\ndirective can be used.",
          "description_html": "\u003cp\u003eDetermines in which cases a stale cached response can be used\nduring communication with the proxied server.\nThe directive’s parameters match the parameters of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\" target=\"_blank\"\u003e\u003ccode\u003eproxy_next_upstream\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eerror\u003c/code\u003e parameter also permits\nusing a stale cached response if a proxied server to process a request\ncannot be selected.\u003c/p\u003e\n\n\u003cp\u003eAdditionally, the \u003ccode\u003eupdating\u003c/code\u003e parameter permits\nusing a stale cached response if it is currently being updated.\nThis allows minimizing the number of accesses to proxied servers\nwhen updating cached data.\u003c/p\u003e\n\n\u003cp\u003eUsing a stale cached response\ncan also be enabled directly in the response header\nfor a specified number of seconds after the response became stale (1.11.10).\nThis has lower priority than using the directive parameters.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe\n“\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5861#section-3\" target=\"_blank\"\u003estale-while-revalidate\u003c/a\u003e”\nextension of the \u0026ldquo;Cache-Control\u0026rdquo; header field permits\nusing a stale cached response if it is currently being updated.\u003c/li\u003e\n\u003cli\u003eThe\n“\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5861#section-4\" target=\"_blank\"\u003estale-if-error\u003c/a\u003e”\nextension of the \u0026ldquo;Cache-Control\u0026rdquo; header field permits\nusing a stale cached response in case of an error.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo minimize the number of accesses to proxied servers when\npopulating a new cache element, the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock\" target=\"_blank\"\u003e\u003ccode\u003eproxy_cache_lock\u003c/code\u003e\u003c/a\u003e\ndirective can be used.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cache_valid",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "[*`code`* ...] *`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets caching time for different response codes.\nFor example, the following directives\n```\nproxy_cache_valid 200 302 10m;\nproxy_cache_valid 404      1m;\n```\nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n\nIf only caching *`time`* is specified\n```\nproxy_cache_valid 5m;\n```\nthen only 200, 301, and 302 responses are cached.\n\nIn addition, the `any` parameter can be specified\nto cache any responses:\n```\nproxy_cache_valid 200 302 10m;\nproxy_cache_valid 301      1h;\nproxy_cache_valid any      1m;\n```\n\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n- The \"X-Accel-Expires\" header field sets caching time of a\n    response in seconds.\n    The zero value disables caching for a response.\n    If the value starts with the `@` prefix, it sets an absolute\n    time in seconds since Epoch, up to which the response may be cached.\n- If the header does not include the \"X-Accel-Expires\" field,\n    parameters of caching may be set in the header fields\n    \"Expires\" or \"Cache-Control\".\n- If the header includes the \"Set-Cookie\" field, such a\n    response will not be cached.\n- If the header includes the \"Vary\" field\n    with the special value “`*`”, such a\n    response will not be cached (1.7.7).\n    If the header includes the \"Vary\" field\n    with another value, such a response will be cached\n    taking into account the corresponding request header fields (1.7.7).\n\nProcessing of one or more of these response header fields can be disabled\nusing the [`proxy_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers) directive.",
          "description_html": "\u003cp\u003eSets caching time for different response codes.\nFor example, the following directives\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cache_valid 200 302 10m;\nproxy_cache_valid 404      1m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\u003c/p\u003e\n\n\u003cp\u003eIf only caching \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e is specified\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cache_valid 5m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ethen only 200, 301, and 302 responses are cached.\u003c/p\u003e\n\n\u003cp\u003eIn addition, the \u003ccode\u003eany\u003c/code\u003e parameter can be specified\nto cache any responses:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cache_valid 200 302 10m;\nproxy_cache_valid 301      1h;\nproxy_cache_valid any      1m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe \u0026ldquo;X-Accel-Expires\u0026rdquo; header field sets caching time of a\nresponse in seconds.\nThe zero value disables caching for a response.\nIf the value starts with the \u003ccode\u003e@\u003c/code\u003e prefix, it sets an absolute\ntime in seconds since Epoch, up to which the response may be cached.\u003c/li\u003e\n\u003cli\u003eIf the header does not include the \u0026ldquo;X-Accel-Expires\u0026rdquo; field,\nparameters of caching may be set in the header fields\n\u0026ldquo;Expires\u0026rdquo; or \u0026ldquo;Cache-Control\u0026rdquo;.\u003c/li\u003e\n\u003cli\u003eIf the header includes the \u0026ldquo;Set-Cookie\u0026rdquo; field, such a\nresponse will not be cached.\u003c/li\u003e\n\u003cli\u003eIf the header includes the \u0026ldquo;Vary\u0026rdquo; field\nwith the special value “\u003ccode\u003e*\u003c/code\u003e”, such a\nresponse will not be cached (1.7.7).\nIf the header includes the \u0026ldquo;Vary\u0026rdquo; field\nwith another value, such a response will be cached\ntaking into account the corresponding request header fields (1.7.7).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eProcessing of one or more of these response header fields can be disabled\nusing the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003eproxy_ignore_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_connect_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for establishing a connection with a proxied server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.",
          "description_html": "\u003cp\u003eDefines a timeout for establishing a connection with a proxied server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cookie_domain",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`off`",
            "*`domain`* *`replacement`*"
          ],
          "isBlock": false,
          "description_md": "Sets a text that should be changed in the `domain`\nattribute of the \"Set-Cookie\" header fields of a\nproxied server response.\nSuppose a proxied server returned the \"Set-Cookie\"\nheader field with the attribute\n“`domain=localhost`”.\nThe directive\n```\nproxy_cookie_domain localhost example.org;\n```\nwill rewrite this attribute to\n“`domain=example.org`”.\n\nA dot at the beginning of the *`domain`* and\n*`replacement`* strings and the `domain`\nattribute is ignored.\nMatching is case-insensitive.\n\nThe *`domain`* and *`replacement`* strings\ncan contain variables:\n```\nproxy_cookie_domain www.$host $host;\n```\n\nThe directive can also be specified using regular expressions.\nIn this case, *`domain`* should start from\nthe “`~`” symbol.\nA regular expression can contain named and positional captures,\nand *`replacement`* can reference them:\n```\nproxy_cookie_domain ~\\.(?P\u003csl_domain\u003e[-0-9a-z]+\\.[a-z]+)$ $sl_domain;\n```\n\nSeveral `proxy_cookie_domain` directives\ncan be specified on the same level:\n```\nproxy_cookie_domain localhost example.org;\nproxy_cookie_domain ~\\.([a-z]+\\.[a-z]+)$ $1;\n```\nIf several directives can be applied to the cookie,\nthe first matching directive will be chosen.\n\nThe `off` parameter cancels the effect\nof the `proxy_cookie_domain` directives\ninherited from the previous configuration level.",
          "description_html": "\u003cp\u003eSets a text that should be changed in the \u003ccode\u003edomain\u003c/code\u003e\nattribute of the \u0026ldquo;Set-Cookie\u0026rdquo; header fields of a\nproxied server response.\nSuppose a proxied server returned the \u0026ldquo;Set-Cookie\u0026rdquo;\nheader field with the attribute\n“\u003ccode\u003edomain=localhost\u003c/code\u003e”.\nThe directive\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cookie_domain localhost example.org;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ewill rewrite this attribute to\n“\u003ccode\u003edomain=example.org\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eA dot at the beginning of the \u003cem\u003e\u003ccode\u003edomain\u003c/code\u003e\u003c/em\u003e and\n\u003cem\u003e\u003ccode\u003ereplacement\u003c/code\u003e\u003c/em\u003e strings and the \u003ccode\u003edomain\u003c/code\u003e\nattribute is ignored.\nMatching is case-insensitive.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cem\u003e\u003ccode\u003edomain\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003ereplacement\u003c/code\u003e\u003c/em\u003e strings\ncan contain variables:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cookie_domain www.$host $host;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe directive can also be specified using regular expressions.\nIn this case, \u003cem\u003e\u003ccode\u003edomain\u003c/code\u003e\u003c/em\u003e should start from\nthe “\u003ccode\u003e~\u003c/code\u003e” symbol.\nA regular expression can contain named and positional captures,\nand \u003cem\u003e\u003ccode\u003ereplacement\u003c/code\u003e\u003c/em\u003e can reference them:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cookie_domain ~\\.(?P\u0026lt;sl_domain\u0026gt;[-0-9a-z]+\\.[a-z]+)$ $sl_domain;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003eproxy_cookie_domain\u003c/code\u003e directives\ncan be specified on the same level:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cookie_domain localhost example.org;\nproxy_cookie_domain ~\\.([a-z]+\\.[a-z]+)$ $1;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf several directives can be applied to the cookie,\nthe first matching directive will be chosen.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoff\u003c/code\u003e parameter cancels the effect\nof the \u003ccode\u003eproxy_cookie_domain\u003c/code\u003e directives\ninherited from the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cookie_flags",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`off` | *`cookie`* [*`flag`* ...]"
          ],
          "isBlock": false,
          "description_md": "Sets one or more flags for the cookie.\nThe *`cookie`* can contain text, variables, and their combinations.\nThe *`flag`*\ncan contain text, variables, and their combinations (1.19.8).\nThe\n`secure`,\n`httponly`,\n`samesite=strict`,\n`samesite=lax`,\n`samesite=none`\nparameters add the corresponding flags.\nThe\n`nosecure`,\n`nohttponly`,\n`nosamesite`\nparameters remove the corresponding flags.\n\nThe cookie can also be specified using regular expressions.\nIn this case, *`cookie`* should start from\nthe “`~`” symbol.\n\nSeveral `proxy_cookie_flags` directives\ncan be specified on the same configuration level:\n```\nproxy_cookie_flags one httponly;\nproxy_cookie_flags ~ nosecure samesite=strict;\n```\nIf several directives can be applied to the cookie,\nthe first matching directive will be chosen.\nIn the example, the `httponly` flag\nis added to the cookie `one`,\nfor all other cookies\nthe `samesite=strict` flag is added and\nthe `secure` flag is deleted.\n\nThe `off` parameter cancels the effect\nof the `proxy_cookie_flags` directives\ninherited from the previous configuration level.",
          "description_html": "\u003cp\u003eSets one or more flags for the cookie.\nThe \u003cem\u003e\u003ccode\u003ecookie\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combinations.\nThe \u003cem\u003e\u003ccode\u003eflag\u003c/code\u003e\u003c/em\u003e\ncan contain text, variables, and their combinations (1.19.8).\nThe\n\u003ccode\u003esecure\u003c/code\u003e,\n\u003ccode\u003ehttponly\u003c/code\u003e,\n\u003ccode\u003esamesite=strict\u003c/code\u003e,\n\u003ccode\u003esamesite=lax\u003c/code\u003e,\n\u003ccode\u003esamesite=none\u003c/code\u003e\nparameters add the corresponding flags.\nThe\n\u003ccode\u003enosecure\u003c/code\u003e,\n\u003ccode\u003enohttponly\u003c/code\u003e,\n\u003ccode\u003enosamesite\u003c/code\u003e\nparameters remove the corresponding flags.\u003c/p\u003e\n\n\u003cp\u003eThe cookie can also be specified using regular expressions.\nIn this case, \u003cem\u003e\u003ccode\u003ecookie\u003c/code\u003e\u003c/em\u003e should start from\nthe “\u003ccode\u003e~\u003c/code\u003e” symbol.\u003c/p\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003eproxy_cookie_flags\u003c/code\u003e directives\ncan be specified on the same configuration level:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cookie_flags one httponly;\nproxy_cookie_flags ~ nosecure samesite=strict;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf several directives can be applied to the cookie,\nthe first matching directive will be chosen.\nIn the example, the \u003ccode\u003ehttponly\u003c/code\u003e flag\nis added to the cookie \u003ccode\u003eone\u003c/code\u003e,\nfor all other cookies\nthe \u003ccode\u003esamesite=strict\u003c/code\u003e flag is added and\nthe \u003ccode\u003esecure\u003c/code\u003e flag is deleted.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoff\u003c/code\u003e parameter cancels the effect\nof the \u003ccode\u003eproxy_cookie_flags\u003c/code\u003e directives\ninherited from the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_cookie_path",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`off`",
            "*`path`* *`replacement`*"
          ],
          "isBlock": false,
          "description_md": "Sets a text that should be changed in the `path`\nattribute of the \"Set-Cookie\" header fields of a\nproxied server response.\nSuppose a proxied server returned the \"Set-Cookie\"\nheader field with the attribute\n“`path=/two/some/uri/`”.\nThe directive\n```\nproxy_cookie_path /two/ /;\n```\nwill rewrite this attribute to\n“`path=/some/uri/`”.\n\nThe *`path`* and *`replacement`* strings\ncan contain variables:\n```\nproxy_cookie_path $uri /some$uri;\n```\n\nThe directive can also be specified using regular expressions.\nIn this case, *`path`* should either start from\nthe “`~`” symbol for a case-sensitive matching,\nor from the “`~*`” symbols for case-insensitive\nmatching.\nThe regular expression can contain named and positional captures,\nand *`replacement`* can reference them:\n```\nproxy_cookie_path ~*^/user/([^/]+) /u/$1;\n```\n\nSeveral `proxy_cookie_path` directives\ncan be specified on the same level:\n```\nproxy_cookie_path /one/ /;\nproxy_cookie_path / /two/;\n```\nIf several directives can be applied to the cookie,\nthe first matching directive will be chosen.\n\nThe `off` parameter cancels the effect\nof the `proxy_cookie_path` directives\ninherited from the previous configuration level.",
          "description_html": "\u003cp\u003eSets a text that should be changed in the \u003ccode\u003epath\u003c/code\u003e\nattribute of the \u0026ldquo;Set-Cookie\u0026rdquo; header fields of a\nproxied server response.\nSuppose a proxied server returned the \u0026ldquo;Set-Cookie\u0026rdquo;\nheader field with the attribute\n“\u003ccode\u003epath=/two/some/uri/\u003c/code\u003e”.\nThe directive\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cookie_path /two/ /;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ewill rewrite this attribute to\n“\u003ccode\u003epath=/some/uri/\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cem\u003e\u003ccode\u003epath\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003ereplacement\u003c/code\u003e\u003c/em\u003e strings\ncan contain variables:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cookie_path $uri /some$uri;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe directive can also be specified using regular expressions.\nIn this case, \u003cem\u003e\u003ccode\u003epath\u003c/code\u003e\u003c/em\u003e should either start from\nthe “\u003ccode\u003e~\u003c/code\u003e” symbol for a case-sensitive matching,\nor from the “\u003ccode\u003e~*\u003c/code\u003e” symbols for case-insensitive\nmatching.\nThe regular expression can contain named and positional captures,\nand \u003cem\u003e\u003ccode\u003ereplacement\u003c/code\u003e\u003c/em\u003e can reference them:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cookie_path ~*^/user/([^/]+) /u/$1;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003eproxy_cookie_path\u003c/code\u003e directives\ncan be specified on the same level:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_cookie_path /one/ /;\nproxy_cookie_path / /two/;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf several directives can be applied to the cookie,\nthe first matching directive will be chosen.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoff\u003c/code\u003e parameter cancels the effect\nof the \u003ccode\u003eproxy_cookie_path\u003c/code\u003e directives\ninherited from the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_force_ranges",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables byte-range support\nfor both cached and uncached responses from the proxied server\nregardless of the \"Accept-Ranges\" field in these responses.",
          "description_html": "\u003cp\u003eEnables byte-range support\nfor both cached and uncached responses from the proxied server\nregardless of the \u0026ldquo;Accept-Ranges\u0026rdquo; field in these responses.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_headers_hash_bucket_size",
          "default": "64",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the bucket *`size`* for hash tables\nused by the [`proxy_hide_header`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header) and [`proxy_set_header`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header)\ndirectives.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the bucket \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e for hash tables\nused by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header\" target=\"_blank\"\u003e\u003ccode\u003eproxy_hide_header\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\" target=\"_blank\"\u003e\u003ccode\u003eproxy_set_header\u003c/code\u003e\u003c/a\u003e\ndirectives.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_headers_hash_max_size",
          "default": "512",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`size`* of hash tables\nused by the [`proxy_hide_header`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header) and [`proxy_set_header`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header)\ndirectives.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of hash tables\nused by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header\" target=\"_blank\"\u003e\u003ccode\u003eproxy_hide_header\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\" target=\"_blank\"\u003e\u003ccode\u003eproxy_set_header\u003c/code\u003e\u003c/a\u003e\ndirectives.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_hide_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`*"
          ],
          "isBlock": false,
          "description_md": "By default,\nnginx does not pass the header fields \"Date\",\n\"Server\", \"X-Pad\", and\n\"X-Accel-...\" from the response of a proxied\nserver to a client.\nThe `proxy_hide_header` directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe [`proxy_pass_header`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_header) directive can be used.",
          "description_html": "\u003cp\u003eBy default,\nnginx does not pass the header fields \u0026ldquo;Date\u0026rdquo;,\n\u0026ldquo;Server\u0026rdquo;, \u0026ldquo;X-Pad\u0026rdquo;, and\n\u0026ldquo;X-Accel-\u0026hellip;\u0026rdquo; from the response of a proxied\nserver to a client.\nThe \u003ccode\u003eproxy_hide_header\u003c/code\u003e directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_header\" target=\"_blank\"\u003e\u003ccode\u003eproxy_pass_header\u003c/code\u003e\u003c/a\u003e directive can be used.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_http_version",
          "default": "1.0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`1.0` | `1.1`"
          ],
          "isBlock": false,
          "description_md": "Sets the HTTP protocol version for proxying.\nBy default, version 1.0 is used.\nVersion 1.1 is recommended for use with\n[`keepalive`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive)\nconnections and\n[NTLM authentication](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ntlm).",
          "description_html": "\u003cp\u003eSets the HTTP protocol version for proxying.\nBy default, version 1.0 is used.\nVersion 1.1 is recommended for use with\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive\" target=\"_blank\"\u003e\u003ccode\u003ekeepalive\u003c/code\u003e\u003c/a\u003e\nconnections and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ntlm\" target=\"_blank\"\u003eNTLM authentication\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ignore_client_abort",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether the connection with a proxied server should be\nclosed when a client closes the connection without waiting\nfor a response.",
          "description_html": "\u003cp\u003eDetermines whether the connection with a proxied server should be\nclosed when a client closes the connection without waiting\nfor a response.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ignore_headers",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`* ..."
          ],
          "isBlock": false,
          "description_md": "Disables processing of certain response header fields from the proxied server.\nThe following fields can be ignored: \"X-Accel-Redirect\",\n\"X-Accel-Expires\", \"X-Accel-Limit-Rate\" (1.1.6),\n\"X-Accel-Buffering\" (1.1.6),\n\"X-Accel-Charset\" (1.1.6), \"Expires\",\n\"Cache-Control\", \"Set-Cookie\" (0.8.44),\nand \"Vary\" (1.7.7).\n\nIf not disabled, processing of these header fields has the following\neffect:\n- \"X-Accel-Expires\", \"Expires\",\n    \"Cache-Control\", \"Set-Cookie\",\n    and \"Vary\"\n    set the parameters of response [caching](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_valid);\n- \"X-Accel-Redirect\" performs an\n    [internal redirect](https://nginx.org/en/docs/http/ngx_http_core_module.html#internal) to the specified URI;\n- \"X-Accel-Limit-Rate\" sets the\n    [rate limit](https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_rate) for transmission of a response to a client;\n- \"X-Accel-Buffering\" enables or disables\n    [buffering](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering) of a response;\n- \"X-Accel-Charset\" sets the desired\n    [`charset`](https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset)\n    of a response.",
          "description_html": "\u003cp\u003eDisables processing of certain response header fields from the proxied server.\nThe following fields can be ignored: \u0026ldquo;X-Accel-Redirect\u0026rdquo;,\n\u0026ldquo;X-Accel-Expires\u0026rdquo;, \u0026ldquo;X-Accel-Limit-Rate\u0026rdquo; (1.1.6),\n\u0026ldquo;X-Accel-Buffering\u0026rdquo; (1.1.6),\n\u0026ldquo;X-Accel-Charset\u0026rdquo; (1.1.6), \u0026ldquo;Expires\u0026rdquo;,\n\u0026ldquo;Cache-Control\u0026rdquo;, \u0026ldquo;Set-Cookie\u0026rdquo; (0.8.44),\nand \u0026ldquo;Vary\u0026rdquo; (1.7.7).\u003c/p\u003e\n\n\u003cp\u003eIf not disabled, processing of these header fields has the following\neffect:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Expires\u0026rdquo;, \u0026ldquo;Expires\u0026rdquo;,\n\u0026ldquo;Cache-Control\u0026rdquo;, \u0026ldquo;Set-Cookie\u0026rdquo;,\nand \u0026ldquo;Vary\u0026rdquo;\nset the parameters of response \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_valid\" target=\"_blank\"\u003ecaching\u003c/a\u003e;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Redirect\u0026rdquo; performs an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#internal\" target=\"_blank\"\u003einternal redirect\u003c/a\u003e to the specified URI;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Limit-Rate\u0026rdquo; sets the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_rate\" target=\"_blank\"\u003erate limit\u003c/a\u003e for transmission of a response to a client;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Buffering\u0026rdquo; enables or disables\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of a response;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Charset\u0026rdquo; sets the desired\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\" target=\"_blank\"\u003e\u003ccode\u003echarset\u003c/code\u003e\u003c/a\u003e\nof a response.\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "proxy_intercept_errors",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether proxied responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the [`error_page`](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page) directive.",
          "description_html": "\u003cp\u003eDetermines whether proxied responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\" target=\"_blank\"\u003e\u003ccode\u003eerror_page\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_limit_rate",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`rate`*"
          ],
          "isBlock": false,
          "description_md": "Limits the speed of reading the response from the proxied server.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the proxied server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n[buffering](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering) of responses from the proxied\nserver is enabled.",
          "description_html": "\u003cp\u003eLimits the speed of reading the response from the proxied server.\nThe \u003cem\u003e\u003ccode\u003erate\u003c/code\u003e\u003c/em\u003e is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the proxied server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the proxied\nserver is enabled.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_max_temp_file_size",
          "default": "1024m",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "When [buffering](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering) of responses from the proxied\nserver is enabled, and the whole response does not fit into the buffers\nset by the [`proxy_buffer_size`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size) and [`proxy_buffers`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers)\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum *`size`* of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the [`proxy_temp_file_write_size`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size) directive.\n\nThe zero value disables buffering of responses to temporary files.\n\n\u003e This restriction does not apply to responses\n\u003e that will be [cached](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache)\n\u003e or [stored](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_store) on disk.",
          "description_html": "\u003cp\u003eWhen \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the proxied\nserver is enabled, and the whole response does not fit into the buffers\nset by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003eproxy_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\" target=\"_blank\"\u003e\u003ccode\u003eproxy_buffers\u003c/code\u003e\u003c/a\u003e\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size\" target=\"_blank\"\u003e\u003ccode\u003eproxy_temp_file_write_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eThe zero value disables buffering of responses to temporary files.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis restriction does not apply to responses\nthat will be \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache\" target=\"_blank\"\u003ecached\u003c/a\u003e\nor \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_store\" target=\"_blank\"\u003estored\u003c/a\u003e on disk.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "proxy_method",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`method`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the HTTP *`method`* to use in requests forwarded\nto the proxied server instead of the method from the client request.\nParameter value can contain variables (1.11.6).",
          "description_html": "\u003cp\u003eSpecifies the HTTP \u003cem\u003e\u003ccode\u003emethod\u003c/code\u003e\u003c/em\u003e to use in requests forwarded\nto the proxied server instead of the method from the client request.\nParameter value can contain variables (1.11.6).\u003c/p\u003e\n"
        },
        {
          "name": "proxy_next_upstream",
          "default": "error timeout",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`error` | `timeout` | `invalid_header` | `http_500` | `http_502` | `http_503` | `http_504` | `http_403` | `http_404` | `http_429` | `non_idempotent` | `off` ..."
          ],
          "isBlock": false,
          "description_md": "Specifies in which cases a request should be passed to the next server:\n- `error`\n\n    an error occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `timeout`\n\n    a timeout has occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `invalid_header`\n\n    a server returned an empty or invalid response;\n- `http_500`\n\n    a server returned a response with the code 500;\n- `http_502`\n\n    a server returned a response with the code 502;\n- `http_503`\n\n    a server returned a response with the code 503;\n- `http_504`\n\n    a server returned a response with the code 504;\n- `http_403`\n\n    a server returned a response with the code 403;\n- `http_404`\n\n    a server returned a response with the code 404;\n- `http_429`\n\n    a server returned a response with the code 429 (1.11.13);\n- `non_idempotent`\n\n    normally, requests with a\n    [non-idempotent](https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2)\n    method\n    (`POST`, `LOCK`, `PATCH`)\n    are not passed to the next server\n    if a request has been sent to an upstream server (1.9.13);\n    enabling this option explicitly allows retrying such requests;\n- `off`\n\n    disables passing a request to the next server.\n\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n\nThe directive also defines what is considered an\n[unsuccessful attempt](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails) of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_header` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of `http_500`, `http_502`,\n`http_503`, `http_504`,\nand `http_429` are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of `http_403` and `http_404`\nare never considered unsuccessful attempts.\n\nPassing a request to the next server can be limited by\n[the number of tries](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream_tries)\nand by [time](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream_timeout).",
          "description_html": "\u003cp\u003eSpecifies in which cases a request should be passed to the next server:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eerror\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ean error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einvalid_header\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned an empty or invalid response;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_500\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 500;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_502\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 502;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_503\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 503;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_504\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 504;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_403\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 403;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_404\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 404;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_429\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 429 (1.11.13);\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enon_idempotent\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003enormally, requests with a\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\" target=\"_blank\"\u003enon-idempotent\u003c/a\u003e\nmethod\n(\u003ccode\u003ePOST\u003c/code\u003e, \u003ccode\u003eLOCK\u003c/code\u003e, \u003ccode\u003ePATCH\u003c/code\u003e)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables passing a request to the next server.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\u003c/p\u003e\n\n\u003cp\u003eThe directive also defines what is considered an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\" target=\"_blank\"\u003eunsuccessful attempt\u003c/a\u003e of communication with a server.\nThe cases of \u003ccode\u003eerror\u003c/code\u003e, \u003ccode\u003etimeout\u003c/code\u003e and\n\u003ccode\u003einvalid_header\u003c/code\u003e are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of \u003ccode\u003ehttp_500\u003c/code\u003e, \u003ccode\u003ehttp_502\u003c/code\u003e,\n\u003ccode\u003ehttp_503\u003c/code\u003e, \u003ccode\u003ehttp_504\u003c/code\u003e,\nand \u003ccode\u003ehttp_429\u003c/code\u003e are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of \u003ccode\u003ehttp_403\u003c/code\u003e and \u003ccode\u003ehttp_404\u003c/code\u003e\nare never considered unsuccessful attempts.\u003c/p\u003e\n\n\u003cp\u003ePassing a request to the next server can be limited by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream_tries\" target=\"_blank\"\u003ethe number of tries\u003c/a\u003e\nand by \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream_timeout\" target=\"_blank\"\u003etime\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_next_upstream_timeout",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Limits the time during which a request can be passed to the\n[next server](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the time during which a request can be passed to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_next_upstream_tries",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Limits the number of possible tries for passing a request to the\n[next server](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the number of possible tries for passing a request to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_no_cache",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\n```\nproxy_no_cache $cookie_nocache $arg_nocache$arg_comment;\nproxy_no_cache $http_pragma    $http_authorization;\n```\nCan be used along with the [`proxy_cache_bypass`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_bypass) directive.",
          "description_html": "\u003cp\u003eDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_no_cache $cookie_nocache $arg_nocache$arg_comment;\nproxy_no_cache $http_pragma    $http_authorization;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eCan be used along with the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_bypass\" target=\"_blank\"\u003e\u003ccode\u003eproxy_cache_bypass\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_pass",
          "default": "",
          "contexts": [
            "location",
            "if in location",
            "limit_except"
          ],
          "syntax": [
            "*`URL`*"
          ],
          "isBlock": false,
          "description_md": "Sets the protocol and address of a proxied server and an optional URI\nto which a location should be mapped.\nAs a protocol, “`http`” or “`https`”\ncan be specified.\nThe address can be specified as a domain name or IP address,\nand an optional port:\n```\nproxy_pass http://localhost:8000/uri/;\n```\nor as a UNIX-domain socket path specified after the word\n“`unix`” and enclosed in colons:\n```\nproxy_pass http://unix:/tmp/backend.socket:/uri/;\n```\n\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n[server group](https://nginx.org/en/docs/http/ngx_http_upstream_module.html).\n\nParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described server groups,\nand, if not found, is determined using a\n[`resolver`](https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver).\n\nA request URI is passed to the server as follows:\n- If the `proxy_pass` directive is specified with a URI,\n    then when a request is passed to the server, the part of a\n    [normalized](https://nginx.org/en/docs/http/ngx_http_core_module.html#location)\n    request URI matching the location is replaced by a URI\n    specified in the directive:\n    ```\n    location /name/ {\n        proxy_pass http://127.0.0.1/remote/;\n    }\n    ```\n- If `proxy_pass` is specified without a URI,\n    the request URI is passed to the server in the same form\n    as sent by a client when the original request is processed,\n    or the full normalized request URI is passed\n    when processing the changed URI:\n    ```\n    location /some/path/ {\n        proxy_pass http://127.0.0.1;\n    }\n    ```\n    \u003e Before version 1.1.12,\n    \u003e if `proxy_pass` is specified without a URI,\n    \u003e the original request URI might be passed\n    \u003e instead of the changed URI in some cases.\n\nIn some cases, the part of a request URI to be replaced cannot be determined:\n- When location is specified using a regular expression,\n    and also inside named locations.\n    \n    In these cases,\n    `proxy_pass` should be specified without a URI.\n- When the URI is changed inside a proxied location using the\n    [`rewrite`](https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite) directive,\n    and this same configuration will be used to process a request\n    (`break`):\n    ```\n    location /name/ {\n        rewrite    /name/([^/]+) /users?name=$1 break;\n        proxy_pass http://127.0.0.1;\n    }\n    ```\n    \n    In this case, the URI specified in the directive is ignored and\n    the full changed request URI is passed to the server.\n- When variables are used in `proxy_pass`:\n    ```\n    location /name/ {\n        proxy_pass http://127.0.0.1$request_uri;\n    }\n    ```\n    In this case, if URI is specified in the directive,\n    it is passed to the server as is,\n    replacing the original request URI.\n\n[WebSocket](https://nginx.org/en/docs/http/websocket.html) proxying requires special\nconfiguration and is supported since version 1.3.13.",
          "description_html": "\u003cp\u003eSets the protocol and address of a proxied server and an optional URI\nto which a location should be mapped.\nAs a protocol, “\u003ccode\u003ehttp\u003c/code\u003e” or “\u003ccode\u003ehttps\u003c/code\u003e”\ncan be specified.\nThe address can be specified as a domain name or IP address,\nand an optional port:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_pass http://localhost:8000/uri/;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eor as a UNIX-domain socket path specified after the word\n“\u003ccode\u003eunix\u003c/code\u003e” and enclosed in colons:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_pass http://unix:/tmp/backend.socket:/uri/;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003eserver group\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described server groups,\nand, if not found, is determined using a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\" target=\"_blank\"\u003e\u003ccode\u003eresolver\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eA request URI is passed to the server as follows:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eIf the \u003ccode\u003eproxy_pass\u003c/code\u003e directive is specified with a URI,\nthen when a request is passed to the server, the part of a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#location\" target=\"_blank\"\u003enormalized\u003c/a\u003e\nrequest URI matching the location is replaced by a URI\nspecified in the directive:\n\n\u003cpre\u003e\u003ccode\u003e\nlocation /name/ {\n    proxy_pass http://127.0.0.1/remote/;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003c/li\u003e\n\u003cli\u003eIf \u003ccode\u003eproxy_pass\u003c/code\u003e is specified without a URI,\nthe request URI is passed to the server in the same form\nas sent by a client when the original request is processed,\nor the full normalized request URI is passed\nwhen processing the changed URI:\n\n\u003cpre\u003e\u003ccode\u003e\nlocation /some/path/ {\n    proxy_pass http://127.0.0.1;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u0026gt; Before version 1.1.12,\n\u0026gt; if \u003ccode\u003eproxy_pass\u003c/code\u003e is specified without a URI,\n\u0026gt; the original request URI might be passed\n\u0026gt; instead of the changed URI in some cases.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIn some cases, the part of a request URI to be replaced cannot be determined:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003eWhen location is specified using a regular expression,\nand also inside named locations.\u003c/p\u003e\n\n\u003cp\u003eIn these cases,\n\u003ccode\u003eproxy_pass\u003c/code\u003e should be specified without a URI.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003eWhen the URI is changed inside a proxied location using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite\" target=\"_blank\"\u003e\u003ccode\u003erewrite\u003c/code\u003e\u003c/a\u003e directive,\nand this same configuration will be used to process a request\n(\u003ccode\u003ebreak\u003c/code\u003e):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /name/ {\n    rewrite    /name/([^/]+) /users?name=$1 break;\n    proxy_pass http://127.0.0.1;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn this case, the URI specified in the directive is ignored and\nthe full changed request URI is passed to the server.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003eWhen variables are used in \u003ccode\u003eproxy_pass\u003c/code\u003e:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /name/ {\n    proxy_pass http://127.0.0.1$request_uri;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn this case, if URI is specified in the directive,\nit is passed to the server as is,\nreplacing the original request URI.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u003ca href=\"https://nginx.org/en/docs/http/websocket.html\" target=\"_blank\"\u003eWebSocket\u003c/a\u003e proxying requires special\nconfiguration and is supported since version 1.3.13.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_pass_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`*"
          ],
          "isBlock": false,
          "description_md": "Permits passing [otherwise disabled](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header) header\nfields from a proxied server to a client.",
          "description_html": "\u003cp\u003ePermits passing \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_hide_header\" target=\"_blank\"\u003eotherwise disabled\u003c/a\u003e header\nfields from a proxied server to a client.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_pass_request_body",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether the original request body is passed\nto the proxied server.\n```\nlocation /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_body off;\n    proxy_set_header Content-Length \"\";\n\n    proxy_pass ...\n}\n```\nSee also the [`proxy_set_header`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header) and\n[`proxy_pass_request_headers`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers) directives.",
          "description_html": "\u003cp\u003eIndicates whether the original request body is passed\nto the proxied server.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_body off;\n    proxy_set_header Content-Length \u0026quot;\u0026quot;;\n\n    proxy_pass ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\" target=\"_blank\"\u003e\u003ccode\u003eproxy_set_header\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers\" target=\"_blank\"\u003e\u003ccode\u003eproxy_pass_request_headers\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_pass_request_headers",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether the header fields of the original request are passed\nto the proxied server.\n```\nlocation /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_headers off;\n    proxy_pass_request_body off;\n\n    proxy_pass ...\n}\n```\nSee also the [`proxy_set_header`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header) and\n[`proxy_pass_request_body`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_body) directives.",
          "description_html": "\u003cp\u003eIndicates whether the header fields of the original request are passed\nto the proxied server.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /x-accel-redirect-here/ {\n    proxy_method GET;\n    proxy_pass_request_headers off;\n    proxy_pass_request_body off;\n\n    proxy_pass ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\" target=\"_blank\"\u003e\u003ccode\u003eproxy_set_header\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_body\" target=\"_blank\"\u003e\u003ccode\u003eproxy_pass_request_body\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_read_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for reading a response from the proxied server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the proxied server does not transmit anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eDefines a timeout for reading a response from the proxied server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the proxied server does not transmit anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_redirect",
          "default": "default",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`default`",
            "`off`",
            "*`redirect`* *`replacement`*"
          ],
          "isBlock": false,
          "description_md": "Sets the text that should be changed in the \"Location\"\nand \"Refresh\" header fields of a proxied server response.\nSuppose a proxied server returned the header field\n“`Location: http://localhost:8000/two/some/uri/`”.\nThe directive\n```\nproxy_redirect http://localhost:8000/two/ http://frontend/one/;\n```\nwill rewrite this string to\n“`Location: http://frontend/one/some/uri/`”.\n\nA server name may be omitted in the *`replacement`* string:\n```\nproxy_redirect http://localhost:8000/two/ /;\n```\nthen the primary server’s name and port, if different from 80,\nwill be inserted.\n\nThe default replacement specified by the `default` parameter\nuses the parameters of the\n[`location`](https://nginx.org/en/docs/http/ngx_http_core_module.html#location) and\n[`proxy_pass`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass) directives.\nHence, the two configurations below are equivalent:\n```\nlocation /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect default;\n```\n\n```\nlocation /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect http://upstream:port/two/ /one/;\n```\nThe `default` parameter is not permitted if\n[`proxy_pass`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass) is specified using variables.\n\nA *`replacement`* string can contain variables:\n```\nproxy_redirect http://localhost:8000/ http://$host:$server_port/;\n```\n\nA *`redirect`* can also contain (1.1.11) variables:\n```\nproxy_redirect http://$proxy_host:8000/ /;\n```\n\nThe directive can be specified (1.1.11) using regular expressions.\nIn this case, *`redirect`* should either start with\nthe “`~`” symbol for a case-sensitive matching,\nor with the “`~*`” symbols for case-insensitive\nmatching.\nThe regular expression can contain named and positional captures,\nand *`replacement`* can reference them:\n```\nproxy_redirect ~^(http://[^:]+):\\d+(/.+)$ $1$2;\nproxy_redirect ~*/user/([^/]+)/(.+)$      http://$1.example.com/$2;\n```\n\nSeveral `proxy_redirect` directives\ncan be specified on the same level:\n```\nproxy_redirect default;\nproxy_redirect http://localhost:8000/  /;\nproxy_redirect http://www.example.com/ /;\n```\nIf several directives can be applied to\nthe header fields of a proxied server response,\nthe first matching directive will be chosen.\n\nThe `off` parameter cancels the effect\nof the `proxy_redirect` directives\ninherited from the previous configuration level.\n\nUsing this directive, it is also possible to add host names to relative\nredirects issued by a proxied server:\n```\nproxy_redirect / /;\n```",
          "description_html": "\u003cp\u003eSets the text that should be changed in the \u0026ldquo;Location\u0026rdquo;\nand \u0026ldquo;Refresh\u0026rdquo; header fields of a proxied server response.\nSuppose a proxied server returned the header field\n“\u003ccode\u003eLocation: http://localhost:8000/two/some/uri/\u003c/code\u003e”.\nThe directive\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_redirect http://localhost:8000/two/ http://frontend/one/;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ewill rewrite this string to\n“\u003ccode\u003eLocation: http://frontend/one/some/uri/\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eA server name may be omitted in the \u003cem\u003e\u003ccode\u003ereplacement\u003c/code\u003e\u003c/em\u003e string:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_redirect http://localhost:8000/two/ /;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ethen the primary server’s name and port, if different from 80,\nwill be inserted.\u003c/p\u003e\n\n\u003cp\u003eThe default replacement specified by the \u003ccode\u003edefault\u003c/code\u003e parameter\nuses the parameters of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#location\" target=\"_blank\"\u003e\u003ccode\u003elocation\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\" target=\"_blank\"\u003e\u003ccode\u003eproxy_pass\u003c/code\u003e\u003c/a\u003e directives.\nHence, the two configurations below are equivalent:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect default;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /one/ {\n    proxy_pass     http://upstream:port/two/;\n    proxy_redirect http://upstream:port/two/ /one/;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003edefault\u003c/code\u003e parameter is not permitted if\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\" target=\"_blank\"\u003e\u003ccode\u003eproxy_pass\u003c/code\u003e\u003c/a\u003e is specified using variables.\u003c/p\u003e\n\n\u003cp\u003eA \u003cem\u003e\u003ccode\u003ereplacement\u003c/code\u003e\u003c/em\u003e string can contain variables:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_redirect http://localhost:8000/ http://$host:$server_port/;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA \u003cem\u003e\u003ccode\u003eredirect\u003c/code\u003e\u003c/em\u003e can also contain (1.1.11) variables:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_redirect http://$proxy_host:8000/ /;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe directive can be specified (1.1.11) using regular expressions.\nIn this case, \u003cem\u003e\u003ccode\u003eredirect\u003c/code\u003e\u003c/em\u003e should either start with\nthe “\u003ccode\u003e~\u003c/code\u003e” symbol for a case-sensitive matching,\nor with the “\u003ccode\u003e~*\u003c/code\u003e” symbols for case-insensitive\nmatching.\nThe regular expression can contain named and positional captures,\nand \u003cem\u003e\u003ccode\u003ereplacement\u003c/code\u003e\u003c/em\u003e can reference them:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_redirect ~^(http://[^:]+):\\d+(/.+)$ $1$2;\nproxy_redirect ~*/user/([^/]+)/(.+)$      http://$1.example.com/$2;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003eproxy_redirect\u003c/code\u003e directives\ncan be specified on the same level:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_redirect default;\nproxy_redirect http://localhost:8000/  /;\nproxy_redirect http://www.example.com/ /;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf several directives can be applied to\nthe header fields of a proxied server response,\nthe first matching directive will be chosen.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoff\u003c/code\u003e parameter cancels the effect\nof the \u003ccode\u003eproxy_redirect\u003c/code\u003e directives\ninherited from the previous configuration level.\u003c/p\u003e\n\n\u003cp\u003eUsing this directive, it is also possible to add host names to relative\nredirects issued by a proxied server:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_redirect / /;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "proxy_request_buffering",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables buffering of a client request body.\n\nWhen buffering is enabled, the entire request body is\n[read](https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size)\nfrom the client before sending the request to a proxied server.\n\nWhen buffering is disabled, the request body is sent to the proxied server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n[next server](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream)\nif nginx already started sending the request body.\n\nWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value unless\nHTTP/1.1 is [enabled](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version) for proxying.",
          "description_html": "\u003cp\u003eEnables or disables buffering of a client request body.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is enabled, the entire request body is\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\" target=\"_blank\"\u003eread\u003c/a\u003e\nfrom the client before sending the request to a proxied server.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is disabled, the request body is sent to the proxied server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e\nif nginx already started sending the request body.\u003c/p\u003e\n\n\u003cp\u003eWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value unless\nHTTP/1.1 is \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version\" target=\"_blank\"\u003eenabled\u003c/a\u003e for proxying.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_send_lowat",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "If the directive is set to a non-zero value, nginx will try to\nminimize the number\nof send operations on outgoing connections to a proxied server by using either\n`NOTE_LOWAT` flag of the\n[`kqueue`](https://nginx.org/en/docs/events.html#kqueue) method,\nor the `SO_SNDLOWAT` socket option,\nwith the specified *`size`*.\n\nThis directive is ignored on Linux, Solaris, and Windows.",
          "description_html": "\u003cp\u003eIf the directive is set to a non-zero value, nginx will try to\nminimize the number\nof send operations on outgoing connections to a proxied server by using either\n\u003ccode\u003eNOTE_LOWAT\u003c/code\u003e flag of the\n\u003ca href=\"https://nginx.org/en/docs/events.html#kqueue\" target=\"_blank\"\u003e\u003ccode\u003ekqueue\u003c/code\u003e\u003c/a\u003e method,\nor the \u003ccode\u003eSO_SNDLOWAT\u003c/code\u003e socket option,\nwith the specified \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eThis directive is ignored on Linux, Solaris, and Windows.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_send_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for transmitting a request to the proxied server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the proxied server does not receive anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eSets a timeout for transmitting a request to the proxied server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the proxied server does not receive anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_set_body",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`value`*"
          ],
          "isBlock": false,
          "description_md": "Allows redefining the request body passed to the proxied server.\nThe *`value`* can contain text, variables, and their combination.",
          "description_html": "\u003cp\u003eAllows redefining the request body passed to the proxied server.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combination.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_set_header",
          "default": "Connection close",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Allows redefining or appending fields to the request header\n[passed](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers) to the proxied server.\nThe *`value`* can contain text, variables, and their combinations.\nThese directives are inherited from the previous configuration level\nif and only if there are no `proxy_set_header` directives\ndefined on the current level.\nBy default, only two fields are redefined:\n```\nproxy_set_header Host       $proxy_host;\nproxy_set_header Connection close;\n```\nIf caching is enabled, the header fields\n\"If-Modified-Since\",\n\"If-Unmodified-Since\",\n\"If-None-Match\",\n\"If-Match\",\n\"Range\",\nand\n\"If-Range\"\nfrom the original request are not passed to the proxied server.\n\nAn unchanged \"Host\" request header field can be passed like this:\n```\nproxy_set_header Host       $http_host;\n```\n\nHowever, if this field is not present in a client request header then\nnothing will be passed.\nIn such a case it is better to use the `$host` variable—its\nvalue equals the server name in the \"Host\" request header\nfield or the primary server name if this field is not present:\n```\nproxy_set_header Host       $host;\n```\n\nIn addition, the server name can be passed together with the port of the\nproxied server:\n```\nproxy_set_header Host       $host:$proxy_port;\n```\n\nIf the value of a header field is an empty string then this\nfield will not be passed to a proxied server:\n```\nproxy_set_header Accept-Encoding \"\";\n```",
          "description_html": "\u003cp\u003eAllows redefining or appending fields to the request header\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers\" target=\"_blank\"\u003epassed\u003c/a\u003e to the proxied server.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combinations.\nThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003eproxy_set_header\u003c/code\u003e directives\ndefined on the current level.\nBy default, only two fields are redefined:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_set_header Host       $proxy_host;\nproxy_set_header Connection close;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf caching is enabled, the header fields\n\u0026ldquo;If-Modified-Since\u0026rdquo;,\n\u0026ldquo;If-Unmodified-Since\u0026rdquo;,\n\u0026ldquo;If-None-Match\u0026rdquo;,\n\u0026ldquo;If-Match\u0026rdquo;,\n\u0026ldquo;Range\u0026rdquo;,\nand\n\u0026ldquo;If-Range\u0026rdquo;\nfrom the original request are not passed to the proxied server.\u003c/p\u003e\n\n\u003cp\u003eAn unchanged \u0026ldquo;Host\u0026rdquo; request header field can be passed like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_set_header Host       $http_host;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHowever, if this field is not present in a client request header then\nnothing will be passed.\nIn such a case it is better to use the \u003ccode\u003e$host\u003c/code\u003e variable—its\nvalue equals the server name in the \u0026ldquo;Host\u0026rdquo; request header\nfield or the primary server name if this field is not present:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_set_header Host       $host;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn addition, the server name can be passed together with the port of the\nproxied server:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_set_header Host       $host:$proxy_port;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf the value of a header field is an empty string then this\nfield will not be passed to a proxied server:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_set_header Accept-Encoding \u0026quot;\u0026quot;;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "proxy_socket_keepalive",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Configures the “TCP keepalive” behavior\nfor outgoing connections to a proxied server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “`on`”, the\n`SO_KEEPALIVE` socket option is turned on for the socket.",
          "description_html": "\u003cp\u003eConfigures the “TCP keepalive” behavior\nfor outgoing connections to a proxied server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “\u003ccode\u003eon\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e socket option is turned on for the socket.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_certificate",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the certificate in the PEM format\nused for authentication to a proxied HTTPS server.\n\nSince version 1.21.0, variables can be used in the *`file`* name.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the certificate in the PEM format\nused for authentication to a proxied HTTPS server.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.21.0, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_certificate_key",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the secret key in the PEM format\nused for authentication to a proxied HTTPS server.\n\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`* (1.7.9),\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n\nSince version 1.21.0, variables can be used in the *`file`* name.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key in the PEM format\nused for authentication to a proxied HTTPS server.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003eengine\u003c/code\u003e:\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e (1.7.9),\nwhich loads a secret key with a specified \u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\nfrom the OpenSSL engine \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.21.0, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_ciphers",
          "default": "DEFAULT",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`ciphers`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the enabled ciphers for requests to a proxied HTTPS server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n\nThe full list can be viewed using the\n“`openssl ciphers`” command.",
          "description_html": "\u003cp\u003eSpecifies the enabled ciphers for requests to a proxied HTTPS server.\nThe ciphers are specified in the format understood by the OpenSSL library.\u003c/p\u003e\n\n\u003cp\u003eThe full list can be viewed using the\n“\u003ccode\u003eopenssl ciphers\u003c/code\u003e” command.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_conf_command",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets arbitrary OpenSSL configuration\n[commands](https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html)\nwhen establishing a connection with the proxied HTTPS server.\n\u003e The directive is supported when using OpenSSL 1.0.2 or higher.\n\nSeveral `proxy_ssl_conf_command` directives\ncan be specified on the same level.\nThese directives are inherited from the previous configuration level\nif and only if there are\nno `proxy_ssl_conf_command` directives\ndefined on the current level.\n\n\u003e Note that configuring OpenSSL directly\n\u003e might result in unexpected behavior.",
          "description_html": "\u003cp\u003eSets arbitrary OpenSSL configuration\n\u003ca href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\" target=\"_blank\"\u003ecommands\u003c/a\u003e\nwhen establishing a connection with the proxied HTTPS server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is supported when using OpenSSL 1.0.2 or higher.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003eproxy_ssl_conf_command\u003c/code\u003e directives\ncan be specified on the same level.\nThese directives are inherited from the previous configuration level\nif and only if there are\nno \u003ccode\u003eproxy_ssl_conf_command\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote that configuring OpenSSL directly\nmight result in unexpected behavior.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "proxy_ssl_crl",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to [verify](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify)\nthe certificate of the proxied HTTPS server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with revoked certificates (CRL)\nin the PEM format used to \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the proxied HTTPS server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_name",
          "default": "$proxy_host",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`*"
          ],
          "isBlock": false,
          "description_md": "Allows overriding the server name used to\n[verify](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify)\nthe certificate of the proxied HTTPS server and to be\n[passed through SNI](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_server_name)\nwhen establishing a connection with the proxied HTTPS server.\n\nBy default, the host part of the [`proxy_pass`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass) URL is used.",
          "description_html": "\u003cp\u003eAllows overriding the server name used to\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the proxied HTTPS server and to be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_server_name\" target=\"_blank\"\u003epassed through SNI\u003c/a\u003e\nwhen establishing a connection with the proxied HTTPS server.\u003c/p\u003e\n\n\u003cp\u003eBy default, the host part of the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass\" target=\"_blank\"\u003e\u003ccode\u003eproxy_pass\u003c/code\u003e\u003c/a\u003e URL is used.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_password_file",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with passphrases for\n[secret keys](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_certificate_key)\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with passphrases for\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_certificate_key\" target=\"_blank\"\u003esecret keys\u003c/a\u003e\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_protocols",
          "default": "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "[`SSLv2`] [`SSLv3`] [`TLSv1`] [`TLSv1.1`] [`TLSv1.2`] [`TLSv1.3`]"
          ],
          "isBlock": false,
          "description_md": "Enables the specified protocols for requests to a proxied HTTPS server.\n\n\u003e The `TLSv1.3` parameter is used by default\n\u003e since 1.23.4.",
          "description_html": "\u003cp\u003eEnables the specified protocols for requests to a proxied HTTPS server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003eTLSv1.3\u003c/code\u003e parameter is used by default\nsince 1.23.4.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "proxy_ssl_server_name",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables passing of the server name through\n[TLS Server Name Indication extension](http://en.wikipedia.org/wiki/Server_Name_Indication) (SNI, RFC 6066)\nwhen establishing a connection with the proxied HTTPS server.",
          "description_html": "\u003cp\u003eEnables or disables passing of the server name through\n\u003ca href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\" target=\"_blank\"\u003eTLS Server Name Indication extension\u003c/a\u003e (SNI, RFC 6066)\nwhen establishing a connection with the proxied HTTPS server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_session_reuse",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether SSL sessions can be reused when working with\nthe proxied server.\nIf the errors\n“`SSL3_GET_FINISHED:digest check failed`”\nappear in the logs, try disabling session reuse.",
          "description_html": "\u003cp\u003eDetermines whether SSL sessions can be reused when working with\nthe proxied server.\nIf the errors\n“\u003ccode\u003eSSL3_GET_FINISHED:digest check failed\u003c/code\u003e”\nappear in the logs, try disabling session reuse.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_trusted_certificate",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify)\nthe certificate of the proxied HTTPS server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the proxied HTTPS server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_verify",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables verification of the proxied HTTPS server certificate.",
          "description_html": "\u003cp\u003eEnables or disables verification of the proxied HTTPS server certificate.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_verify_depth",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the verification depth in the proxied HTTPS server certificates chain.",
          "description_html": "\u003cp\u003eSets the verification depth in the proxied HTTPS server certificates chain.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_store",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off` | *`string`*"
          ],
          "isBlock": false,
          "description_md": "Enables saving of files to a disk.\nThe `on` parameter saves files with paths\ncorresponding to the directives\n[`alias`](https://nginx.org/en/docs/http/ngx_http_core_module.html#alias) or\n[`root`](https://nginx.org/en/docs/http/ngx_http_core_module.html#root).\nThe `off` parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n*`string`* with variables:\n```\nproxy_store /data/www$original_uri;\n```\n\nThe modification time of files is set according to the received\n\"Last-Modified\" response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the [`proxy_temp_path`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path)\ndirective, are put on the same file system.\n\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n```\nlocation /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    proxy_pass         http://backend/;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n```\n\nor like this:\n```\nlocation /images/ {\n    root               /data/www;\n    error_page         404 = @fetch;\n}\n\nlocation @fetch {\n    internal;\n\n    proxy_pass         http://backend;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    root               /data/www;\n}\n```",
          "description_html": "\u003cp\u003eEnables saving of files to a disk.\nThe \u003ccode\u003eon\u003c/code\u003e parameter saves files with paths\ncorresponding to the directives\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\" target=\"_blank\"\u003e\u003ccode\u003ealias\u003c/code\u003e\u003c/a\u003e or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\" target=\"_blank\"\u003e\u003ccode\u003eroot\u003c/code\u003e\u003c/a\u003e.\nThe \u003ccode\u003eoff\u003c/code\u003e parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n\u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e with variables:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_store /data/www$original_uri;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe modification time of files is set according to the received\n\u0026ldquo;Last-Modified\u0026rdquo; response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_path\" target=\"_blank\"\u003e\u003ccode\u003eproxy_temp_path\u003c/code\u003e\u003c/a\u003e\ndirective, are put on the same file system.\u003c/p\u003e\n\n\u003cp\u003eThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    proxy_pass         http://backend/;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eor like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /images/ {\n    root               /data/www;\n    error_page         404 = @fetch;\n}\n\nlocation @fetch {\n    internal;\n\n    proxy_pass         http://backend;\n    proxy_store        on;\n    proxy_store_access user:rw group:rw all:r;\n    proxy_temp_path    /data/temp;\n\n    root               /data/www;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "proxy_store_access",
          "default": "user:rw",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`users`*:*`permissions`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets access permissions for newly created files and directories, e.g.:\n```\nproxy_store_access user:rw group:rw all:r;\n```\n\nIf any `group` or `all` access permissions\nare specified then `user` permissions may be omitted:\n```\nproxy_store_access group:rw all:r;\n```",
          "description_html": "\u003cp\u003eSets access permissions for newly created files and directories, e.g.:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_store_access user:rw group:rw all:r;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf any \u003ccode\u003egroup\u003c/code\u003e or \u003ccode\u003eall\u003c/code\u003e access permissions\nare specified then \u003ccode\u003euser\u003c/code\u003e permissions may be omitted:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_store_access group:rw all:r;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "proxy_temp_file_write_size",
          "default": "8k|16k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Limits the *`size`* of data written to a temporary file\nat a time, when buffering of responses from the proxied server\nto temporary files is enabled.\nBy default, *`size`* is limited by two buffers set by the\n[`proxy_buffer_size`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size) and [`proxy_buffers`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers) directives.\nThe maximum size of a temporary file is set by the\n[`proxy_max_temp_file_size`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size) directive.",
          "description_html": "\u003cp\u003eLimits the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of data written to a temporary file\nat a time, when buffering of responses from the proxied server\nto temporary files is enabled.\nBy default, \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e is limited by two buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003eproxy_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers\" target=\"_blank\"\u003e\u003ccode\u003eproxy_buffers\u003c/code\u003e\u003c/a\u003e directives.\nThe maximum size of a temporary file is set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size\" target=\"_blank\"\u003e\u003ccode\u003eproxy_max_temp_file_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_temp_path",
          "default": "proxy_temp",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`path`* [*`level1`* [*`level2`* [*`level3`*]]]"
          ],
          "isBlock": false,
          "description_md": "Defines a directory for storing temporary files\nwith data received from proxied servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\n```\nproxy_temp_path /spool/nginx/proxy_temp 1 2;\n```\na temporary file might look like this:\n```\n/spool/nginx/proxy_temp/7/45/00000123457\n```\n\nSee also the `use_temp_path` parameter of the\n[`proxy_cache_path`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path) directive.",
          "description_html": "\u003cp\u003eDefines a directory for storing temporary files\nwith data received from proxied servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_temp_path /spool/nginx/proxy_temp 1 2;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ea temporary file might look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/spool/nginx/proxy_temp/7/45/00000123457\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee also the \u003ccode\u003euse_temp_path\u003c/code\u003e parameter of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path\" target=\"_blank\"\u003e\u003ccode\u003eproxy_cache_path\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_random_index_module.html",
      "name": "ngx_http_random_index_module",
      "directives": [
        {
          "name": "random_index",
          "default": "off",
          "contexts": [
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables module processing in a surrounding location.",
          "description_html": "\u003cp\u003eEnables or disables module processing in a surrounding location.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_realip_module.html",
      "name": "ngx_http_realip_module",
      "directives": [
        {
          "name": "set_real_ip_from",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`address`* | *`CIDR`* | `unix:`"
          ],
          "isBlock": false,
          "description_md": "Defines trusted addresses that are known to send correct\nreplacement addresses.\nIf the special value `unix:` is specified,\nall UNIX-domain sockets will be trusted.\nTrusted addresses may also be specified using a hostname (1.13.1).\n\u003e IPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.",
          "description_html": "\u003cp\u003eDefines trusted addresses that are known to send correct\nreplacement addresses.\nIf the special value \u003ccode\u003eunix:\u003c/code\u003e is specified,\nall UNIX-domain sockets will be trusted.\nTrusted addresses may also be specified using a hostname (1.13.1).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "real_ip_header",
          "default": "X-Real-IP",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`* | `X-Real-IP` | `X-Forwarded-For` | `proxy_protocol`"
          ],
          "isBlock": false,
          "description_md": "Defines the request header field\nwhose value will be used to replace the client address.\n\nThe request header field value that contains an optional port\nis also used to replace the client port (1.11.0).\nThe address and port should be specified according to\n[RFC 3986](https://datatracker.ietf.org/doc/html/rfc3986).\n\nThe `proxy_protocol` parameter (1.5.12) changes\nthe client address to the one from the PROXY protocol header.\nThe PROXY protocol must be previously enabled by setting the\n`proxy_protocol` parameter\nin the [`listen`](https://nginx.org/en/docs/http/ngx_http_core_module.html#listen) directive.",
          "description_html": "\u003cp\u003eDefines the request header field\nwhose value will be used to replace the client address.\u003c/p\u003e\n\n\u003cp\u003eThe request header field value that contains an optional port\nis also used to replace the client port (1.11.0).\nThe address and port should be specified according to\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc3986\" target=\"_blank\"\u003eRFC 3986\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eproxy_protocol\u003c/code\u003e parameter (1.5.12) changes\nthe client address to the one from the PROXY protocol header.\nThe PROXY protocol must be previously enabled by setting the\n\u003ccode\u003eproxy_protocol\u003c/code\u003e parameter\nin the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\" target=\"_blank\"\u003e\u003ccode\u003elisten\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "real_ip_recursive",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "If recursive search is disabled, the original client address that\nmatches one of the trusted addresses is replaced by the last\naddress sent in the request header field defined by the\n[`real_ip_header`](https://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header) directive.\nIf recursive search is enabled, the original client address that\nmatches one of the trusted addresses is replaced by the last\nnon-trusted address sent in the request header field.",
          "description_html": "\u003cp\u003eIf recursive search is disabled, the original client address that\nmatches one of the trusted addresses is replaced by the last\naddress sent in the request header field defined by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header\" target=\"_blank\"\u003e\u003ccode\u003ereal_ip_header\u003c/code\u003e\u003c/a\u003e directive.\nIf recursive search is enabled, the original client address that\nmatches one of the trusted addresses is replaced by the last\nnon-trusted address sent in the request header field.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_referer_module.html",
      "name": "ngx_http_referer_module",
      "directives": [
        {
          "name": "referer_hash_bucket_size",
          "default": "64",
          "contexts": [
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the bucket size for the valid referers hash tables.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the bucket size for the valid referers hash tables.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "referer_hash_max_size",
          "default": "2048",
          "contexts": [
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`size`* of the valid referers hash tables.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the valid referers hash tables.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "valid_referers",
          "default": "",
          "contexts": [
            "server",
            "location"
          ],
          "syntax": [
            "`none` | `blocked` | `server_names` | *`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Specifies the \"Referer\" request header field values\nthat will cause the embedded `$invalid_referer` variable to\nbe set to an empty string.\nOtherwise, the variable will be set to “`1`”.\nSearch for a match is case-insensitive.\n\nParameters can be as follows:\n- `none`\n\n    the \"Referer\" field is missing in the request header;\n- `blocked`\n\n    the \"Referer\" field is present in the request header,\n    but its value has been deleted by a firewall or proxy server;\n    such values are strings that do not start with\n    “`http://`” or “`https://`”;\n- `server_names`\n\n    the \"Referer\" request header field contains\n    one of the server names;\n- arbitrary string\n\n    defines a server name and an optional URI prefix.\n    A server name can have an “`*`” at the beginning or end.\n    During the checking, the server’s port in the \"Referer\" field\n    is ignored;\n- regular expression\n\n    the first symbol should be a “`~`”.\n    It should be noted that an expression will be matched against\n    the text starting after the “`http://`”\n    or “`https://`”.\n\nExample:\n```\nvalid_referers none blocked server_names\n               *.example.com example.* www.example.org/galleries/\n               ~\\.google\\.;\n```",
          "description_html": "\u003cp\u003eSpecifies the \u0026ldquo;Referer\u0026rdquo; request header field values\nthat will cause the embedded \u003ccode\u003e$invalid_referer\u003c/code\u003e variable to\nbe set to an empty string.\nOtherwise, the variable will be set to “\u003ccode\u003e1\u003c/code\u003e”.\nSearch for a match is case-insensitive.\u003c/p\u003e\n\n\u003cp\u003eParameters can be as follows:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enone\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe \u0026ldquo;Referer\u0026rdquo; field is missing in the request header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eblocked\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe \u0026ldquo;Referer\u0026rdquo; field is present in the request header,\nbut its value has been deleted by a firewall or proxy server;\nsuch values are strings that do not start with\n“\u003ccode\u003ehttp://\u003c/code\u003e” or “\u003ccode\u003ehttps://\u003c/code\u003e”;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eserver_names\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe \u0026ldquo;Referer\u0026rdquo; request header field contains\none of the server names;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003earbitrary string\u003c/p\u003e\n\n\u003cp\u003edefines a server name and an optional URI prefix.\nA server name can have an “\u003ccode\u003e*\u003c/code\u003e” at the beginning or end.\nDuring the checking, the server’s port in the \u0026ldquo;Referer\u0026rdquo; field\nis ignored;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003eregular expression\u003c/p\u003e\n\n\u003cp\u003ethe first symbol should be a “\u003ccode\u003e~\u003c/code\u003e”.\nIt should be noted that an expression will be matched against\nthe text starting after the “\u003ccode\u003ehttp://\u003c/code\u003e”\nor “\u003ccode\u003ehttps://\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003evalid_referers none blocked server_names\n               *.example.com example.* www.example.org/galleries/\n               ~\\.google\\.;\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_rewrite_module.html",
      "name": "ngx_http_rewrite_module",
      "directives": [
        {
          "name": "break",
          "default": "",
          "contexts": [
            "server",
            "location",
            "if"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Stops processing the current set of\n`ngx_http_rewrite_module` directives.\n\nIf a directive is specified inside the\n[`location`](https://nginx.org/en/docs/http/ngx_http_core_module.html#location),\nfurther processing of the request continues in this location.\n\nExample:\n```\nif ($slow) {\n    limit_rate 10k;\n    break;\n}\n```",
          "description_html": "\u003cp\u003eStops processing the current set of\n\u003ccode\u003engx_http_rewrite_module\u003c/code\u003e directives.\u003c/p\u003e\n\n\u003cp\u003eIf a directive is specified inside the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#location\" target=\"_blank\"\u003e\u003ccode\u003elocation\u003c/code\u003e\u003c/a\u003e,\nfurther processing of the request continues in this location.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eif ($slow) {\n    limit_rate 10k;\n    break;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "if",
          "default": "",
          "contexts": [
            "server",
            "location"
          ],
          "syntax": [
            "(*`condition`*) `{...}`"
          ],
          "isBlock": true,
          "description_md": "The specified *`condition`* is evaluated.\nIf true, this module directives specified inside the braces are\nexecuted, and the request is assigned the configuration inside the\n`if` directive.\nConfigurations inside the `if` directives are\ninherited from the previous configuration level.\n\nA condition may be any of the following:\n- a variable name; false if the value of a variable is an empty string\n    or “`0`”;\n    \u003e Before version 1.0.1, any string starting with “`0`”\n    \u003e was considered a false value.\n- comparison of a variable with a string using the\n    “`=`” and “`!=`” operators;\n- matching of a variable against a regular expression using the\n    “`~`” (for case-sensitive matching) and\n    “`~*`” (for case-insensitive matching) operators.\n    Regular expressions can contain captures that are made available for\n    later reuse in the `$1`..`$9` variables.\n    Negative operators “`!~`” and “`!~*`”\n    are also available.\n    If a regular expression includes the “`}`”\n    or “`;`” characters, the whole expressions should be enclosed\n    in single or double quotes.\n- checking of a file existence with the “`-f`” and\n    “`!-f`” operators;\n- checking of a directory existence with the “`-d`” and\n    “`!-d`” operators;\n- checking of a file, directory, or symbolic link existence with the\n    “`-e`” and “`!-e`” operators;\n- checking for an executable file with the “`-x`”\n    and “`!-x`” operators.\n\nExamples:\n```\nif ($http_user_agent ~ MSIE) {\n    rewrite ^(.*)$ /msie/$1 break;\n}\n\nif ($http_cookie ~* \"id=([^;]+)(?:;|$)\") {\n    set $id $1;\n}\n\nif ($request_method = POST) {\n    return 405;\n}\n\nif ($slow) {\n    limit_rate 10k;\n}\n\nif ($invalid_referer) {\n    return 403;\n}\n```\n\u003e A value of the `$invalid_referer` embedded variable is set by the\n\u003e [`valid_referers`](https://nginx.org/en/docs/http/ngx_http_referer_module.html#valid_referers) directive.",
          "description_html": "\u003cp\u003eThe specified \u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e is evaluated.\nIf true, this module directives specified inside the braces are\nexecuted, and the request is assigned the configuration inside the\n\u003ccode\u003eif\u003c/code\u003e directive.\nConfigurations inside the \u003ccode\u003eif\u003c/code\u003e directives are\ninherited from the previous configuration level.\u003c/p\u003e\n\n\u003cp\u003eA condition may be any of the following:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ea variable name; false if the value of a variable is an empty string\nor “\u003ccode\u003e0\u003c/code\u003e”;\n\u0026gt; Before version 1.0.1, any string starting with “\u003ccode\u003e0\u003c/code\u003e”\n\u0026gt; was considered a false value.\u003c/li\u003e\n\u003cli\u003ecomparison of a variable with a string using the\n“\u003ccode\u003e=\u003c/code\u003e” and “\u003ccode\u003e!=\u003c/code\u003e” operators;\u003c/li\u003e\n\u003cli\u003ematching of a variable against a regular expression using the\n“\u003ccode\u003e~\u003c/code\u003e” (for case-sensitive matching) and\n“\u003ccode\u003e~*\u003c/code\u003e” (for case-insensitive matching) operators.\nRegular expressions can contain captures that are made available for\nlater reuse in the \u003ccode\u003e$1\u003c/code\u003e..\u003ccode\u003e$9\u003c/code\u003e variables.\nNegative operators “\u003ccode\u003e!~\u003c/code\u003e” and “\u003ccode\u003e!~*\u003c/code\u003e”\nare also available.\nIf a regular expression includes the “\u003ccode\u003e}\u003c/code\u003e”\nor “\u003ccode\u003e;\u003c/code\u003e” characters, the whole expressions should be enclosed\nin single or double quotes.\u003c/li\u003e\n\u003cli\u003echecking of a file existence with the “\u003ccode\u003e-f\u003c/code\u003e” and\n“\u003ccode\u003e!-f\u003c/code\u003e” operators;\u003c/li\u003e\n\u003cli\u003echecking of a directory existence with the “\u003ccode\u003e-d\u003c/code\u003e” and\n“\u003ccode\u003e!-d\u003c/code\u003e” operators;\u003c/li\u003e\n\u003cli\u003echecking of a file, directory, or symbolic link existence with the\n“\u003ccode\u003e-e\u003c/code\u003e” and “\u003ccode\u003e!-e\u003c/code\u003e” operators;\u003c/li\u003e\n\u003cli\u003echecking for an executable file with the “\u003ccode\u003e-x\u003c/code\u003e”\nand “\u003ccode\u003e!-x\u003c/code\u003e” operators.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eif ($http_user_agent ~ MSIE) {\n    rewrite ^(.*)$ /msie/$1 break;\n}\n\nif ($http_cookie ~* \u0026quot;id=([^;]+)(?:;|$)\u0026quot;) {\n    set $id $1;\n}\n\nif ($request_method = POST) {\n    return 405;\n}\n\nif ($slow) {\n    limit_rate 10k;\n}\n\nif ($invalid_referer) {\n    return 403;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA value of the \u003ccode\u003e$invalid_referer\u003c/code\u003e embedded variable is set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_referer_module.html#valid_referers\" target=\"_blank\"\u003e\u003ccode\u003evalid_referers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "return",
          "default": "",
          "contexts": [
            "server",
            "location",
            "if"
          ],
          "syntax": [
            "*`code`* [*`text`*]",
            "*`code`* *`URL`*",
            "*`URL`*"
          ],
          "isBlock": false,
          "description_md": "Stops processing and returns the specified *`code`* to a client.\nThe non-standard code 444 closes a connection without sending\na response header.\n\nStarting from version 0.8.42, it is possible to specify\neither a redirect URL (for codes 301, 302, 303, 307, and 308)\nor the response body *`text`* (for other codes).\nA response body text and redirect URL can contain variables.\nAs a special case, a redirect URL can be specified as a URI\nlocal to this server, in which case the full redirect URL\nis formed according to the request scheme (`$scheme`) and the\n[`server_name_in_redirect`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect) and\n[`port_in_redirect`](https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect) directives.\n\nIn addition, a *`URL`* for temporary redirect with the code 302\ncan be specified as the sole parameter.\nSuch a parameter should start with the “`http://`”,\n“`https://`”, or “`$scheme`” string.\nA *`URL`* can contain variables.\n\n\u003e Only the following codes could be returned before version 0.7.51:\n\u003e 204, 400, 402 — 406, 408, 410, 411, 413, 416, and 500 — 504.\n\n\n\u003e The code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.\n\n\n\u003e The code 308 was not treated as a redirect until version 1.13.0.\n\nSee also the [`error_page`](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page) directive.",
          "description_html": "\u003cp\u003eStops processing and returns the specified \u003cem\u003e\u003ccode\u003ecode\u003c/code\u003e\u003c/em\u003e to a client.\nThe non-standard code 444 closes a connection without sending\na response header.\u003c/p\u003e\n\n\u003cp\u003eStarting from version 0.8.42, it is possible to specify\neither a redirect URL (for codes 301, 302, 303, 307, and 308)\nor the response body \u003cem\u003e\u003ccode\u003etext\u003c/code\u003e\u003c/em\u003e (for other codes).\nA response body text and redirect URL can contain variables.\nAs a special case, a redirect URL can be specified as a URI\nlocal to this server, in which case the full redirect URL\nis formed according to the request scheme (\u003ccode\u003e$scheme\u003c/code\u003e) and the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect\" target=\"_blank\"\u003e\u003ccode\u003eserver_name_in_redirect\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect\" target=\"_blank\"\u003e\u003ccode\u003eport_in_redirect\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n\n\u003cp\u003eIn addition, a \u003cem\u003e\u003ccode\u003eURL\u003c/code\u003e\u003c/em\u003e for temporary redirect with the code 302\ncan be specified as the sole parameter.\nSuch a parameter should start with the “\u003ccode\u003ehttp://\u003c/code\u003e”,\n“\u003ccode\u003ehttps://\u003c/code\u003e”, or “\u003ccode\u003e$scheme\u003c/code\u003e” string.\nA \u003cem\u003e\u003ccode\u003eURL\u003c/code\u003e\u003c/em\u003e can contain variables.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOnly the following codes could be returned before version 0.7.51:\n204, 400, 402 — 406, 408, 410, 411, 413, 416, and 500 — 504.\u003c/p\u003e\n\n\u003cp\u003eThe code 307 was not treated as a redirect until versions 1.1.16 and 1.0.13.\u003c/p\u003e\n\n\u003cp\u003eThe code 308 was not treated as a redirect until version 1.13.0.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\" target=\"_blank\"\u003e\u003ccode\u003eerror_page\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "rewrite",
          "default": "",
          "contexts": [
            "server",
            "location",
            "if"
          ],
          "syntax": [
            "*`regex`* *`replacement`* [*`flag`*]"
          ],
          "isBlock": false,
          "description_md": "If the specified regular expression matches a request URI, URI is changed\nas specified in the *`replacement`* string.\nThe `rewrite` directives are executed sequentially\nin order of their appearance in the configuration file.\nIt is possible to terminate further processing of the directives using flags.\nIf a replacement string starts with “`http://`”,\n“`https://`”, or “`$scheme`”,\nthe processing stops and the redirect is returned to a client.\n\nAn optional *`flag`* parameter can be one of:\n- `last`\n\n    stops processing the current set of\n    `ngx_http_rewrite_module` directives and starts\n    a search for a new location matching the changed URI;\n- `break`\n\n    stops processing the current set of\n    `ngx_http_rewrite_module` directives\n    as with the [`break`](https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#break) directive;\n- `redirect`\n\n    returns a temporary redirect with the 302 code;\n    used if a replacement string does not start with\n    “`http://`”, “`https://`”,\n    or “`$scheme`”;\n- `permanent`\n\n    returns a permanent redirect with the 301 code.\n\nThe full redirect URL is formed according to the\nrequest scheme (`$scheme`) and the\n[`server_name_in_redirect`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect) and\n[`port_in_redirect`](https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect) directives.\n\nExample:\n```\nserver {\n    ...\n    rewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 last;\n    rewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  last;\n    return  403;\n    ...\n}\n```\n\nBut if these directives are put inside the “`/download/`”\nlocation, the `last` flag should be replaced by\n`break`, or otherwise nginx will make 10 cycles and\nreturn the 500 error:\n```\nlocation /download/ {\n    rewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 break;\n    rewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  break;\n    return  403;\n}\n```\n\nIf a *`replacement`* string includes the new request arguments,\nthe previous request arguments are appended after them.\nIf this is undesired, putting a question mark at the end of a replacement\nstring avoids having them appended, for example:\n```\nrewrite ^/users/(.*)$ /show?user=$1? last;\n```\n\nIf a regular expression includes the “`}`”\nor “`;`” characters, the whole expressions should be enclosed\nin single or double quotes.",
          "description_html": "\u003cp\u003eIf the specified regular expression matches a request URI, URI is changed\nas specified in the \u003cem\u003e\u003ccode\u003ereplacement\u003c/code\u003e\u003c/em\u003e string.\nThe \u003ccode\u003erewrite\u003c/code\u003e directives are executed sequentially\nin order of their appearance in the configuration file.\nIt is possible to terminate further processing of the directives using flags.\nIf a replacement string starts with “\u003ccode\u003ehttp://\u003c/code\u003e”,\n“\u003ccode\u003ehttps://\u003c/code\u003e”, or “\u003ccode\u003e$scheme\u003c/code\u003e”,\nthe processing stops and the redirect is returned to a client.\u003c/p\u003e\n\n\u003cp\u003eAn optional \u003cem\u003e\u003ccode\u003eflag\u003c/code\u003e\u003c/em\u003e parameter can be one of:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003elast\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003estops processing the current set of\n\u003ccode\u003engx_http_rewrite_module\u003c/code\u003e directives and starts\na search for a new location matching the changed URI;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebreak\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003estops processing the current set of\n\u003ccode\u003engx_http_rewrite_module\u003c/code\u003e directives\nas with the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#break\" target=\"_blank\"\u003e\u003ccode\u003ebreak\u003c/code\u003e\u003c/a\u003e directive;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eredirect\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ereturns a temporary redirect with the 302 code;\nused if a replacement string does not start with\n“\u003ccode\u003ehttp://\u003c/code\u003e”, “\u003ccode\u003ehttps://\u003c/code\u003e”,\nor “\u003ccode\u003e$scheme\u003c/code\u003e”;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epermanent\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ereturns a permanent redirect with the 301 code.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe full redirect URL is formed according to the\nrequest scheme (\u003ccode\u003e$scheme\u003c/code\u003e) and the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server_name_in_redirect\" target=\"_blank\"\u003e\u003ccode\u003eserver_name_in_redirect\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#port_in_redirect\" target=\"_blank\"\u003e\u003ccode\u003eport_in_redirect\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    ...\n    rewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 last;\n    rewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  last;\n    return  403;\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eBut if these directives are put inside the “\u003ccode\u003e/download/\u003c/code\u003e”\nlocation, the \u003ccode\u003elast\u003c/code\u003e flag should be replaced by\n\u003ccode\u003ebreak\u003c/code\u003e, or otherwise nginx will make 10 cycles and\nreturn the 500 error:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /download/ {\n    rewrite ^(/download/.*)/media/(.*)\\..*$ $1/mp3/$2.mp3 break;\n    rewrite ^(/download/.*)/audio/(.*)\\..*$ $1/mp3/$2.ra  break;\n    return  403;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a \u003cem\u003e\u003ccode\u003ereplacement\u003c/code\u003e\u003c/em\u003e string includes the new request arguments,\nthe previous request arguments are appended after them.\nIf this is undesired, putting a question mark at the end of a replacement\nstring avoids having them appended, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003erewrite ^/users/(.*)$ /show?user=$1? last;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a regular expression includes the “\u003ccode\u003e}\u003c/code\u003e”\nor “\u003ccode\u003e;\u003c/code\u003e” characters, the whole expressions should be enclosed\nin single or double quotes.\u003c/p\u003e\n"
        },
        {
          "name": "rewrite_log",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location",
            "if"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables logging of `ngx_http_rewrite_module`\nmodule directives processing results\ninto the [`error_log`](https://nginx.org/en/docs/ngx_core_module.html#error_log) at\nthe `notice` level.",
          "description_html": "\u003cp\u003eEnables or disables logging of \u003ccode\u003engx_http_rewrite_module\u003c/code\u003e\nmodule directives processing results\ninto the \u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\" target=\"_blank\"\u003e\u003ccode\u003eerror_log\u003c/code\u003e\u003c/a\u003e at\nthe \u003ccode\u003enotice\u003c/code\u003e level.\u003c/p\u003e\n"
        },
        {
          "name": "set",
          "default": "",
          "contexts": [
            "server",
            "location",
            "if"
          ],
          "syntax": [
            "*`$variable`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets a *`value`* for the specified *`variable`*.\nThe *`value`* can contain text, variables, and their combination.",
          "description_html": "\u003cp\u003eSets a \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e for the specified \u003cem\u003e\u003ccode\u003evariable\u003c/code\u003e\u003c/em\u003e.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combination.\u003c/p\u003e\n"
        },
        {
          "name": "uninitialized_variable_warn",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location",
            "if"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Controls whether warnings about uninitialized variables are logged.",
          "description_html": "\u003cp\u003eControls whether warnings about uninitialized variables are logged.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_scgi_module.html",
      "name": "ngx_http_scgi_module",
      "directives": [
        {
          "name": "scgi_bind",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`address`* [`transparent`] | `off`"
          ],
          "isBlock": false,
          "description_md": "Makes outgoing connections to an SCGI server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value `off` (1.3.12) cancels the effect\nof the `scgi_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n\nThe `transparent` parameter (1.11.0) allows\noutgoing connections to an SCGI server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\n```\nscgi_bind $remote_addr transparent;\n```\nIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n[superuser](https://nginx.org/en/docs/ngx_core_module.html#user) privileges.\nOn Linux it is not required (1.13.8) as if\nthe `transparent` parameter is specified, worker processes\ninherit the `CAP_NET_RAW` capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the SCGI server.",
          "description_html": "\u003cp\u003eMakes outgoing connections to an SCGI server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value \u003ccode\u003eoff\u003c/code\u003e (1.3.12) cancels the effect\nof the \u003ccode\u003escgi_bind\u003c/code\u003e directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003etransparent\u003c/code\u003e parameter (1.11.0) allows\noutgoing connections to an SCGI server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_bind $remote_addr transparent;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#user\" target=\"_blank\"\u003esuperuser\u003c/a\u003e privileges.\nOn Linux it is not required (1.13.8) as if\nthe \u003ccode\u003etransparent\u003c/code\u003e parameter is specified, worker processes\ninherit the \u003ccode\u003eCAP_NET_RAW\u003c/code\u003e capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the SCGI server.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_buffer_size",
          "default": "4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading the first part\nof the response received from the SCGI server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading the first part\nof the response received from the SCGI server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_buffering",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables buffering of responses from the SCGI server.\n\nWhen buffering is enabled, nginx receives a response from the SCGI server\nas soon as possible, saving it into the buffers set by the\n[`scgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size) and [`scgi_buffers`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers) directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a [temporary file](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_path) on the disk.\nWriting to temporary files is controlled by the\n[`scgi_max_temp_file_size`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_max_temp_file_size) and\n[`scgi_temp_file_write_size`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_file_write_size) directives.\n\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the SCGI server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the [`scgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size) directive.\n\nBuffering can also be enabled or disabled by passing\n“`yes`” or “`no`” in the\n\"X-Accel-Buffering\" response header field.\nThis capability can be disabled using the\n[`scgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers) directive.",
          "description_html": "\u003cp\u003eEnables or disables buffering of responses from the SCGI server.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is enabled, nginx receives a response from the SCGI server\nas soon as possible, saving it into the buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003escgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003escgi_buffers\u003c/code\u003e\u003c/a\u003e directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_path\" target=\"_blank\"\u003etemporary file\u003c/a\u003e on the disk.\nWriting to temporary files is controlled by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_max_temp_file_size\" target=\"_blank\"\u003e\u003ccode\u003escgi_max_temp_file_size\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_file_write_size\" target=\"_blank\"\u003e\u003ccode\u003escgi_temp_file_write_size\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the SCGI server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003escgi_buffer_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eBuffering can also be enabled or disabled by passing\n“\u003ccode\u003eyes\u003c/code\u003e” or “\u003ccode\u003eno\u003c/code\u003e” in the\n\u0026ldquo;X-Accel-Buffering\u0026rdquo; response header field.\nThis capability can be disabled using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003escgi_ignore_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_buffers",
          "default": "8 4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* and *`size`* of the\nbuffers used for reading a response from the SCGI server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the\nbuffers used for reading a response from the SCGI server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_busy_buffers_size",
          "default": "8k|16k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "When [buffering](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering) of responses from the SCGI\nserver is enabled, limits the total *`size`* of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, *`size`* is limited by the size of two buffers set by the\n[`scgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size) and [`scgi_buffers`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers) directives.",
          "description_html": "\u003cp\u003eWhen \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the SCGI\nserver is enabled, limits the total \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e is limited by the size of two buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003escgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003escgi_buffers\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`zone`* | `off`"
          ],
          "isBlock": false,
          "description_md": "Defines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe `off` parameter disables caching inherited\nfrom the previous configuration level.",
          "description_html": "\u003cp\u003eDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe \u003ccode\u003eoff\u003c/code\u003e parameter disables caching inherited\nfrom the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache_background_update",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Allows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n[allow](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_use_stale_updating)\nthe usage of a stale cached response when it is being updated.",
          "description_html": "\u003cp\u003eAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_use_stale_updating\" target=\"_blank\"\u003eallow\u003c/a\u003e\nthe usage of a stale cached response when it is being updated.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache_bypass",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\n```\nscgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nscgi_cache_bypass $http_pragma    $http_authorization;\n```\nCan be used along with the [`scgi_no_cache`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_no_cache) directive.",
          "description_html": "\u003cp\u003eDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nscgi_cache_bypass $http_pragma    $http_authorization;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eCan be used along with the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_no_cache\" target=\"_blank\"\u003e\u003ccode\u003escgi_no_cache\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache_key",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`*"
          ],
          "isBlock": false,
          "description_md": "Defines a key for caching, for example\n```\nscgi_cache_key localhost:9000$request_uri;\n```",
          "description_html": "\u003cp\u003eDefines a key for caching, for example\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_cache_key localhost:9000$request_uri;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "scgi_cache_lock",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "When enabled, only one request at a time will be allowed to populate\na new cache element identified according to the [`scgi_cache_key`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key)\ndirective by passing a request to an SCGI server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n[`scgi_cache_lock_timeout`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_lock_timeout) directive.",
          "description_html": "\u003cp\u003eWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key\" target=\"_blank\"\u003e\u003ccode\u003escgi_cache_key\u003c/code\u003e\u003c/a\u003e\ndirective by passing a request to an SCGI server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_lock_timeout\" target=\"_blank\"\u003e\u003ccode\u003escgi_cache_lock_timeout\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache_lock_age",
          "default": "5s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "If the last request passed to the SCGI server\nfor populating a new cache element\nhas not completed for the specified *`time`*,\none more request may be passed to the SCGI server.",
          "description_html": "\u003cp\u003eIf the last request passed to the SCGI server\nfor populating a new cache element\nhas not completed for the specified \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e,\none more request may be passed to the SCGI server.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache_lock_timeout",
          "default": "5s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for [`scgi_cache_lock`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_lock).\nWhen the *`time`* expires,\nthe request will be passed to the SCGI server,\nhowever, the response will not be cached.\n\u003e Before 1.7.8, the response could be cached.",
          "description_html": "\u003cp\u003eSets a timeout for \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_lock\" target=\"_blank\"\u003e\u003ccode\u003escgi_cache_lock\u003c/code\u003e\u003c/a\u003e.\nWhen the \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e expires,\nthe request will be passed to the SCGI server,\nhowever, the response will not be cached.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore 1.7.8, the response could be cached.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "scgi_cache_max_range_offset",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the SCGI server\nand the response will not be cached.",
          "description_html": "\u003cp\u003eSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the SCGI server\nand the response will not be cached.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache_methods",
          "default": "GET HEAD",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`GET` | `HEAD` | `POST` ..."
          ],
          "isBlock": false,
          "description_md": "If the client request method is listed in this directive then\nthe response will be cached.\n“`GET`” and “`HEAD`” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the [`scgi_no_cache`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_no_cache) directive.",
          "description_html": "\u003cp\u003eIf the client request method is listed in this directive then\nthe response will be cached.\n“\u003ccode\u003eGET\u003c/code\u003e” and “\u003ccode\u003eHEAD\u003c/code\u003e” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_no_cache\" target=\"_blank\"\u003e\u003ccode\u003escgi_no_cache\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache_min_uses",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* of requests after which the response\nwill be cached.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e of requests after which the response\nwill be cached.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache_path",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`path`* [`levels`=*`levels`*] [`use_temp_path`=`on`|`off`] `keys_zone`=*`name`*:*`size`* [`inactive`=*`time`*] [`max_size`=*`size`*] [`min_free`=*`size`*] [`manager_files`=*`number`*] [`manager_sleep`=*`time`*] [`manager_threshold`=*`time`*] [`loader_files`=*`number`*] [`loader_sleep`=*`time`*] [`loader_threshold`=*`time`*] [`purger`=`on`|`off`] [`purger_files`=*`number`*] [`purger_sleep`=*`time`*] [`purger_threshold`=*`time`*]"
          ],
          "isBlock": false,
          "description_md": "Sets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n[cache key](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key).\nThe `levels` parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n```\nscgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n```\nfile names in a cache will look like this:\n```\n/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n```\n\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe `use_temp_path` parameter (1.7.10).\nIf this parameter is omitted or set to the value `on`,\nthe directory set by the [`scgi_temp_path`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_path) directive\nfor the given location will be used.\nIf the value is set to `off`,\ntemporary files will be put directly in the cache directory.\n\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose *`name`* and *`size`*\nare configured by the `keys_zone` parameter.\nOne megabyte zone can store about 8 thousand keys.\n\u003e As part of\n\u003e [commercial subscription](https://nginx.com/products/),\n\u003e the shared memory zone also stores extended\n\u003e cache [information](https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_),\n\u003e thus, it is required to specify a larger zone size for the same number of keys.\n\u003e For example,\n\u003e one megabyte zone can store about 4 thousand keys.\n\nCached data that are not accessed during the time specified by the\n`inactive` parameter get removed from the cache\nregardless of their freshness.\nBy default, `inactive` is set to 10 minutes.\n\nThe special “cache manager” process monitors the maximum cache size set\nby the `max_size` parameter,\nand the minimum amount of free space set\nby the `min_free` (1.19.1) parameter\non the file system with cache.\nWhen the size is exceeded or there is not enough free space,\nit removes the least recently used data.\nThe data is removed in iterations configured by\n`manager_files`,\n`manager_threshold`, and\n`manager_sleep` parameters (1.11.5).\nDuring one iteration no more than `manager_files` items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n`manager_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `manager_sleep`\nparameter (by default, 50 milliseconds) is made.\n\nA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than `loader_files` items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n`loader_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `loader_sleep`\nparameter (by default, 50 milliseconds) is made.\n\nAdditionally,\nthe following parameters are available as part of our\n[commercial subscription](https://nginx.com/products/):\n\n- `purger`=`on`|`off`\n\n    Instructs whether cache entries that match a\n    [wildcard key](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_purge)\n    will be removed from the disk by the cache purger (1.7.12).\n    Setting the parameter to `on`\n    (default is `off`)\n    will activate the “cache purger” process that\n    permanently iterates through all cache entries\n    and deletes the entries that match the wildcard key.\n- `purger_files`=*`number`*\n\n    Sets the number of items that will be scanned during one iteration (1.7.12).\n    By default, `purger_files` is set to 10.\n- `purger_threshold`=*`number`*\n\n    Sets the duration of one iteration (1.7.12).\n    By default, `purger_threshold` is set to 50 milliseconds.\n- `purger_sleep`=*`number`*\n\n    Sets a pause between iterations (1.7.12).\n    By default, `purger_sleep` is set to 50 milliseconds.\n\n\u003e In versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\n\u003e Previously cached responses will be considered invalid\n\u003e after upgrading to a newer nginx version.",
          "description_html": "\u003cp\u003eSets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e.\nThe \u003ccode\u003elevels\u003c/code\u003e parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003efile names in a cache will look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe \u003ccode\u003euse_temp_path\u003c/code\u003e parameter (1.7.10).\nIf this parameter is omitted or set to the value \u003ccode\u003eon\u003c/code\u003e,\nthe directory set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_path\" target=\"_blank\"\u003e\u003ccode\u003escgi_temp_path\u003c/code\u003e\u003c/a\u003e directive\nfor the given location will be used.\nIf the value is set to \u003ccode\u003eoff\u003c/code\u003e,\ntemporary files will be put directly in the cache directory.\u003c/p\u003e\n\n\u003cp\u003eIn addition, all active keys and information about data are stored\nin a shared memory zone, whose \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\nare configured by the \u003ccode\u003ekeys_zone\u003c/code\u003e parameter.\nOne megabyte zone can store about 8 thousand keys.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs part of\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e,\nthe shared memory zone also stores extended\ncache \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_\" target=\"_blank\"\u003einformation\u003c/a\u003e,\nthus, it is required to specify a larger zone size for the same number of keys.\nFor example,\none megabyte zone can store about 4 thousand keys.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCached data that are not accessed during the time specified by the\n\u003ccode\u003einactive\u003c/code\u003e parameter get removed from the cache\nregardless of their freshness.\nBy default, \u003ccode\u003einactive\u003c/code\u003e is set to 10 minutes.\u003c/p\u003e\n\n\u003cp\u003eThe special “cache manager” process monitors the maximum cache size set\nby the \u003ccode\u003emax_size\u003c/code\u003e parameter,\nand the minimum amount of free space set\nby the \u003ccode\u003emin_free\u003c/code\u003e (1.19.1) parameter\non the file system with cache.\nWhen the size is exceeded or there is not enough free space,\nit removes the least recently used data.\nThe data is removed in iterations configured by\n\u003ccode\u003emanager_files\u003c/code\u003e,\n\u003ccode\u003emanager_threshold\u003c/code\u003e, and\n\u003ccode\u003emanager_sleep\u003c/code\u003e parameters (1.11.5).\nDuring one iteration no more than \u003ccode\u003emanager_files\u003c/code\u003e items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n\u003ccode\u003emanager_threshold\u003c/code\u003e parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the \u003ccode\u003emanager_sleep\u003c/code\u003e\nparameter (by default, 50 milliseconds) is made.\u003c/p\u003e\n\n\u003cp\u003eA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than \u003ccode\u003eloader_files\u003c/code\u003e items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n\u003ccode\u003eloader_threshold\u003c/code\u003e parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the \u003ccode\u003eloader_sleep\u003c/code\u003e\nparameter (by default, 50 milliseconds) is made.\u003c/p\u003e\n\n\u003cp\u003eAdditionally,\nthe following parameters are available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger\u003c/code\u003e=\u003ccode\u003eon\u003c/code\u003e|\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eInstructs whether cache entries that match a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_purge\" target=\"_blank\"\u003ewildcard key\u003c/a\u003e\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to \u003ccode\u003eon\u003c/code\u003e\n(default is \u003ccode\u003eoff\u003c/code\u003e)\nwill activate the “cache purger” process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_files\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, \u003ccode\u003epurger_files\u003c/code\u003e is set to 10.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_threshold\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets the duration of one iteration (1.7.12).\nBy default, \u003ccode\u003epurger_threshold\u003c/code\u003e is set to 50 milliseconds.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_sleep\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets a pause between iterations (1.7.12).\nBy default, \u003ccode\u003epurger_sleep\u003c/code\u003e is set to 50 milliseconds.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\nPreviously cached responses will be considered invalid\nafter upgrading to a newer nginx version.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "scgi_cache_purge",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "string ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n[cache key](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key) is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n\nIf the [cache key](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key) of a purge request ends\nwith an asterisk (“`*`”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either [inactivity](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_path),\nor processed by the [cache purger](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#purger) (1.7.12),\nor a client attempts to access them.\n\nExample configuration:\n```\nscgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        scgi_pass        backend;\n        scgi_cache       cache_zone;\n        scgi_cache_key   $uri;\n        scgi_cache_purge $purge_method;\n    }\n}\n```\n\u003e This functionality is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e of a purge request ends\nwith an asterisk (“\u003ccode\u003e*\u003c/code\u003e”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_path\" target=\"_blank\"\u003einactivity\u003c/a\u003e,\nor processed by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#purger\" target=\"_blank\"\u003ecache purger\u003c/a\u003e (1.7.12),\nor a client attempts to access them.\u003c/p\u003e\n\n\u003cp\u003eExample configuration:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        scgi_pass        backend;\n        scgi_cache       cache_zone;\n        scgi_cache_key   $uri;\n        scgi_cache_purge $purge_method;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis functionality is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "scgi_cache_revalidate",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables revalidation of expired cache items using conditional requests with\nthe \"If-Modified-Since\" and \"If-None-Match\"\nheader fields.",
          "description_html": "\u003cp\u003eEnables revalidation of expired cache items using conditional requests with\nthe \u0026ldquo;If-Modified-Since\u0026rdquo; and \u0026ldquo;If-None-Match\u0026rdquo;\nheader fields.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache_use_stale",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`error` | `timeout` | `invalid_header` | `updating` | `http_500` | `http_503` | `http_403` | `http_404` | `http_429` | `off` ..."
          ],
          "isBlock": false,
          "description_md": "Determines in which cases a stale cached response can be used\nwhen an error occurs during communication with the SCGI server.\nThe directive’s parameters match the parameters of the\n[`scgi_next_upstream`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream) directive.\n\nThe `error` parameter also permits\nusing a stale cached response if an SCGI server to process a request\ncannot be selected.\n\nAdditionally, the `updating` parameter permits\nusing a stale cached response if it is currently being updated.\nThis allows minimizing the number of accesses to SCGI servers\nwhen updating cached data.\n\nUsing a stale cached response\ncan also be enabled directly in the response header\nfor a specified number of seconds after the response became stale (1.11.10).\nThis has lower priority than using the directive parameters.\n- The\n    “[stale-while-revalidate](https://datatracker.ietf.org/doc/html/rfc5861#section-3)”\n    extension of the \"Cache-Control\" header field permits\n    using a stale cached response if it is currently being updated.\n- The\n    “[stale-if-error](https://datatracker.ietf.org/doc/html/rfc5861#section-4)”\n    extension of the \"Cache-Control\" header field permits\n    using a stale cached response in case of an error.\n\nTo minimize the number of accesses to SCGI servers when\npopulating a new cache element, the [`scgi_cache_lock`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_lock)\ndirective can be used.",
          "description_html": "\u003cp\u003eDetermines in which cases a stale cached response can be used\nwhen an error occurs during communication with the SCGI server.\nThe directive’s parameters match the parameters of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream\" target=\"_blank\"\u003e\u003ccode\u003escgi_next_upstream\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eerror\u003c/code\u003e parameter also permits\nusing a stale cached response if an SCGI server to process a request\ncannot be selected.\u003c/p\u003e\n\n\u003cp\u003eAdditionally, the \u003ccode\u003eupdating\u003c/code\u003e parameter permits\nusing a stale cached response if it is currently being updated.\nThis allows minimizing the number of accesses to SCGI servers\nwhen updating cached data.\u003c/p\u003e\n\n\u003cp\u003eUsing a stale cached response\ncan also be enabled directly in the response header\nfor a specified number of seconds after the response became stale (1.11.10).\nThis has lower priority than using the directive parameters.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe\n“\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5861#section-3\" target=\"_blank\"\u003estale-while-revalidate\u003c/a\u003e”\nextension of the \u0026ldquo;Cache-Control\u0026rdquo; header field permits\nusing a stale cached response if it is currently being updated.\u003c/li\u003e\n\u003cli\u003eThe\n“\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5861#section-4\" target=\"_blank\"\u003estale-if-error\u003c/a\u003e”\nextension of the \u0026ldquo;Cache-Control\u0026rdquo; header field permits\nusing a stale cached response in case of an error.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo minimize the number of accesses to SCGI servers when\npopulating a new cache element, the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_lock\" target=\"_blank\"\u003e\u003ccode\u003escgi_cache_lock\u003c/code\u003e\u003c/a\u003e\ndirective can be used.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_cache_valid",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "[*`code`* ...] *`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets caching time for different response codes.\nFor example, the following directives\n```\nscgi_cache_valid 200 302 10m;\nscgi_cache_valid 404      1m;\n```\nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n\nIf only caching *`time`* is specified\n```\nscgi_cache_valid 5m;\n```\nthen only 200, 301, and 302 responses are cached.\n\nIn addition, the `any` parameter can be specified\nto cache any responses:\n```\nscgi_cache_valid 200 302 10m;\nscgi_cache_valid 301      1h;\nscgi_cache_valid any      1m;\n```\n\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n- The \"X-Accel-Expires\" header field sets caching time of a\n    response in seconds.\n    The zero value disables caching for a response.\n    If the value starts with the `@` prefix, it sets an absolute\n    time in seconds since Epoch, up to which the response may be cached.\n- If the header does not include the \"X-Accel-Expires\" field,\n    parameters of caching may be set in the header fields\n    \"Expires\" or \"Cache-Control\".\n- If the header includes the \"Set-Cookie\" field, such a\n    response will not be cached.\n- If the header includes the \"Vary\" field\n    with the special value “`*`”, such a\n    response will not be cached (1.7.7).\n    If the header includes the \"Vary\" field\n    with another value, such a response will be cached\n    taking into account the corresponding request header fields (1.7.7).\n\nProcessing of one or more of these response header fields can be disabled\nusing the [`scgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers) directive.",
          "description_html": "\u003cp\u003eSets caching time for different response codes.\nFor example, the following directives\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_cache_valid 200 302 10m;\nscgi_cache_valid 404      1m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\u003c/p\u003e\n\n\u003cp\u003eIf only caching \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e is specified\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_cache_valid 5m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ethen only 200, 301, and 302 responses are cached.\u003c/p\u003e\n\n\u003cp\u003eIn addition, the \u003ccode\u003eany\u003c/code\u003e parameter can be specified\nto cache any responses:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_cache_valid 200 302 10m;\nscgi_cache_valid 301      1h;\nscgi_cache_valid any      1m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe \u0026ldquo;X-Accel-Expires\u0026rdquo; header field sets caching time of a\nresponse in seconds.\nThe zero value disables caching for a response.\nIf the value starts with the \u003ccode\u003e@\u003c/code\u003e prefix, it sets an absolute\ntime in seconds since Epoch, up to which the response may be cached.\u003c/li\u003e\n\u003cli\u003eIf the header does not include the \u0026ldquo;X-Accel-Expires\u0026rdquo; field,\nparameters of caching may be set in the header fields\n\u0026ldquo;Expires\u0026rdquo; or \u0026ldquo;Cache-Control\u0026rdquo;.\u003c/li\u003e\n\u003cli\u003eIf the header includes the \u0026ldquo;Set-Cookie\u0026rdquo; field, such a\nresponse will not be cached.\u003c/li\u003e\n\u003cli\u003eIf the header includes the \u0026ldquo;Vary\u0026rdquo; field\nwith the special value “\u003ccode\u003e*\u003c/code\u003e”, such a\nresponse will not be cached (1.7.7).\nIf the header includes the \u0026ldquo;Vary\u0026rdquo; field\nwith another value, such a response will be cached\ntaking into account the corresponding request header fields (1.7.7).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eProcessing of one or more of these response header fields can be disabled\nusing the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003escgi_ignore_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_connect_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for establishing a connection with an SCGI server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.",
          "description_html": "\u003cp\u003eDefines a timeout for establishing a connection with an SCGI server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_force_ranges",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables byte-range support\nfor both cached and uncached responses from the SCGI server\nregardless of the \"Accept-Ranges\" field in these responses.",
          "description_html": "\u003cp\u003eEnables byte-range support\nfor both cached and uncached responses from the SCGI server\nregardless of the \u0026ldquo;Accept-Ranges\u0026rdquo; field in these responses.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_hide_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`*"
          ],
          "isBlock": false,
          "description_md": "By default,\nnginx does not pass the header fields \"Status\" and\n\"X-Accel-...\" from the response of an SCGI\nserver to a client.\nThe `scgi_hide_header` directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe [`scgi_pass_header`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass_header) directive can be used.",
          "description_html": "\u003cp\u003eBy default,\nnginx does not pass the header fields \u0026ldquo;Status\u0026rdquo; and\n\u0026ldquo;X-Accel-\u0026hellip;\u0026rdquo; from the response of an SCGI\nserver to a client.\nThe \u003ccode\u003escgi_hide_header\u003c/code\u003e directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass_header\" target=\"_blank\"\u003e\u003ccode\u003escgi_pass_header\u003c/code\u003e\u003c/a\u003e directive can be used.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_ignore_client_abort",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether the connection with an SCGI server should be\nclosed when a client closes the connection without waiting\nfor a response.",
          "description_html": "\u003cp\u003eDetermines whether the connection with an SCGI server should be\nclosed when a client closes the connection without waiting\nfor a response.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_ignore_headers",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`* ..."
          ],
          "isBlock": false,
          "description_md": "Disables processing of certain response header fields from the SCGI server.\nThe following fields can be ignored: \"X-Accel-Redirect\",\n\"X-Accel-Expires\", \"X-Accel-Limit-Rate\" (1.1.6),\n\"X-Accel-Buffering\" (1.1.6),\n\"X-Accel-Charset\" (1.1.6), \"Expires\",\n\"Cache-Control\", \"Set-Cookie\" (0.8.44),\nand \"Vary\" (1.7.7).\n\nIf not disabled, processing of these header fields has the following\neffect:\n- \"X-Accel-Expires\", \"Expires\",\n    \"Cache-Control\", \"Set-Cookie\",\n    and \"Vary\"\n    set the parameters of response [caching](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_valid);\n- \"X-Accel-Redirect\" performs an\n    [internal redirect](https://nginx.org/en/docs/http/ngx_http_core_module.html#internal) to the specified URI;\n- \"X-Accel-Limit-Rate\" sets the\n    [rate limit](https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_rate) for transmission of a response to a client;\n- \"X-Accel-Buffering\" enables or disables\n    [buffering](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering) of a response;\n- \"X-Accel-Charset\" sets the desired\n    [`charset`](https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset)\n    of a response.",
          "description_html": "\u003cp\u003eDisables processing of certain response header fields from the SCGI server.\nThe following fields can be ignored: \u0026ldquo;X-Accel-Redirect\u0026rdquo;,\n\u0026ldquo;X-Accel-Expires\u0026rdquo;, \u0026ldquo;X-Accel-Limit-Rate\u0026rdquo; (1.1.6),\n\u0026ldquo;X-Accel-Buffering\u0026rdquo; (1.1.6),\n\u0026ldquo;X-Accel-Charset\u0026rdquo; (1.1.6), \u0026ldquo;Expires\u0026rdquo;,\n\u0026ldquo;Cache-Control\u0026rdquo;, \u0026ldquo;Set-Cookie\u0026rdquo; (0.8.44),\nand \u0026ldquo;Vary\u0026rdquo; (1.7.7).\u003c/p\u003e\n\n\u003cp\u003eIf not disabled, processing of these header fields has the following\neffect:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Expires\u0026rdquo;, \u0026ldquo;Expires\u0026rdquo;,\n\u0026ldquo;Cache-Control\u0026rdquo;, \u0026ldquo;Set-Cookie\u0026rdquo;,\nand \u0026ldquo;Vary\u0026rdquo;\nset the parameters of response \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_valid\" target=\"_blank\"\u003ecaching\u003c/a\u003e;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Redirect\u0026rdquo; performs an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#internal\" target=\"_blank\"\u003einternal redirect\u003c/a\u003e to the specified URI;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Limit-Rate\u0026rdquo; sets the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_rate\" target=\"_blank\"\u003erate limit\u003c/a\u003e for transmission of a response to a client;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Buffering\u0026rdquo; enables or disables\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of a response;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Charset\u0026rdquo; sets the desired\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\" target=\"_blank\"\u003e\u003ccode\u003echarset\u003c/code\u003e\u003c/a\u003e\nof a response.\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "scgi_intercept_errors",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether an SCGI server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the [`error_page`](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page) directive.",
          "description_html": "\u003cp\u003eDetermines whether an SCGI server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\" target=\"_blank\"\u003e\u003ccode\u003eerror_page\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_limit_rate",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`rate`*"
          ],
          "isBlock": false,
          "description_md": "Limits the speed of reading the response from the SCGI server.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the SCGI server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n[buffering](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering) of responses from the SCGI\nserver is enabled.",
          "description_html": "\u003cp\u003eLimits the speed of reading the response from the SCGI server.\nThe \u003cem\u003e\u003ccode\u003erate\u003c/code\u003e\u003c/em\u003e is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the SCGI server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the SCGI\nserver is enabled.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_max_temp_file_size",
          "default": "1024m",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "When [buffering](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering) of responses from the SCGI\nserver is enabled, and the whole response does not fit into the buffers\nset by the [`scgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size) and [`scgi_buffers`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers)\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum *`size`* of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the [`scgi_temp_file_write_size`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_file_write_size) directive.\n\nThe zero value disables buffering of responses to temporary files.\n\n\u003e This restriction does not apply to responses\n\u003e that will be [cached](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache)\n\u003e or [stored](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_store) on disk.",
          "description_html": "\u003cp\u003eWhen \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the SCGI\nserver is enabled, and the whole response does not fit into the buffers\nset by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003escgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003escgi_buffers\u003c/code\u003e\u003c/a\u003e\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_file_write_size\" target=\"_blank\"\u003e\u003ccode\u003escgi_temp_file_write_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eThe zero value disables buffering of responses to temporary files.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis restriction does not apply to responses\nthat will be \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache\" target=\"_blank\"\u003ecached\u003c/a\u003e\nor \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_store\" target=\"_blank\"\u003estored\u003c/a\u003e on disk.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "scgi_next_upstream",
          "default": "error timeout",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`error` | `timeout` | `invalid_header` | `http_500` | `http_503` | `http_403` | `http_404` | `http_429` | `non_idempotent` | `off` ..."
          ],
          "isBlock": false,
          "description_md": "Specifies in which cases a request should be passed to the next server:\n- `error`\n\n    an error occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `timeout`\n\n    a timeout has occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `invalid_header`\n\n    a server returned an empty or invalid response;\n- `http_500`\n\n    a server returned a response with the code 500;\n- `http_503`\n\n    a server returned a response with the code 503;\n- `http_403`\n\n    a server returned a response with the code 403;\n- `http_404`\n\n    a server returned a response with the code 404;\n- `http_429`\n\n    a server returned a response with the code 429 (1.11.13);\n- `non_idempotent`\n\n    normally, requests with a\n    [non-idempotent](https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2)\n    method\n    (`POST`, `LOCK`, `PATCH`)\n    are not passed to the next server\n    if a request has been sent to an upstream server (1.9.13);\n    enabling this option explicitly allows retrying such requests;\n- `off`\n\n    disables passing a request to the next server.\n\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n\nThe directive also defines what is considered an\n[unsuccessful attempt](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails) of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_header` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of `http_500`, `http_503`,\nand `http_429` are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of `http_403` and `http_404`\nare never considered unsuccessful attempts.\n\nPassing a request to the next server can be limited by\n[the number of tries](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream_tries)\nand by [time](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream_timeout).",
          "description_html": "\u003cp\u003eSpecifies in which cases a request should be passed to the next server:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eerror\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ean error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einvalid_header\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned an empty or invalid response;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_500\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 500;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_503\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 503;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_403\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 403;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_404\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 404;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_429\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 429 (1.11.13);\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enon_idempotent\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003enormally, requests with a\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\" target=\"_blank\"\u003enon-idempotent\u003c/a\u003e\nmethod\n(\u003ccode\u003ePOST\u003c/code\u003e, \u003ccode\u003eLOCK\u003c/code\u003e, \u003ccode\u003ePATCH\u003c/code\u003e)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables passing a request to the next server.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\u003c/p\u003e\n\n\u003cp\u003eThe directive also defines what is considered an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\" target=\"_blank\"\u003eunsuccessful attempt\u003c/a\u003e of communication with a server.\nThe cases of \u003ccode\u003eerror\u003c/code\u003e, \u003ccode\u003etimeout\u003c/code\u003e and\n\u003ccode\u003einvalid_header\u003c/code\u003e are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of \u003ccode\u003ehttp_500\u003c/code\u003e, \u003ccode\u003ehttp_503\u003c/code\u003e,\nand \u003ccode\u003ehttp_429\u003c/code\u003e are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of \u003ccode\u003ehttp_403\u003c/code\u003e and \u003ccode\u003ehttp_404\u003c/code\u003e\nare never considered unsuccessful attempts.\u003c/p\u003e\n\n\u003cp\u003ePassing a request to the next server can be limited by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream_tries\" target=\"_blank\"\u003ethe number of tries\u003c/a\u003e\nand by \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream_timeout\" target=\"_blank\"\u003etime\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_next_upstream_timeout",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Limits the time during which a request can be passed to the\n[next server](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the time during which a request can be passed to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_next_upstream_tries",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Limits the number of possible tries for passing a request to the\n[next server](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the number of possible tries for passing a request to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_no_cache",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\n```\nscgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nscgi_no_cache $http_pragma    $http_authorization;\n```\nCan be used along with the [`scgi_cache_bypass`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_bypass) directive.",
          "description_html": "\u003cp\u003eDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nscgi_no_cache $http_pragma    $http_authorization;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eCan be used along with the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_bypass\" target=\"_blank\"\u003e\u003ccode\u003escgi_cache_bypass\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_param",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`parameter`* *`value`* [`if_not_empty`]"
          ],
          "isBlock": false,
          "description_md": "Sets a *`parameter`* that should be passed to the SCGI server.\nThe *`value`* can contain text, variables, and their combination.\nThese directives are inherited from the previous configuration level\nif and only if there are no `scgi_param` directives\ndefined on the current level.\n\nStandard\n[CGI environment variables](https://datatracker.ietf.org/doc/html/rfc3875#section-4.1)\nshould be provided as SCGI headers, see the `scgi_params` file\nprovided in the distribution:\n```\nlocation / {\n    include scgi_params;\n    ...\n}\n```\n\nIf the directive is specified with `if_not_empty` (1.1.11) then\nsuch a parameter will be passed to the server only if its value is not empty:\n```\nscgi_param HTTPS $https if_not_empty;\n```",
          "description_html": "\u003cp\u003eSets a \u003cem\u003e\u003ccode\u003eparameter\u003c/code\u003e\u003c/em\u003e that should be passed to the SCGI server.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combination.\nThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003escgi_param\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cp\u003eStandard\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc3875#section-4.1\" target=\"_blank\"\u003eCGI environment variables\u003c/a\u003e\nshould be provided as SCGI headers, see the \u003ccode\u003escgi_params\u003c/code\u003e file\nprovided in the distribution:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    include scgi_params;\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf the directive is specified with \u003ccode\u003eif_not_empty\u003c/code\u003e (1.1.11) then\nsuch a parameter will be passed to the server only if its value is not empty:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_param HTTPS $https if_not_empty;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "scgi_pass",
          "default": "",
          "contexts": [
            "location",
            "if in location"
          ],
          "syntax": [
            "*`address`*"
          ],
          "isBlock": false,
          "description_md": "Sets the address of an SCGI server.\nThe address can be specified as a domain name or IP address,\nand a port:\n```\nscgi_pass localhost:9000;\n```\nor as a UNIX-domain socket path:\n```\nscgi_pass unix:/tmp/scgi.socket;\n```\n\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n[server group](https://nginx.org/en/docs/http/ngx_http_upstream_module.html).\n\nParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n[server groups](https://nginx.org/en/docs/http/ngx_http_upstream_module.html),\nand, if not found, is determined using a\n[`resolver`](https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver).",
          "description_html": "\u003cp\u003eSets the address of an SCGI server.\nThe address can be specified as a domain name or IP address,\nand a port:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_pass localhost:9000;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eor as a UNIX-domain socket path:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_pass unix:/tmp/scgi.socket;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003eserver group\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003eserver groups\u003c/a\u003e,\nand, if not found, is determined using a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\" target=\"_blank\"\u003e\u003ccode\u003eresolver\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_pass_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`*"
          ],
          "isBlock": false,
          "description_md": "Permits passing [otherwise disabled](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_hide_header) header\nfields from an SCGI server to a client.",
          "description_html": "\u003cp\u003ePermits passing \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_hide_header\" target=\"_blank\"\u003eotherwise disabled\u003c/a\u003e header\nfields from an SCGI server to a client.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_pass_request_body",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether the original request body is passed\nto the SCGI server.\nSee also the [`scgi_pass_request_headers`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass_request_headers) directive.",
          "description_html": "\u003cp\u003eIndicates whether the original request body is passed\nto the SCGI server.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass_request_headers\" target=\"_blank\"\u003e\u003ccode\u003escgi_pass_request_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_pass_request_headers",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether the header fields of the original request are passed\nto the SCGI server.\nSee also the [`scgi_pass_request_body`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass_request_body) directive.",
          "description_html": "\u003cp\u003eIndicates whether the header fields of the original request are passed\nto the SCGI server.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass_request_body\" target=\"_blank\"\u003e\u003ccode\u003escgi_pass_request_body\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_read_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for reading a response from the SCGI server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the SCGI server does not transmit anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eDefines a timeout for reading a response from the SCGI server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the SCGI server does not transmit anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_request_buffering",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables buffering of a client request body.\n\nWhen buffering is enabled, the entire request body is\n[read](https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size)\nfrom the client before sending the request to an SCGI server.\n\nWhen buffering is disabled, the request body is sent to the SCGI server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n[next server](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream)\nif nginx already started sending the request body.\n\nWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value.",
          "description_html": "\u003cp\u003eEnables or disables buffering of a client request body.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is enabled, the entire request body is\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\" target=\"_blank\"\u003eread\u003c/a\u003e\nfrom the client before sending the request to an SCGI server.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is disabled, the request body is sent to the SCGI server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e\nif nginx already started sending the request body.\u003c/p\u003e\n\n\u003cp\u003eWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_send_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for transmitting a request to the SCGI server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the SCGI server does not receive anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eSets a timeout for transmitting a request to the SCGI server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the SCGI server does not receive anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_socket_keepalive",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Configures the “TCP keepalive” behavior\nfor outgoing connections to an SCGI server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “`on`”, the\n`SO_KEEPALIVE` socket option is turned on for the socket.",
          "description_html": "\u003cp\u003eConfigures the “TCP keepalive” behavior\nfor outgoing connections to an SCGI server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “\u003ccode\u003eon\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e socket option is turned on for the socket.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_store",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off` | *`string`*"
          ],
          "isBlock": false,
          "description_md": "Enables saving of files to a disk.\nThe `on` parameter saves files with paths\ncorresponding to the directives\n[`alias`](https://nginx.org/en/docs/http/ngx_http_core_module.html#alias) or\n[`root`](https://nginx.org/en/docs/http/ngx_http_core_module.html#root).\nThe `off` parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n*`string`* with variables:\n```\nscgi_store /data/www$original_uri;\n```\n\nThe modification time of files is set according to the received\n\"Last-Modified\" response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the [`scgi_temp_path`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_path)\ndirective, are put on the same file system.\n\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n```\nlocation /images/ {\n    root              /data/www;\n    error_page        404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    scgi_pass         backend:9000;\n    ...\n\n    scgi_store        on;\n    scgi_store_access user:rw group:rw all:r;\n    scgi_temp_path    /data/temp;\n\n    alias             /data/www/;\n}\n```",
          "description_html": "\u003cp\u003eEnables saving of files to a disk.\nThe \u003ccode\u003eon\u003c/code\u003e parameter saves files with paths\ncorresponding to the directives\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\" target=\"_blank\"\u003e\u003ccode\u003ealias\u003c/code\u003e\u003c/a\u003e or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\" target=\"_blank\"\u003e\u003ccode\u003eroot\u003c/code\u003e\u003c/a\u003e.\nThe \u003ccode\u003eoff\u003c/code\u003e parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n\u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e with variables:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_store /data/www$original_uri;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe modification time of files is set according to the received\n\u0026ldquo;Last-Modified\u0026rdquo; response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_temp_path\" target=\"_blank\"\u003e\u003ccode\u003escgi_temp_path\u003c/code\u003e\u003c/a\u003e\ndirective, are put on the same file system.\u003c/p\u003e\n\n\u003cp\u003eThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /images/ {\n    root              /data/www;\n    error_page        404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    scgi_pass         backend:9000;\n    ...\n\n    scgi_store        on;\n    scgi_store_access user:rw group:rw all:r;\n    scgi_temp_path    /data/temp;\n\n    alias             /data/www/;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "scgi_store_access",
          "default": "user:rw",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`users`*:*`permissions`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets access permissions for newly created files and directories, e.g.:\n```\nscgi_store_access user:rw group:rw all:r;\n```\n\nIf any `group` or `all` access permissions\nare specified then `user` permissions may be omitted:\n```\nscgi_store_access group:rw all:r;\n```",
          "description_html": "\u003cp\u003eSets access permissions for newly created files and directories, e.g.:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_store_access user:rw group:rw all:r;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf any \u003ccode\u003egroup\u003c/code\u003e or \u003ccode\u003eall\u003c/code\u003e access permissions\nare specified then \u003ccode\u003euser\u003c/code\u003e permissions may be omitted:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_store_access group:rw all:r;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "scgi_temp_file_write_size",
          "default": "8k|16k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Limits the *`size`* of data written to a temporary file\nat a time, when buffering of responses from the SCGI server\nto temporary files is enabled.\nBy default, *`size`* is limited by two buffers set by the\n[`scgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size) and [`scgi_buffers`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers) directives.\nThe maximum size of a temporary file is set by the\n[`scgi_max_temp_file_size`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_max_temp_file_size) directive.",
          "description_html": "\u003cp\u003eLimits the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of data written to a temporary file\nat a time, when buffering of responses from the SCGI server\nto temporary files is enabled.\nBy default, \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e is limited by two buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003escgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003escgi_buffers\u003c/code\u003e\u003c/a\u003e directives.\nThe maximum size of a temporary file is set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_max_temp_file_size\" target=\"_blank\"\u003e\u003ccode\u003escgi_max_temp_file_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "scgi_temp_path",
          "default": "scgi_temp",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`path`* [*`level1`* [*`level2`* [*`level3`*]]]"
          ],
          "isBlock": false,
          "description_md": "Defines a directory for storing temporary files\nwith data received from SCGI servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\n```\nscgi_temp_path /spool/nginx/scgi_temp 1 2;\n```\na temporary file might look like this:\n```\n/spool/nginx/scgi_temp/7/45/00000123457\n```\n\nSee also the `use_temp_path` parameter of the\n[`scgi_cache_path`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_path) directive.",
          "description_html": "\u003cp\u003eDefines a directory for storing temporary files\nwith data received from SCGI servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003escgi_temp_path /spool/nginx/scgi_temp 1 2;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ea temporary file might look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/spool/nginx/scgi_temp/7/45/00000123457\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee also the \u003ccode\u003euse_temp_path\u003c/code\u003e parameter of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_cache_path\" target=\"_blank\"\u003e\u003ccode\u003escgi_cache_path\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_secure_link_module.html",
      "name": "ngx_http_secure_link_module",
      "directives": [
        {
          "name": "secure_link",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`expression`*"
          ],
          "isBlock": false,
          "description_md": "Defines a string with variables from which the\nchecksum value and lifetime of a link will be extracted.\n\nVariables used in an *`expression`* are usually associated\nwith a request; see [example](https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5) below.\n\nThe checksum value extracted from the string is compared with\nthe MD5 hash value of the expression defined by the\n[`secure_link_md5`](https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5) directive.\nIf the checksums are different, the `$secure_link` variable\nis set to an empty string.\nIf the checksums are the same, the link lifetime is checked.\nIf the link has a limited lifetime and the time has expired,\nthe `$secure_link` variable is set to “`0`”.\nOtherwise, it is set to “`1`”.\nThe MD5 hash value passed in a request is encoded in\n[base64url](https://datatracker.ietf.org/doc/html/rfc4648#section-5).\n\nIf a link has a limited lifetime, the expiration time\nis set in seconds since Epoch (Thu, 01 Jan 1970 00:00:00 GMT).\nThe value is specified in the expression after the MD5 hash,\nand is separated by a comma.\nThe expiration time passed in a request is available through\nthe `$secure_link_expires` variable for a use in\nthe [`secure_link_md5`](https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5) directive.\nIf the expiration time is not specified, a link has the unlimited\nlifetime.",
          "description_html": "\u003cp\u003eDefines a string with variables from which the\nchecksum value and lifetime of a link will be extracted.\u003c/p\u003e\n\n\u003cp\u003eVariables used in an \u003cem\u003e\u003ccode\u003eexpression\u003c/code\u003e\u003c/em\u003e are usually associated\nwith a request; see \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5\" target=\"_blank\"\u003eexample\u003c/a\u003e below.\u003c/p\u003e\n\n\u003cp\u003eThe checksum value extracted from the string is compared with\nthe MD5 hash value of the expression defined by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5\" target=\"_blank\"\u003e\u003ccode\u003esecure_link_md5\u003c/code\u003e\u003c/a\u003e directive.\nIf the checksums are different, the \u003ccode\u003e$secure_link\u003c/code\u003e variable\nis set to an empty string.\nIf the checksums are the same, the link lifetime is checked.\nIf the link has a limited lifetime and the time has expired,\nthe \u003ccode\u003e$secure_link\u003c/code\u003e variable is set to “\u003ccode\u003e0\u003c/code\u003e”.\nOtherwise, it is set to “\u003ccode\u003e1\u003c/code\u003e”.\nThe MD5 hash value passed in a request is encoded in\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc4648#section-5\" target=\"_blank\"\u003ebase64url\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf a link has a limited lifetime, the expiration time\nis set in seconds since Epoch (Thu, 01 Jan 1970 00:00:00 GMT).\nThe value is specified in the expression after the MD5 hash,\nand is separated by a comma.\nThe expiration time passed in a request is available through\nthe \u003ccode\u003e$secure_link_expires\u003c/code\u003e variable for a use in\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_secure_link_module.html#secure_link_md5\" target=\"_blank\"\u003e\u003ccode\u003esecure_link_md5\u003c/code\u003e\u003c/a\u003e directive.\nIf the expiration time is not specified, a link has the unlimited\nlifetime.\u003c/p\u003e\n"
        },
        {
          "name": "secure_link_md5",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`expression`*"
          ],
          "isBlock": false,
          "description_md": "Defines an expression for which the MD5 hash value will\nbe computed and compared with the value passed in a request.\n\nThe expression should contain the secured part of a link (resource)\nand a secret ingredient.\nIf the link has a limited lifetime,\nthe expression should also contain `$secure_link_expires`.\n\nTo prevent unauthorized access, the expression may contain some\ninformation about the client, such as its address and browser version.\n\nExample:\n```\nlocation /s/ {\n    secure_link $arg_md5,$arg_expires;\n    secure_link_md5 \"$secure_link_expires$uri$remote_addr secret\";\n\n    if ($secure_link = \"\") {\n        return 403;\n    }\n\n    if ($secure_link = \"0\") {\n        return 410;\n    }\n\n    ...\n}\n```\nThe\n“`/s/link?md5=_e4Nc3iduzkWRm01TBBNYw\u0026expires=2147483647`”\nlink\nrestricts access to “`/s/link`” for the client with the\nIP address 127.0.0.1.\nThe link also has the limited lifetime until January 19, 2038 (GMT).\n\nOn UNIX, the *`md5`* request argument value can be obtained as:\n```\necho -n '2147483647/s/link127.0.0.1 secret' | \\\n    openssl md5 -binary | openssl base64 | tr +/ -_ | tr -d =\n```",
          "description_html": "\u003cp\u003eDefines an expression for which the MD5 hash value will\nbe computed and compared with the value passed in a request.\u003c/p\u003e\n\n\u003cp\u003eThe expression should contain the secured part of a link (resource)\nand a secret ingredient.\nIf the link has a limited lifetime,\nthe expression should also contain \u003ccode\u003e$secure_link_expires\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo prevent unauthorized access, the expression may contain some\ninformation about the client, such as its address and browser version.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /s/ {\n    secure_link $arg_md5,$arg_expires;\n    secure_link_md5 \u0026quot;$secure_link_expires$uri$remote_addr secret\u0026quot;;\n\n    if ($secure_link = \u0026quot;\u0026quot;) {\n        return 403;\n    }\n\n    if ($secure_link = \u0026quot;0\u0026quot;) {\n        return 410;\n    }\n\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe\n“\u003ccode\u003e/s/link?md5=_e4Nc3iduzkWRm01TBBNYw\u0026amp;expires=2147483647\u003c/code\u003e”\nlink\nrestricts access to “\u003ccode\u003e/s/link\u003c/code\u003e” for the client with the\nIP address 127.0.0.1.\nThe link also has the limited lifetime until January 19, 2038 (GMT).\u003c/p\u003e\n\n\u003cp\u003eOn UNIX, the \u003cem\u003e\u003ccode\u003emd5\u003c/code\u003e\u003c/em\u003e request argument value can be obtained as:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eecho -n '2147483647/s/link127.0.0.1 secret' | \\\n    openssl md5 -binary | openssl base64 | tr +/ -_ | tr -d =\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "secure_link_secret",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            "*`word`*"
          ],
          "isBlock": false,
          "description_md": "Defines a secret *`word`* used to check authenticity\nof requested links.\n\nThe full URI of a requested link looks as follows:\n```\n/*`prefix`*/*`hash`*/*`link`*\n```\nwhere *`hash`* is a hexadecimal representation of the\nMD5 hash computed for the concatenation of the link and secret word,\nand *`prefix`* is an arbitrary string without slashes.\n\nIf the requested link passes the authenticity check,\nthe `$secure_link` variable is set to the link\nextracted from the request URI.\nOtherwise, the `$secure_link` variable\nis set to an empty string.\n\nExample:\n```\nlocation /p/ {\n    secure_link_secret secret;\n\n    if ($secure_link = \"\") {\n        return 403;\n    }\n\n    rewrite ^ /secure/$secure_link;\n}\n\nlocation /secure/ {\n    internal;\n}\n```\nA request of “`/p/5e814704a28d9bc1914ff19fa0c4a00a/link`”\nwill be internally redirected to\n“`/secure/link`”.\n\nOn UNIX, the hash value for this example can be obtained as:\n```\necho -n 'linksecret' | openssl md5 -hex\n```",
          "description_html": "\u003cp\u003eDefines a secret \u003cem\u003e\u003ccode\u003eword\u003c/code\u003e\u003c/em\u003e used to check authenticity\nof requested links.\u003c/p\u003e\n\n\u003cp\u003eThe full URI of a requested link looks as follows:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/*`prefix`*/*`hash`*/*`link`*\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ewhere \u003cem\u003e\u003ccode\u003ehash\u003c/code\u003e\u003c/em\u003e is a hexadecimal representation of the\nMD5 hash computed for the concatenation of the link and secret word,\nand \u003cem\u003e\u003ccode\u003eprefix\u003c/code\u003e\u003c/em\u003e is an arbitrary string without slashes.\u003c/p\u003e\n\n\u003cp\u003eIf the requested link passes the authenticity check,\nthe \u003ccode\u003e$secure_link\u003c/code\u003e variable is set to the link\nextracted from the request URI.\nOtherwise, the \u003ccode\u003e$secure_link\u003c/code\u003e variable\nis set to an empty string.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /p/ {\n    secure_link_secret secret;\n\n    if ($secure_link = \u0026quot;\u0026quot;) {\n        return 403;\n    }\n\n    rewrite ^ /secure/$secure_link;\n}\n\nlocation /secure/ {\n    internal;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA request of “\u003ccode\u003e/p/5e814704a28d9bc1914ff19fa0c4a00a/link\u003c/code\u003e”\nwill be internally redirected to\n“\u003ccode\u003e/secure/link\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eOn UNIX, the hash value for this example can be obtained as:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eecho -n 'linksecret' | openssl md5 -hex\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_session_log_module.html",
      "name": "ngx_http_session_log_module",
      "directives": [
        {
          "name": "session_log",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`* | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the use of the specified session log.\nThe special value `off` cancels the effect\nof the `session_log` directives\ninherited from the previous configuration level.",
          "description_html": "\u003cp\u003eEnables the use of the specified session log.\nThe special value \u003ccode\u003eoff\u003c/code\u003e cancels the effect\nof the \u003ccode\u003esession_log\u003c/code\u003e directives\ninherited from the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "session_log_format",
          "default": "combined \"...\"",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`name`* *`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Specifies the output format of a log.\nThe value of the `$body_bytes_sent` variable is aggregated across\nall requests in a session.\nThe values of all other variables available for logging correspond to the\nfirst request in a session.",
          "description_html": "\u003cp\u003eSpecifies the output format of a log.\nThe value of the \u003ccode\u003e$body_bytes_sent\u003c/code\u003e variable is aggregated across\nall requests in a session.\nThe values of all other variables available for logging correspond to the\nfirst request in a session.\u003c/p\u003e\n"
        },
        {
          "name": "session_log_zone",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`path`* `zone`=*`name`*:*`size`* [`format`=*`format`*] [`timeout`=*`time`*] [`id`=*`id`*] [`md5`=*`md5`*]"
          ],
          "isBlock": false,
          "description_md": "Sets the path to a log file and configures the shared memory zone that is used\nto store currently active sessions.\n\nA session is considered active for as long as the time elapsed since\nthe last request in the session does not exceed the specified\n`timeout` (by default, 30 seconds).\nOnce a session is no longer active, it is written to the log.\n\nThe `id` parameter identifies the\nsession to which a request is mapped.\nThe `id` parameter is set to the hexadecimal representation\nof an MD5 hash (for example, obtained from a cookie using variables).\nIf this parameter is not specified or does not represent the valid\nMD5 hash, nginx computes the MD5 hash from the value of\nthe `md5` parameter and creates a new session using this hash.\nBoth the `id` and `md5` parameters\ncan contain variables.\n\nThe `format` parameter sets the custom session log\nformat configured by the [`session_log_format`](https://nginx.org/en/docs/http/ngx_http_session_log_module.html#session_log_format) directive.\nIf `format` is not specified, the predefined\n“`combined`” format is used.",
          "description_html": "\u003cp\u003eSets the path to a log file and configures the shared memory zone that is used\nto store currently active sessions.\u003c/p\u003e\n\n\u003cp\u003eA session is considered active for as long as the time elapsed since\nthe last request in the session does not exceed the specified\n\u003ccode\u003etimeout\u003c/code\u003e (by default, 30 seconds).\nOnce a session is no longer active, it is written to the log.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eid\u003c/code\u003e parameter identifies the\nsession to which a request is mapped.\nThe \u003ccode\u003eid\u003c/code\u003e parameter is set to the hexadecimal representation\nof an MD5 hash (for example, obtained from a cookie using variables).\nIf this parameter is not specified or does not represent the valid\nMD5 hash, nginx computes the MD5 hash from the value of\nthe \u003ccode\u003emd5\u003c/code\u003e parameter and creates a new session using this hash.\nBoth the \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003emd5\u003c/code\u003e parameters\ncan contain variables.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eformat\u003c/code\u003e parameter sets the custom session log\nformat configured by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_session_log_module.html#session_log_format\" target=\"_blank\"\u003e\u003ccode\u003esession_log_format\u003c/code\u003e\u003c/a\u003e directive.\nIf \u003ccode\u003eformat\u003c/code\u003e is not specified, the predefined\n“\u003ccode\u003ecombined\u003c/code\u003e” format is used.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_slice_module.html",
      "name": "ngx_http_slice_module",
      "directives": [
        {
          "name": "slice",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the slice.\nThe zero value disables splitting responses into slices.\nNote that a too low value may result in excessive memory usage\nand opening a large number of files.\n\nIn order for a subrequest to return the required range,\nthe `$slice_range` variable should be\n[passed](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header) to\nthe proxied server as the `Range` request header field.\nIf\n[caching](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache)\nis enabled, `$slice_range` should be added to the\n[cache key](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key)\nand caching of responses with 206 status code should be\n[enabled](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_valid).",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the slice.\nThe zero value disables splitting responses into slices.\nNote that a too low value may result in excessive memory usage\nand opening a large number of files.\u003c/p\u003e\n\n\u003cp\u003eIn order for a subrequest to return the required range,\nthe \u003ccode\u003e$slice_range\u003c/code\u003e variable should be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header\" target=\"_blank\"\u003epassed\u003c/a\u003e to\nthe proxied server as the \u003ccode\u003eRange\u003c/code\u003e request header field.\nIf\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache\" target=\"_blank\"\u003ecaching\u003c/a\u003e\nis enabled, \u003ccode\u003e$slice_range\u003c/code\u003e should be added to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e\nand caching of responses with 206 status code should be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_valid\" target=\"_blank\"\u003eenabled\u003c/a\u003e.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_split_clients_module.html",
      "name": "ngx_http_split_clients_module",
      "directives": [
        {
          "name": "split_clients",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`string`* *`$variable`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Creates a variable for A/B testing, for example:\n```\nsplit_clients \"${remote_addr}AAA\" $variant {\n               0.5%               .one;\n               2.0%               .two;\n               *                  \"\";\n}\n```\nThe value of the original string is hashed using MurmurHash2.\nIn the example given, hash values from 0 to 21474835 (0.5%)\ncorrespond to the\nvalue `\".one\"` of the `$variant` variable,\nhash values from 21474836 to 107374180 (2%) correspond to\nthe value `\".two\"`,\nand hash values from 107374181 to 4294967295 correspond to\nthe value `\"\"` (an empty string).",
          "description_html": "\u003cp\u003eCreates a variable for A/B testing, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esplit_clients \u0026quot;${remote_addr}AAA\u0026quot; $variant {\n               0.5%               .one;\n               2.0%               .two;\n               *                  \u0026quot;\u0026quot;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe value of the original string is hashed using MurmurHash2.\nIn the example given, hash values from 0 to 21474835 (0.5%)\ncorrespond to the\nvalue \u003ccode\u003e\u0026quot;.one\u0026quot;\u003c/code\u003e of the \u003ccode\u003e$variant\u003c/code\u003e variable,\nhash values from 21474836 to 107374180 (2%) correspond to\nthe value \u003ccode\u003e\u0026quot;.two\u0026quot;\u003c/code\u003e,\nand hash values from 107374181 to 4294967295 correspond to\nthe value \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e (an empty string).\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_ssi_module.html",
      "name": "ngx_http_ssi_module",
      "directives": [
        {
          "name": "ssi",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location",
            "if in location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables processing of SSI commands in responses.",
          "description_html": "\u003cp\u003eEnables or disables processing of SSI commands in responses.\u003c/p\u003e\n"
        },
        {
          "name": "ssi_last_modified",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Allows preserving the \"Last-Modified\" header field\nfrom the original response during SSI processing\nto facilitate response caching.\n\nBy default, the header field is removed as contents of the response\nare modified during processing and may contain dynamically generated elements\nor parts that are changed independently of the original response.",
          "description_html": "\u003cp\u003eAllows preserving the \u0026ldquo;Last-Modified\u0026rdquo; header field\nfrom the original response during SSI processing\nto facilitate response caching.\u003c/p\u003e\n\n\u003cp\u003eBy default, the header field is removed as contents of the response\nare modified during processing and may contain dynamically generated elements\nor parts that are changed independently of the original response.\u003c/p\u003e\n"
        },
        {
          "name": "ssi_min_file_chunk",
          "default": "1k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`size`"
          ],
          "isBlock": false,
          "description_md": "Sets the minimum *`size`* for parts of a response stored on disk,\nstarting from which it makes sense to send them using\n[`sendfile`](https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile).",
          "description_html": "\u003cp\u003eSets the minimum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e for parts of a response stored on disk,\nstarting from which it makes sense to send them using\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile\" target=\"_blank\"\u003e\u003ccode\u003esendfile\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "ssi_silent_errors",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "If enabled, suppresses the output of the\n“`[an error occurred while processing the directive]`”\nstring if an error occurred during SSI processing.",
          "description_html": "\u003cp\u003eIf enabled, suppresses the output of the\n“\u003ccode\u003e[an error occurred while processing the directive]\u003c/code\u003e”\nstring if an error occurred during SSI processing.\u003c/p\u003e\n"
        },
        {
          "name": "ssi_types",
          "default": "text/html",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`mime-type`* ..."
          ],
          "isBlock": false,
          "description_md": "Enables processing of SSI commands in responses with the specified MIME types\nin addition to “`text/html`”.\nThe special value “`*`” matches any MIME type (0.8.29).",
          "description_html": "\u003cp\u003eEnables processing of SSI commands in responses with the specified MIME types\nin addition to “\u003ccode\u003etext/html\u003c/code\u003e”.\nThe special value “\u003ccode\u003e*\u003c/code\u003e” matches any MIME type (0.8.29).\u003c/p\u003e\n"
        },
        {
          "name": "ssi_value_length",
          "default": "256",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`length`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum length of parameter values in SSI commands.",
          "description_html": "\u003cp\u003eSets the maximum length of parameter values in SSI commands.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_ssl_module.html",
      "name": "ngx_http_ssl_module",
      "directives": [
        {
          "name": "ssl",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "This directive was made obsolete in version 1.15.0\nand was removed in version 1.25.1.\nThe `ssl` parameter\nof the [`listen`](https://nginx.org/en/docs/http/ngx_http_core_module.html#listen) directive\nshould be used instead.",
          "description_html": "\u003cp\u003eThis directive was made obsolete in version 1.15.0\nand was removed in version 1.25.1.\nThe \u003ccode\u003essl\u003c/code\u003e parameter\nof the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#listen\" target=\"_blank\"\u003e\u003ccode\u003elisten\u003c/code\u003e\u003c/a\u003e directive\nshould be used instead.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_buffer_size",
          "default": "16k",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the size of the buffer used for sending data.\n\nBy default, the buffer size is 16k, which corresponds to minimal\noverhead when sending big responses.\nTo minimize Time To First Byte it may be beneficial to use smaller values,\nfor example:\n```\nssl_buffer_size 4k;\n```",
          "description_html": "\u003cp\u003eSets the size of the buffer used for sending data.\u003c/p\u003e\n\n\u003cp\u003eBy default, the buffer size is 16k, which corresponds to minimal\noverhead when sending big responses.\nTo minimize Time To First Byte it may be beneficial to use smaller values,\nfor example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_buffer_size 4k;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "ssl_certificate",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the certificate in the PEM format\nfor the given virtual server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\n\nSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\n```\nserver {\n    listen              443 ssl;\n    server_name         example.com;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n```\n\u003e Only OpenSSL 1.0.2 or higher supports separate\n\u003e [certificate chains](https://nginx.org/en/docs/http/configuring_https_servers.html#chains)\n\u003e for different certificates.\n\u003e With older versions, only one certificate chain can be used.\n\nSince version 1.15.9, variables can be used in the *`file`* name\nwhen using OpenSSL 1.0.2 or higher:\n```\nssl_certificate     $ssl_server_name.crt;\nssl_certificate_key $ssl_server_name.key;\n```\nNote that using variables implies that\na certificate will be loaded for each SSL handshake,\nand this may have a negative impact on performance.\n\nThe value\n`data`:*`$variable`*\ncan be specified instead of the *`file`* (1.15.10),\nwhich loads a certificate from a variable\nwithout using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n[error log](https://nginx.org/en/docs/ngx_core_module.html#error_log).\n\nIt should be kept in mind that due to the HTTPS protocol limitations\nfor maximum interoperability virtual servers should listen on\n[different IP addresses](https://nginx.org/en/docs/http/configuring_https_servers.html#name_based_https_servers).",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the certificate in the PEM format\nfor the given virtual server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    listen              443 ssl;\n    server_name         example.com;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOnly OpenSSL 1.0.2 or higher supports separate\n\u003ca href=\"https://nginx.org/en/docs/http/configuring_https_servers.html#chains\" target=\"_blank\"\u003ecertificate chains\u003c/a\u003e\nfor different certificates.\nWith older versions, only one certificate chain can be used.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSince version 1.15.9, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name\nwhen using OpenSSL 1.0.2 or higher:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_certificate     $ssl_server_name.crt;\nssl_certificate_key $ssl_server_name.key;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that using variables implies that\na certificate will be loaded for each SSL handshake,\nand this may have a negative impact on performance.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003edata\u003c/code\u003e:\u003cem\u003e\u003ccode\u003e$variable\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e (1.15.10),\nwhich loads a certificate from a variable\nwithout using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\" target=\"_blank\"\u003eerror log\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIt should be kept in mind that due to the HTTPS protocol limitations\nfor maximum interoperability virtual servers should listen on\n\u003ca href=\"https://nginx.org/en/docs/http/configuring_https_servers.html#name_based_https_servers\" target=\"_blank\"\u003edifferent IP addresses\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_certificate_key",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the secret key in the PEM format\nfor the given virtual server.\n\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`* (1.7.9),\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n\nThe value\n`data`:*`$variable`*\ncan be specified instead of the *`file`* (1.15.10),\nwhich loads a secret key from a variable without using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n[error log](https://nginx.org/en/docs/ngx_core_module.html#error_log).\n\nSince version 1.15.9, variables can be used in the *`file`* name\nwhen using OpenSSL 1.0.2 or higher.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key in the PEM format\nfor the given virtual server.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003eengine\u003c/code\u003e:\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e (1.7.9),\nwhich loads a secret key with a specified \u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\nfrom the OpenSSL engine \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003edata\u003c/code\u003e:\u003cem\u003e\u003ccode\u003e$variable\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e (1.15.10),\nwhich loads a secret key from a variable without using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\" target=\"_blank\"\u003eerror log\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.15.9, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name\nwhen using OpenSSL 1.0.2 or higher.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_ciphers",
          "default": "HIGH:!aNULL:!MD5",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`ciphers`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\n```\nssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n```\n\nThe full list can be viewed using the\n“`openssl ciphers`” command.\n\n\u003e The previous versions of nginx used\n\u003e [different](https://nginx.org/en/docs/http/configuring_https_servers.html#compatibility)\n\u003e ciphers by default.",
          "description_html": "\u003cp\u003eSpecifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe full list can be viewed using the\n“\u003ccode\u003eopenssl ciphers\u003c/code\u003e” command.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe previous versions of nginx used\n\u003ca href=\"https://nginx.org/en/docs/http/configuring_https_servers.html#compatibility\" target=\"_blank\"\u003edifferent\u003c/a\u003e\nciphers by default.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_client_certificate",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client) client certificates and\nOCSP responses if [`ssl_stapling`](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_stapling) is enabled.\n\nThe list of certificates will be sent to clients.\nIf this is not desired, the [`ssl_trusted_certificate`](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate)\ndirective can be used.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003everify\u003c/a\u003e client certificates and\nOCSP responses if \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_stapling\" target=\"_blank\"\u003e\u003ccode\u003essl_stapling\u003c/code\u003e\u003c/a\u003e is enabled.\u003c/p\u003e\n\n\u003cp\u003eThe list of certificates will be sent to clients.\nIf this is not desired, the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate\" target=\"_blank\"\u003e\u003ccode\u003essl_trusted_certificate\u003c/code\u003e\u003c/a\u003e\ndirective can be used.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_conf_command",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`name`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets arbitrary OpenSSL configuration\n[commands](https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html).\n\u003e The directive is supported when using OpenSSL 1.0.2 or higher.\n\nSeveral `ssl_conf_command` directives\ncan be specified on the same level:\n```\nssl_conf_command Options PrioritizeChaCha;\nssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;\n```\nThese directives are inherited from the previous configuration level\nif and only if there are no `ssl_conf_command` directives\ndefined on the current level.\n\n\u003e Note that configuring OpenSSL directly\n\u003e might result in unexpected behavior.",
          "description_html": "\u003cp\u003eSets arbitrary OpenSSL configuration\n\u003ca href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\" target=\"_blank\"\u003ecommands\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is supported when using OpenSSL 1.0.2 or higher.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003essl_conf_command\u003c/code\u003e directives\ncan be specified on the same level:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_conf_command Options PrioritizeChaCha;\nssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003essl_conf_command\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote that configuring OpenSSL directly\nmight result in unexpected behavior.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_crl",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to [verify](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client)\nclient certificates.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with revoked certificates (CRL)\nin the PEM format used to \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003everify\u003c/a\u003e\nclient certificates.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_dhparam",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with DH parameters for DHE ciphers.\n\nBy default no parameters are set,\nand therefore DHE ciphers will not be used.\n\u003e Prior to version 1.11.0, builtin parameters were used by default.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with DH parameters for DHE ciphers.\u003c/p\u003e\n\n\u003cp\u003eBy default no parameters are set,\nand therefore DHE ciphers will not be used.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.11.0, builtin parameters were used by default.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_early_data",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables TLS 1.3\n[early data](https://datatracker.ietf.org/doc/html/rfc8446#section-2.3).\n\u003e Requests sent within early data are subject to\n\u003e [replay attacks](https://datatracker.ietf.org/doc/html/rfc8470).\n\u003e To protect against such attacks at the application layer,\n\u003e the [$ssl_early_data](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#var_ssl_early_data) variable\n\u003e should be used.\n\n\n```\nproxy_set_header Early-Data $ssl_early_data;\n```\n\n\u003e The directive is supported when using OpenSSL 1.1.1 or higher (1.15.4) and\n\u003e [BoringSSL](https://boringssl.googlesource.com/boringssl/).",
          "description_html": "\u003cp\u003eEnables or disables TLS 1.3\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc8446#section-2.3\" target=\"_blank\"\u003eearly data\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eRequests sent within early data are subject to\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc8470\" target=\"_blank\"\u003ereplay attacks\u003c/a\u003e.\nTo protect against such attacks at the application layer,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#var_ssl_early_data\" target=\"_blank\"\u003e$ssl_early_data\u003c/a\u003e variable\nshould be used.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_set_header Early-Data $ssl_early_data;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is supported when using OpenSSL 1.1.1 or higher (1.15.4) and\n\u003ca href=\"https://boringssl.googlesource.com/boringssl/\" target=\"_blank\"\u003eBoringSSL\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_ecdh_curve",
          "default": "auto",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`curve`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`curve`* for ECDHE ciphers.\n\nWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\n```\nssl_ecdh_curve prime256v1:secp384r1;\n```\n\nThe special value `auto` (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor `prime256v1` with older versions.\n\n\u003e Prior to version 1.11.0,\n\u003e the `prime256v1` curve was used by default.\n\n\u003e When using OpenSSL 1.0.2 or higher,\n\u003e this directive sets the list of curves supported by the server.\n\u003e Thus, in order for ECDSA certificates to work,\n\u003e it is important to include the curves used in the certificates.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003ecurve\u003c/code\u003e\u003c/em\u003e for ECDHE ciphers.\u003c/p\u003e\n\n\u003cp\u003eWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_ecdh_curve prime256v1:secp384r1;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe special value \u003ccode\u003eauto\u003c/code\u003e (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor \u003ccode\u003eprime256v1\u003c/code\u003e with older versions.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.11.0,\nthe \u003ccode\u003eprime256v1\u003c/code\u003e curve was used by default.\u003c/p\u003e\n\n\u003cp\u003eWhen using OpenSSL 1.0.2 or higher,\nthis directive sets the list of curves supported by the server.\nThus, in order for ECDSA certificates to work,\nit is important to include the curves used in the certificates.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_ocsp",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off` | `leaf`"
          ],
          "isBlock": false,
          "description_md": "Enables OCSP validation of the client certificate chain.\nThe `leaf` parameter\nenables validation of the client certificate only.\n\nFor the OCSP validation to work,\nthe [`ssl_verify_client`](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client) directive should be set to\n`on` or `optional`.\n\nTo resolve the OCSP responder hostname,\nthe [`resolver`](https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver) directive\nshould also be specified.\n\nExample:\n```\nssl_verify_client on;\nssl_ocsp          on;\nresolver          192.0.2.1;\n```",
          "description_html": "\u003cp\u003eEnables OCSP validation of the client certificate chain.\nThe \u003ccode\u003eleaf\u003c/code\u003e parameter\nenables validation of the client certificate only.\u003c/p\u003e\n\n\u003cp\u003eFor the OCSP validation to work,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003e\u003ccode\u003essl_verify_client\u003c/code\u003e\u003c/a\u003e directive should be set to\n\u003ccode\u003eon\u003c/code\u003e or \u003ccode\u003eoptional\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eTo resolve the OCSP responder hostname,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\" target=\"_blank\"\u003e\u003ccode\u003eresolver\u003c/code\u003e\u003c/a\u003e directive\nshould also be specified.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_verify_client on;\nssl_ocsp          on;\nresolver          192.0.2.1;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "ssl_ocsp_cache",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`off` | [`shared`:*`name`*:*`size`*]"
          ],
          "isBlock": false,
          "description_md": "Sets `name` and `size` of the cache\nthat stores client certificates status for OCSP validation.\nThe cache is shared between all worker processes.\nA cache with the same name can be used in several virtual servers.\n\nThe `off` parameter prohibits the use of the cache.",
          "description_html": "\u003cp\u003eSets \u003ccode\u003ename\u003c/code\u003e and \u003ccode\u003esize\u003c/code\u003e of the cache\nthat stores client certificates status for OCSP validation.\nThe cache is shared between all worker processes.\nA cache with the same name can be used in several virtual servers.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoff\u003c/code\u003e parameter prohibits the use of the cache.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_ocsp_responder",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`url`*"
          ],
          "isBlock": false,
          "description_md": "Overrides the URL of the OCSP responder specified in the\n“[Authority Information Access](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.2.1)” certificate extension\nfor [validation](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_ocsp) of client certificates.\n\nOnly “`http://`” OCSP responders are supported:\n```\nssl_ocsp_responder http://ocsp.example.com/;\n```",
          "description_html": "\u003cp\u003eOverrides the URL of the OCSP responder specified in the\n“\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.2.1\" target=\"_blank\"\u003eAuthority Information Access\u003c/a\u003e” certificate extension\nfor \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_ocsp\" target=\"_blank\"\u003evalidation\u003c/a\u003e of client certificates.\u003c/p\u003e\n\n\u003cp\u003eOnly “\u003ccode\u003ehttp://\u003c/code\u003e” OCSP responders are supported:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_ocsp_responder http://ocsp.example.com/;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "ssl_password_file",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with passphrases for\n[secret keys](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate_key)\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n\nExample:\n```\nhttp {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        server_name www1.example.com;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        server_name www2.example.com;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n```",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with passphrases for\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate_key\" target=\"_blank\"\u003esecret keys\u003c/a\u003e\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        server_name www1.example.com;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        server_name www2.example.com;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "ssl_prefer_server_ciphers",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Specifies that server ciphers should be preferred over client\nciphers when using the SSLv3 and TLS protocols.",
          "description_html": "\u003cp\u003eSpecifies that server ciphers should be preferred over client\nciphers when using the SSLv3 and TLS protocols.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_protocols",
          "default": "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "[`SSLv2`] [`SSLv3`] [`TLSv1`] [`TLSv1.1`] [`TLSv1.2`] [`TLSv1.3`]"
          ],
          "isBlock": false,
          "description_md": "Enables the specified protocols.\n\u003e The `TLSv1.1` and `TLSv1.2` parameters\n\u003e (1.1.13, 1.0.12) work only when OpenSSL 1.0.1 or higher is used.\n\n\u003e The `TLSv1.3` parameter (1.13.0) works only when\n\u003e OpenSSL 1.1.1 or higher is used.\n\n\u003e The `TLSv1.3` parameter is used by default\n\u003e since 1.23.4.",
          "description_html": "\u003cp\u003eEnables the specified protocols.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003eTLSv1.1\u003c/code\u003e and \u003ccode\u003eTLSv1.2\u003c/code\u003e parameters\n(1.1.13, 1.0.12) work only when OpenSSL 1.0.1 or higher is used.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eTLSv1.3\u003c/code\u003e parameter (1.13.0) works only when\nOpenSSL 1.1.1 or higher is used.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eTLSv1.3\u003c/code\u003e parameter is used by default\nsince 1.23.4.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_reject_handshake",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "If enabled, SSL handshakes in\nthe [`server`](https://nginx.org/en/docs/http/ngx_http_core_module.html#server) block will be rejected.\n\nFor example, in the following configuration, SSL handshakes with\nserver names other than `example.com` are rejected:\n```\nserver {\n    listen               443 ssl default_server;\n    ssl_reject_handshake on;\n}\n\nserver {\n    listen              443 ssl;\n    server_name         example.com;\n    ssl_certificate     example.com.crt;\n    ssl_certificate_key example.com.key;\n}\n```",
          "description_html": "\u003cp\u003eIf enabled, SSL handshakes in\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e block will be rejected.\u003c/p\u003e\n\n\u003cp\u003eFor example, in the following configuration, SSL handshakes with\nserver names other than \u003ccode\u003eexample.com\u003c/code\u003e are rejected:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    listen               443 ssl default_server;\n    ssl_reject_handshake on;\n}\n\nserver {\n    listen              443 ssl;\n    server_name         example.com;\n    ssl_certificate     example.com.crt;\n    ssl_certificate_key example.com.key;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "ssl_session_cache",
          "default": "none",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`off` | `none` | [`builtin`[:*`size`*]] [`shared`:*`name`*:*`size`*]"
          ],
          "isBlock": false,
          "description_md": "Sets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\n- `off`\n\n    the use of a session cache is strictly prohibited:\n    nginx explicitly tells a client that sessions may not be reused.\n- `none`\n\n    the use of a session cache is gently disallowed:\n    nginx tells a client that sessions may be reused, but does not\n    actually store session parameters in the cache.\n- `builtin`\n\n    a cache built in OpenSSL; used by one worker process only.\n    The cache size is specified in sessions.\n    If size is not given, it is equal to 20480 sessions.\n    Use of the built-in cache can cause memory fragmentation.\n- `shared`\n\n    a cache shared between all worker processes.\n    The cache size is specified in bytes; one megabyte can store\n    about 4000 sessions.\n    Each shared cache should have an arbitrary name.\n    A cache with the same name can be used in several virtual servers.\n    It is also used to automatically generate, store, and\n    periodically rotate TLS session ticket keys (1.23.2)\n    unless configured explicitly\n    using the [`ssl_session_ticket_key`](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_ticket_key) directive.\n\nBoth cache types can be used simultaneously, for example:\n```\nssl_session_cache builtin:1000 shared:SSL:10m;\n```\nbut using only shared cache without the built-in cache should\nbe more efficient.",
          "description_html": "\u003cp\u003eSets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe use of a session cache is strictly prohibited:\nnginx explicitly tells a client that sessions may not be reused.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enone\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe use of a session cache is gently disallowed:\nnginx tells a client that sessions may be reused, but does not\nactually store session parameters in the cache.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebuiltin\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea cache built in OpenSSL; used by one worker process only.\nThe cache size is specified in sessions.\nIf size is not given, it is equal to 20480 sessions.\nUse of the built-in cache can cause memory fragmentation.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eshared\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea cache shared between all worker processes.\nThe cache size is specified in bytes; one megabyte can store\nabout 4000 sessions.\nEach shared cache should have an arbitrary name.\nA cache with the same name can be used in several virtual servers.\nIt is also used to automatically generate, store, and\nperiodically rotate TLS session ticket keys (1.23.2)\nunless configured explicitly\nusing the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_ticket_key\" target=\"_blank\"\u003e\u003ccode\u003essl_session_ticket_key\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBoth cache types can be used simultaneously, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_session_cache builtin:1000 shared:SSL:10m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ebut using only shared cache without the built-in cache should\nbe more efficient.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_session_ticket_key",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Sets a *`file`* with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\n\nIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\n```\nssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n```\n\nThe *`file`* must contain 80 or 48 bytes\nof random data and can be created using the following command:\n```\nopenssl rand 80 \u003e ticket.key\n```\nDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.",
          "description_html": "\u003cp\u003eSets a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\u003c/p\u003e\n\n\u003cp\u003eIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e must contain 80 or 48 bytes\nof random data and can be created using the following command:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eopenssl rand 80 \u0026gt; ticket.key\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_session_tickets",
          "default": "on",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables session resumption through\n[TLS session tickets](https://datatracker.ietf.org/doc/html/rfc5077).",
          "description_html": "\u003cp\u003eEnables or disables session resumption through\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5077\" target=\"_blank\"\u003eTLS session tickets\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_session_timeout",
          "default": "5m",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a time during which a client may reuse the\nsession parameters.",
          "description_html": "\u003cp\u003eSpecifies a time during which a client may reuse the\nsession parameters.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_stapling",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables\n[stapling of OCSP responses](https://datatracker.ietf.org/doc/html/rfc6066#section-8) by the server.\nExample:\n```\nssl_stapling on;\nresolver 192.0.2.1;\n```\n\nFor the OCSP stapling to work, the certificate of the server certificate\nissuer should be known.\nIf the [`ssl_certificate`](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate) file does\nnot contain intermediate certificates,\nthe certificate of the server certificate issuer should be\npresent in the\n[`ssl_trusted_certificate`](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate) file.\n\nFor a resolution of the OCSP responder hostname,\nthe [`resolver`](https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver) directive\nshould also be specified.",
          "description_html": "\u003cp\u003eEnables or disables\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc6066#section-8\" target=\"_blank\"\u003estapling of OCSP responses\u003c/a\u003e by the server.\nExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_stapling on;\nresolver 192.0.2.1;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eFor the OCSP stapling to work, the certificate of the server certificate\nissuer should be known.\nIf the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate\" target=\"_blank\"\u003e\u003ccode\u003essl_certificate\u003c/code\u003e\u003c/a\u003e file does\nnot contain intermediate certificates,\nthe certificate of the server certificate issuer should be\npresent in the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate\" target=\"_blank\"\u003e\u003ccode\u003essl_trusted_certificate\u003c/code\u003e\u003c/a\u003e file.\u003c/p\u003e\n\n\u003cp\u003eFor a resolution of the OCSP responder hostname,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\" target=\"_blank\"\u003e\u003ccode\u003eresolver\u003c/code\u003e\u003c/a\u003e directive\nshould also be specified.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_stapling_file",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "When set, the stapled OCSP response will be taken from the\nspecified *`file`* instead of querying\nthe OCSP responder specified in the server certificate.\n\nThe file should be in the DER format as produced by the\n“`openssl ocsp`” command.",
          "description_html": "\u003cp\u003eWhen set, the stapled OCSP response will be taken from the\nspecified \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e instead of querying\nthe OCSP responder specified in the server certificate.\u003c/p\u003e\n\n\u003cp\u003eThe file should be in the DER format as produced by the\n“\u003ccode\u003eopenssl ocsp\u003c/code\u003e” command.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_stapling_responder",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`url`*"
          ],
          "isBlock": false,
          "description_md": "Overrides the URL of the OCSP responder specified in the\n“[Authority Information Access](https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.2.1)” certificate extension.\n\nOnly “`http://`” OCSP responders are supported:\n```\nssl_stapling_responder http://ocsp.example.com/;\n```",
          "description_html": "\u003cp\u003eOverrides the URL of the OCSP responder specified in the\n“\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.2.1\" target=\"_blank\"\u003eAuthority Information Access\u003c/a\u003e” certificate extension.\u003c/p\u003e\n\n\u003cp\u003eOnly “\u003ccode\u003ehttp://\u003c/code\u003e” OCSP responders are supported:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_stapling_responder http://ocsp.example.com/;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "ssl_stapling_verify",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables verification of OCSP responses by the server.\n\nFor verification to work, the certificate of the server certificate\nissuer, the root certificate, and all intermediate certificates\nshould be configured as trusted using the\n[`ssl_trusted_certificate`](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate) directive.",
          "description_html": "\u003cp\u003eEnables or disables verification of OCSP responses by the server.\u003c/p\u003e\n\n\u003cp\u003eFor verification to work, the certificate of the server certificate\nissuer, the root certificate, and all intermediate certificates\nshould be configured as trusted using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate\" target=\"_blank\"\u003e\u003ccode\u003essl_trusted_certificate\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_trusted_certificate",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client) client certificates and\nOCSP responses if [`ssl_stapling`](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_stapling) is enabled.\n\nIn contrast to the certificate set by [`ssl_client_certificate`](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_client_certificate),\nthe list of these certificates will not be sent to clients.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003everify\u003c/a\u003e client certificates and\nOCSP responses if \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_stapling\" target=\"_blank\"\u003e\u003ccode\u003essl_stapling\u003c/code\u003e\u003c/a\u003e is enabled.\u003c/p\u003e\n\n\u003cp\u003eIn contrast to the certificate set by \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_client_certificate\" target=\"_blank\"\u003e\u003ccode\u003essl_client_certificate\u003c/code\u003e\u003c/a\u003e,\nthe list of these certificates will not be sent to clients.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_verify_client",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off` | `optional` | `optional_no_ca`"
          ],
          "isBlock": false,
          "description_md": "Enables verification of client certificates.\nThe verification result is stored in the\n[$ssl_client_verify](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#var_ssl_client_verify) variable.\n\nThe `optional` parameter (0.8.7+) requests the client\ncertificate and verifies it if the certificate is present.\n\nThe `optional_no_ca` parameter (1.3.8, 1.2.5)\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through the\n[$ssl_client_cert](https://nginx.org/en/docs/http/ngx_http_ssl_module.html#var_ssl_client_cert) variable.",
          "description_html": "\u003cp\u003eEnables verification of client certificates.\nThe verification result is stored in the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#var_ssl_client_verify\" target=\"_blank\"\u003e$ssl_client_verify\u003c/a\u003e variable.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoptional\u003c/code\u003e parameter (0.8.7+) requests the client\ncertificate and verifies it if the certificate is present.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoptional_no_ca\u003c/code\u003e parameter (1.3.8, 1.2.5)\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_ssl_module.html#var_ssl_client_cert\" target=\"_blank\"\u003e$ssl_client_cert\u003c/a\u003e variable.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_verify_depth",
          "default": "1",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the verification depth in the client certificates chain.",
          "description_html": "\u003cp\u003eSets the verification depth in the client certificates chain.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_status_module.html",
      "name": "ngx_http_status_module",
      "directives": [
        {
          "name": "status",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "The status information will be accessible from the surrounding location.\nAccess to this location should be\n[limited](https://nginx.org/en/docs/http/ngx_http_core_module.html#satisfy).",
          "description_html": "\u003cp\u003eThe status information will be accessible from the surrounding location.\nAccess to this location should be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#satisfy\" target=\"_blank\"\u003elimited\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "status_format",
          "default": "json",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`json`",
            "`jsonp` [*`callback`*]"
          ],
          "isBlock": false,
          "description_md": "By default, status information is output in the JSON format.\n\nAlternatively, data may be output as JSONP.\nThe *`callback`* parameter specifies the name of a callback function.\nParameter value can contain variables.\nIf parameter is omitted, or the computed value is an empty string,\nthen “`ngx_status_jsonp_callback`” is used.",
          "description_html": "\u003cp\u003eBy default, status information is output in the JSON format.\u003c/p\u003e\n\n\u003cp\u003eAlternatively, data may be output as JSONP.\nThe \u003cem\u003e\u003ccode\u003ecallback\u003c/code\u003e\u003c/em\u003e parameter specifies the name of a callback function.\nParameter value can contain variables.\nIf parameter is omitted, or the computed value is an empty string,\nthen “\u003ccode\u003engx_status_jsonp_callback\u003c/code\u003e” is used.\u003c/p\u003e\n"
        },
        {
          "name": "status_zone",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            "*`zone`*"
          ],
          "isBlock": false,
          "description_md": "Enables collection of virtual\n[http](https://nginx.org/en/docs/http/ngx_http_core_module.html#server)\nor\n[stream](https://nginx.org/en/docs/stream/ngx_stream_core_module.html#server)\n(1.7.11) server status information in the specified *`zone`*.\nSeveral servers may share the same zone.",
          "description_html": "\u003cp\u003eEnables collection of virtual\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#server\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#server\" target=\"_blank\"\u003estream\u003c/a\u003e\n(1.7.11) server status information in the specified \u003cem\u003e\u003ccode\u003ezone\u003c/code\u003e\u003c/em\u003e.\nSeveral servers may share the same zone.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_stub_status_module.html",
      "name": "ngx_http_stub_status_module",
      "directives": [
        {
          "name": "stub_status",
          "default": "",
          "contexts": [
            "server",
            "location"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "The basic status information will be accessible from the surrounding location.\n\n\u003e In versions prior to 1.7.5,\n\u003e the directive syntax required an arbitrary argument, for example,\n\u003e “`stub_status on`”.",
          "description_html": "\u003cp\u003eThe basic status information will be accessible from the surrounding location.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn versions prior to 1.7.5,\nthe directive syntax required an arbitrary argument, for example,\n“\u003ccode\u003estub_status on\u003c/code\u003e”.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_sub_module.html",
      "name": "ngx_http_sub_module",
      "directives": [
        {
          "name": "sub_filter",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* *`replacement`*"
          ],
          "isBlock": false,
          "description_md": "Sets a string to replace and a replacement string.\nThe string to replace is matched ignoring the case.\nThe string to replace (1.9.4) and replacement string can contain variables.\nSeveral `sub_filter` directives\ncan be specified on the same configuration level (1.9.4).\nThese directives are inherited from the previous configuration level\nif and only if there are no `sub_filter` directives\ndefined on the current level.",
          "description_html": "\u003cp\u003eSets a string to replace and a replacement string.\nThe string to replace is matched ignoring the case.\nThe string to replace (1.9.4) and replacement string can contain variables.\nSeveral \u003ccode\u003esub_filter\u003c/code\u003e directives\ncan be specified on the same configuration level (1.9.4).\nThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003esub_filter\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n"
        },
        {
          "name": "sub_filter_last_modified",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Allows preserving the \"Last-Modified\" header field\nfrom the original response during replacement\nto facilitate response caching.\n\nBy default, the header field is removed as contents of the response\nare modified during processing.",
          "description_html": "\u003cp\u003eAllows preserving the \u0026ldquo;Last-Modified\u0026rdquo; header field\nfrom the original response during replacement\nto facilitate response caching.\u003c/p\u003e\n\n\u003cp\u003eBy default, the header field is removed as contents of the response\nare modified during processing.\u003c/p\u003e\n"
        },
        {
          "name": "sub_filter_once",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether to look for each string to replace\nonce or repeatedly.",
          "description_html": "\u003cp\u003eIndicates whether to look for each string to replace\nonce or repeatedly.\u003c/p\u003e\n"
        },
        {
          "name": "sub_filter_types",
          "default": "text/html",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`mime-type`* ..."
          ],
          "isBlock": false,
          "description_md": "Enables string replacement in responses with the specified MIME types\nin addition to “`text/html`”.\nThe special value “`*`” matches any MIME type (0.8.29).",
          "description_html": "\u003cp\u003eEnables string replacement in responses with the specified MIME types\nin addition to “\u003ccode\u003etext/html\u003c/code\u003e”.\nThe special value “\u003ccode\u003e*\u003c/code\u003e” matches any MIME type (0.8.29).\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_upstream_conf_module.html",
      "name": "ngx_http_upstream_conf_module",
      "directives": [
        {
          "name": "upstream_conf",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Turns on the HTTP interface of upstream configuration in the surrounding\nlocation.\nAccess to this location should be\n[limited](https://nginx.org/en/docs/http/ngx_http_core_module.html#satisfy).\n\nConfiguration commands can be used to:\n- view the group configuration;\n- view, modify, or remove a server;\n- add a new server.\n\n\u003e Since addresses in a group are not required to be unique, specific\n\u003e servers in a group are referenced by their IDs.\n\u003e IDs are assigned automatically and shown when adding a new server\n\u003e or viewing the group configuration.\n\nA configuration command consists of parameters passed as request arguments,\nfor example:\n```\nhttp://127.0.0.1/upstream_conf?upstream=backend\n```\n\nThe following parameters are supported:\n\n- `stream=`\n\n    Selects a\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html)\n    upstream server group.\n    Without this parameter, selects an\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html)\n    upstream server group.\n- `upstream=`*`name`*\n\n    Selects a group to work with.\n    This parameter is mandatory.\n- `id=`*`number`*\n\n    Selects a server for viewing, modifying, or removing.\n- `remove=`\n\n    Removes a server from the group.\n- `add=`\n\n    Adds a new server to the group.\n- `backup=`\n\n    Required to add a backup server.\n    \u003e Before version 1.7.2, `backup=`\n    \u003e was also required to view, modify, or remove existing backup servers.\n- `server=`*`address`*\n\n    Same as the “`address`” parameter\n    of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#server)\n    upstream server.\n    \n    When adding a server, it is possible to specify it as a domain name.\n    In this case, changes of the IP addresses that correspond to a domain name\n    will be monitored and automatically applied to the upstream\n    configuration without the need of restarting nginx (1.7.2).\n    This requires the “`resolver`” directive in the\n    [http](https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver)\n    block.\n    See also the “`resolve`” parameter\n    of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#resolve)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#resolve)\n    upstream server.\n- `service=`*`name`*\n\n    Same as the “`service`” parameter\n    of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#service)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#service)\n    upstream server (1.9.13).\n- `weight=`*`number`*\n\n    Same as the “`weight`” parameter\n    of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#weight)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#weight)\n    upstream server.\n- `max_conns=`*`number`*\n\n    Same as the “`max_conns`” parameter\n    of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_conns)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#max_conns)\n    upstream server.\n- `max_fails=`*`number`*\n\n    Same as the “`max_fails`” parameter\n    of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#max_fails)\n    upstream server.\n- `fail_timeout=`*`time`*\n\n    Same as the “`fail_timeout`” parameter\n    of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#fail_timeout)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#fail_timeout)\n    upstream server.\n- `slow_start=`*`time`*\n\n    Same as the “`slow_start`” parameter\n    of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#slow_start)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#slow_start)\n    upstream server.\n- `down=`\n\n    Same as the “`down`” parameter\n    of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#down)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#down)\n    upstream server.\n- `drain=`\n\n    Puts the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html)\n    upstream server into the “draining” mode (1.7.5).\n    In this mode, only requests\n    [bound](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#sticky) to the server\n    will be proxied to it.\n- `up=`\n\n    The opposite of the “`down`” parameter\n    of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#down)\n    or\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#down)\n    upstream server.\n- `route=`*`string`*\n\n    Same as the “`route`” parameter of the\n    [http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#route)\n    upstream server.\n\n\nThe first three parameters select an object.\nThis can be either the whole http or stream upstream server group,\nor a specific server.\nWithout other parameters, the configuration of the selected\ngroup or server is shown.\n\nFor example, to view the configuration of the whole group, send:\n```\nhttp://127.0.0.1/upstream_conf?upstream=backend\n```\n\nTo view the configuration of a specific server, also specify its ID:\n```\nhttp://127.0.0.1/upstream_conf?upstream=backend\u0026id=42\n```\n\nTo add a new server,\nspecify its address in the “`server=`” parameter.\nWithout other parameters specified, a server will be added with other\nparameters set to their default values (see the\n[http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server)\nor\n[stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#server)\n“`server`” directive).\n\nFor example, to add a new primary server, send:\n```\nhttp://127.0.0.1/upstream_conf?add=\u0026upstream=backend\u0026server=127.0.0.1:8080\n```\n\nTo add a new backup server, send:\n```\nhttp://127.0.0.1/upstream_conf?add=\u0026upstream=backend\u0026backup=\u0026server=127.0.0.1:8080\n```\n\nTo add a new primary server,\nset its parameters to non-default values\nand mark it as “`down`”, send:\n```\nhttp://127.0.0.1/upstream_conf?add=\u0026upstream=backend\u0026server=127.0.0.1:8080\u0026weight=2\u0026down=\n```\n\nTo remove a server, specify its ID:\n```\nhttp://127.0.0.1/upstream_conf?remove=\u0026upstream=backend\u0026id=42\n```\n\nTo mark an existing server as “`down`”, send:\n```\nhttp://127.0.0.1/upstream_conf?upstream=backend\u0026id=42\u0026down=\n```\n\nTo modify the address of an existing server, send:\n```\nhttp://127.0.0.1/upstream_conf?upstream=backend\u0026id=42\u0026server=192.0.2.3:8123\n```\n\nTo modify other parameters of an existing server, send:\n```\nhttp://127.0.0.1/upstream_conf?upstream=backend\u0026id=42\u0026max_fails=3\u0026weight=4\n```\n\nThe above examples are for an\n[http](https://nginx.org/en/docs/http/ngx_http_upstream_module.html)\nupstream server group.\nSimilar examples for a\n[stream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html)\nupstream server group require the “`stream=`” parameter.",
          "description_html": "\u003cp\u003eTurns on the HTTP interface of upstream configuration in the surrounding\nlocation.\nAccess to this location should be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#satisfy\" target=\"_blank\"\u003elimited\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eConfiguration commands can be used to:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eview the group configuration;\u003c/li\u003e\n\u003cli\u003eview, modify, or remove a server;\u003c/li\u003e\n\u003cli\u003eadd a new server.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSince addresses in a group are not required to be unique, specific\nservers in a group are referenced by their IDs.\nIDs are assigned automatically and shown when adding a new server\nor viewing the group configuration.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eA configuration command consists of parameters passed as request arguments,\nfor example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/upstream_conf?upstream=backend\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe following parameters are supported:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003estream=\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eSelects a\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server group.\nWithout this parameter, selects an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nupstream server group.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eupstream=\u003c/code\u003e\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSelects a group to work with.\nThis parameter is mandatory.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eid=\u003c/code\u003e\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSelects a server for viewing, modifying, or removing.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eremove=\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eRemoves a server from the group.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eadd=\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAdds a new server to the group.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebackup=\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eRequired to add a backup server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore version 1.7.2, \u003ccode\u003ebackup=\u003c/code\u003e\nwas also required to view, modify, or remove existing backup servers.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eserver=\u003c/code\u003e\u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSame as the “\u003ccode\u003eaddress\u003c/code\u003e” parameter\nof the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#server\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server.\u003c/p\u003e\n\n\u003cp\u003eWhen adding a server, it is possible to specify it as a domain name.\nIn this case, changes of the IP addresses that correspond to a domain name\nwill be monitored and automatically applied to the upstream\nconfiguration without the need of restarting nginx (1.7.2).\nThis requires the “\u003ccode\u003eresolver\u003c/code\u003e” directive in the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver\" target=\"_blank\"\u003estream\u003c/a\u003e\nblock.\nSee also the “\u003ccode\u003eresolve\u003c/code\u003e” parameter\nof the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#resolve\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#resolve\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eservice=\u003c/code\u003e\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSame as the “\u003ccode\u003eservice\u003c/code\u003e” parameter\nof the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#service\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#service\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server (1.9.13).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eweight=\u003c/code\u003e\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSame as the “\u003ccode\u003eweight\u003c/code\u003e” parameter\nof the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#weight\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#weight\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emax_conns=\u003c/code\u003e\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSame as the “\u003ccode\u003emax_conns\u003c/code\u003e” parameter\nof the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_conns\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#max_conns\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emax_fails=\u003c/code\u003e\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSame as the “\u003ccode\u003emax_fails\u003c/code\u003e” parameter\nof the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#max_fails\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003efail_timeout=\u003c/code\u003e\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSame as the “\u003ccode\u003efail_timeout\u003c/code\u003e” parameter\nof the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#fail_timeout\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#fail_timeout\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eslow_start=\u003c/code\u003e\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSame as the “\u003ccode\u003eslow_start\u003c/code\u003e” parameter\nof the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#slow_start\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#slow_start\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edown=\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eSame as the “\u003ccode\u003edown\u003c/code\u003e” parameter\nof the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#down\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#down\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edrain=\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ePuts the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nupstream server into the “draining” mode (1.7.5).\nIn this mode, only requests\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#sticky\" target=\"_blank\"\u003ebound\u003c/a\u003e to the server\nwill be proxied to it.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eup=\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eThe opposite of the “\u003ccode\u003edown\u003c/code\u003e” parameter\nof the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#down\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#down\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eroute=\u003c/code\u003e\u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSame as the “\u003ccode\u003eroute\u003c/code\u003e” parameter of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#route\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nupstream server.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe first three parameters select an object.\nThis can be either the whole http or stream upstream server group,\nor a specific server.\nWithout other parameters, the configuration of the selected\ngroup or server is shown.\u003c/p\u003e\n\n\u003cp\u003eFor example, to view the configuration of the whole group, send:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/upstream_conf?upstream=backend\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo view the configuration of a specific server, also specify its ID:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/upstream_conf?upstream=backend\u0026amp;id=42\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo add a new server,\nspecify its address in the “\u003ccode\u003eserver=\u003c/code\u003e” parameter.\nWithout other parameters specified, a server will be added with other\nparameters set to their default values (see the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#server\" target=\"_blank\"\u003estream\u003c/a\u003e\n“\u003ccode\u003eserver\u003c/code\u003e” directive).\u003c/p\u003e\n\n\u003cp\u003eFor example, to add a new primary server, send:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/upstream_conf?add=\u0026amp;upstream=backend\u0026amp;server=127.0.0.1:8080\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo add a new backup server, send:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/upstream_conf?add=\u0026amp;upstream=backend\u0026amp;backup=\u0026amp;server=127.0.0.1:8080\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo add a new primary server,\nset its parameters to non-default values\nand mark it as “\u003ccode\u003edown\u003c/code\u003e”, send:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/upstream_conf?add=\u0026amp;upstream=backend\u0026amp;server=127.0.0.1:8080\u0026amp;weight=2\u0026amp;down=\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo remove a server, specify its ID:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/upstream_conf?remove=\u0026amp;upstream=backend\u0026amp;id=42\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo mark an existing server as “\u003ccode\u003edown\u003c/code\u003e”, send:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/upstream_conf?upstream=backend\u0026amp;id=42\u0026amp;down=\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo modify the address of an existing server, send:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/upstream_conf?upstream=backend\u0026amp;id=42\u0026amp;server=192.0.2.3:8123\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eTo modify other parameters of an existing server, send:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp://127.0.0.1/upstream_conf?upstream=backend\u0026amp;id=42\u0026amp;max_fails=3\u0026amp;weight=4\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe above examples are for an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003ehttp\u003c/a\u003e\nupstream server group.\nSimilar examples for a\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html\" target=\"_blank\"\u003estream\u003c/a\u003e\nupstream server group require the “\u003ccode\u003estream=\u003c/code\u003e” parameter.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_upstream_hc_module.html",
      "name": "ngx_http_upstream_hc_module",
      "directives": [
        {
          "name": "health_check",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            "[*`parameters`*]"
          ],
          "isBlock": false,
          "description_md": "Enables periodic health checks of the servers in a\n[group](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#upstream)\nreferenced in the surrounding location.\n\nThe following optional parameters are supported:\n- `interval`=*`time`*\n\n    sets the interval between two consecutive health checks,\n    by default, 5 seconds.\n- `jitter`=*`time`*\n\n    sets the time within which\n    each health check will be randomly delayed,\n    by default, there is no delay.\n- `fails`=*`number`*\n\n    sets the number of consecutive failed health checks of a particular server\n    after which this server will be considered unhealthy,\n    by default, 1.\n- `passes`=*`number`*\n\n    sets the number of consecutive passed health checks of a particular server\n    after which the server will be considered healthy,\n    by default, 1.\n- `uri`=*`uri`*\n\n    defines the URI used in health check requests,\n    by default, “`/`”.\n- `mandatory` [`persistent`]\n\n    sets the initial “checking” state for a server\n    until the first health check is completed (1.11.7).\n    Client requests are not passed to servers in the “checking” state.\n    If the parameter is not specified,\n    the server will be initially considered healthy.\n    \n    \n    \n    The `persistent` parameter (1.19.7)\n    sets the initial “up” state for a server after reload\n    if the server was considered healthy before reload.\n- `match`=*`name`*\n\n    specifies the `match` block configuring the tests that a\n    response should pass in order for a health check to pass.\n    By default, the response should have status code 2xx or 3xx.\n- `port`=*`number`*\n\n    defines the port used when connecting to a server\n    to perform a health check (1.9.7).\n    By default, equals the\n    [`server`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server) port.\n- `type`=`grpc`\n[`grpc_service`=*`name`*]\n[`grpc_status`=*`code`*]\n\n    enables periodic\n    [health checks](https://github.com/grpc/grpc/blob/master/doc/health-checking.md#grpc-health-checking-protocol) of a gRPC server\n    or a particular gRPC service specified with the optional\n    `grpc_service` parameter (1.19.5).\n    If the server does not support the gRPC Health Checking Protocol,\n    the optional `grpc_status` parameter can be used\n    to specify non-zero gRPC\n    [status](https://github.com/grpc/grpc/blob/master/doc/statuscodes.md#status-codes-and-their-use-in-grpc)\n    (for example,\n    status code “`12`” / “`UNIMPLEMENTED`”)\n    that will be treated as healthy:\n    ```\n    health_check mandatory type=grpc grpc_status=12;\n    ```\n    The `type`=`grpc` parameter\n    must be specified after all other directive parameters,\n    `grpc_service` and `grpc_status`\n    must follow `type`=`grpc`.\n    The parameter is not compatible with\n    [`uri`](https://nginx.org/en/docs/http/ngx_http_upstream_hc_module.html#health_check_uri) or\n    [`match`](https://nginx.org/en/docs/http/ngx_http_upstream_hc_module.html#health_check_match) parameters.\n- `keepalive_time`=*`time`*\n\n    enables [keepalive](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive)\n    connections for health checks and specifies the time during which\n    requests can be processed through one keepalive connection (1.21.7).\n    By default keepalive connections are disabled.",
          "description_html": "\u003cp\u003eEnables periodic health checks of the servers in a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#upstream\" target=\"_blank\"\u003egroup\u003c/a\u003e\nreferenced in the surrounding location.\u003c/p\u003e\n\n\u003cp\u003eThe following optional parameters are supported:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einterval\u003c/code\u003e=\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the interval between two consecutive health checks,\nby default, 5 seconds.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ejitter\u003c/code\u003e=\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the time within which\neach health check will be randomly delayed,\nby default, there is no delay.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003efails\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the number of consecutive failed health checks of a particular server\nafter which this server will be considered unhealthy,\nby default, 1.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epasses\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the number of consecutive passed health checks of a particular server\nafter which the server will be considered healthy,\nby default, 1.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003euri\u003c/code\u003e=\u003cem\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003edefines the URI used in health check requests,\nby default, “\u003ccode\u003e/\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emandatory\u003c/code\u003e [\u003ccode\u003epersistent\u003c/code\u003e]\u003c/p\u003e\n\n\u003cp\u003esets the initial “checking” state for a server\nuntil the first health check is completed (1.11.7).\nClient requests are not passed to servers in the “checking” state.\nIf the parameter is not specified,\nthe server will be initially considered healthy.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003epersistent\u003c/code\u003e parameter (1.19.7)\nsets the initial “up” state for a server after reload\nif the server was considered healthy before reload.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ematch\u003c/code\u003e=\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003especifies the \u003ccode\u003ematch\u003c/code\u003e block configuring the tests that a\nresponse should pass in order for a health check to pass.\nBy default, the response should have status code 2xx or 3xx.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eport\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003edefines the port used when connecting to a server\nto perform a health check (1.9.7).\nBy default, equals the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e port.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etype\u003c/code\u003e=\u003ccode\u003egrpc\u003c/code\u003e\n[\u003ccode\u003egrpc_service\u003c/code\u003e=\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e]\n[\u003ccode\u003egrpc_status\u003c/code\u003e=\u003cem\u003e\u003ccode\u003ecode\u003c/code\u003e\u003c/em\u003e]\u003c/p\u003e\n\n\u003cp\u003eenables periodic\n\u003ca href=\"https://github.com/grpc/grpc/blob/master/doc/health-checking.md#grpc-health-checking-protocol\" target=\"_blank\"\u003ehealth checks\u003c/a\u003e of a gRPC server\nor a particular gRPC service specified with the optional\n\u003ccode\u003egrpc_service\u003c/code\u003e parameter (1.19.5).\nIf the server does not support the gRPC Health Checking Protocol,\nthe optional \u003ccode\u003egrpc_status\u003c/code\u003e parameter can be used\nto specify non-zero gRPC\n\u003ca href=\"https://github.com/grpc/grpc/blob/master/doc/statuscodes.md#status-codes-and-their-use-in-grpc\" target=\"_blank\"\u003estatus\u003c/a\u003e\n(for example,\nstatus code “\u003ccode\u003e12\u003c/code\u003e” / “\u003ccode\u003eUNIMPLEMENTED\u003c/code\u003e”)\nthat will be treated as healthy:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehealth_check mandatory type=grpc grpc_status=12;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe \u003ccode\u003etype\u003c/code\u003e=\u003ccode\u003egrpc\u003c/code\u003e parameter\nmust be specified after all other directive parameters,\n\u003ccode\u003egrpc_service\u003c/code\u003e and \u003ccode\u003egrpc_status\u003c/code\u003e\nmust follow \u003ccode\u003etype\u003c/code\u003e=\u003ccode\u003egrpc\u003c/code\u003e.\nThe parameter is not compatible with\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_hc_module.html#health_check_uri\" target=\"_blank\"\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/a\u003e or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_hc_module.html#health_check_match\" target=\"_blank\"\u003e\u003ccode\u003ematch\u003c/code\u003e\u003c/a\u003e parameters.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ekeepalive_time\u003c/code\u003e=\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eenables \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive\" target=\"_blank\"\u003ekeepalive\u003c/a\u003e\nconnections for health checks and specifies the time during which\nrequests can be processed through one keepalive connection (1.21.7).\nBy default keepalive connections are disabled.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "match",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`name`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Defines the named test set used to verify responses to health check requests.\n\nThe following items can be tested in a response:\n- `status 200;`\n\n    status is 200\n- `status ! 500;`\n\n    status is not 500\n- `status 200 204;`\n\n    status is 200 or 204\n- `status ! 301 302;`\n\n    status is neither 301 nor 302\n- `status 200-399;`\n\n    status is in the range from 200 to 399\n- `status ! 400-599;`\n\n    status is not in the range from 400 to 599\n- `status 301-303 307;`\n\n    status is either 301, 302, 303, or 307\n\n\n- `header Content-Type = text/html;`\n\n    header contains \"Content-Type\"\n    with value `text/html`\n- `header Content-Type != text/html;`\n\n    header contains \"Content-Type\"\n    with value other than `text/html`\n- `header Connection ~ close;`\n\n    header contains \"Connection\"\n    with value matching regular expression `close`\n- `header Connection !~ close;`\n\n    header contains \"Connection\"\n    with value not matching regular expression `close`\n- `header Host;`\n\n    header contains \"Host\"\n- `header ! X-Accel-Redirect;`\n\n    header lacks \"X-Accel-Redirect\"\n\n\n- `body ~ \"Welcome to nginx!\";`\n\n    body matches regular expression “`Welcome to nginx!`”\n- `body !~ \"Welcome to nginx!\";`\n\n    body does not match regular expression “`Welcome to nginx!`”\n\n\n- `require`\n                             *`$variable`*\n                             `...;`\n\n    all specified variables are not empty and not equal to “0” (1.15.9).\n\nIf several tests are specified,\nthe response matches only if it matches all tests.\n\u003e Only the first 256k of the response body are examined.\n\nExamples:\n```\n# status is 200, content type is \"text/html\",\n# and body contains \"Welcome to nginx!\"\nmatch welcome {\n    status 200;\n    header Content-Type = text/html;\n    body ~ \"Welcome to nginx!\";\n}\n```\n\n```\n# status is not one of 301, 302, 303, or 307, and header does not have \"Refresh:\"\nmatch not_redirect {\n    status ! 301-303 307;\n    header ! Refresh;\n}\n```\n\n```\n# status ok and not in maintenance mode\nmatch server_ok {\n    status 200-399;\n    body !~ \"maintenance mode\";\n}\n```\n\n```\n# status is 200 or 204\nmap $upstream_status $good_status {\n    200 1;\n    204 1;\n}\n\nmatch server_ok {\n    require $good_status;\n}\n```",
          "description_html": "\u003cp\u003eDefines the named test set used to verify responses to health check requests.\u003c/p\u003e\n\n\u003cp\u003eThe following items can be tested in a response:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003estatus 200;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003estatus is 200\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003estatus ! 500;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003estatus is not 500\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003estatus 200 204;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003estatus is 200 or 204\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003estatus ! 301 302;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003estatus is neither 301 nor 302\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003estatus 200-399;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003estatus is in the range from 200 to 399\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003estatus ! 400-599;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003estatus is not in the range from 400 to 599\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003estatus 301-303 307;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003estatus is either 301, 302, 303, or 307\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eheader Content-Type = text/html;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eheader contains \u0026ldquo;Content-Type\u0026rdquo;\nwith value \u003ccode\u003etext/html\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eheader Content-Type != text/html;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eheader contains \u0026ldquo;Content-Type\u0026rdquo;\nwith value other than \u003ccode\u003etext/html\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eheader Connection ~ close;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eheader contains \u0026ldquo;Connection\u0026rdquo;\nwith value matching regular expression \u003ccode\u003eclose\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eheader Connection !~ close;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eheader contains \u0026ldquo;Connection\u0026rdquo;\nwith value not matching regular expression \u003ccode\u003eclose\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eheader Host;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eheader contains \u0026ldquo;Host\u0026rdquo;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eheader ! X-Accel-Redirect;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eheader lacks \u0026ldquo;X-Accel-Redirect\u0026rdquo;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebody ~ \u0026quot;Welcome to nginx!\u0026quot;;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ebody matches regular expression “\u003ccode\u003eWelcome to nginx!\u003c/code\u003e”\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebody !~ \u0026quot;Welcome to nginx!\u0026quot;;\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ebody does not match regular expression “\u003ccode\u003eWelcome to nginx!\u003c/code\u003e”\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003erequire\u003c/code\u003e\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e                     *`$variable`*\n                     `...;`\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eall specified variables are not empty and not equal to “0” (1.15.9).\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf several tests are specified,\nthe response matches only if it matches all tests.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOnly the first 256k of the response body are examined.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e# status is 200, content type is \u0026quot;text/html\u0026quot;,\n# and body contains \u0026quot;Welcome to nginx!\u0026quot;\nmatch welcome {\n    status 200;\n    header Content-Type = text/html;\n    body ~ \u0026quot;Welcome to nginx!\u0026quot;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e# status is not one of 301, 302, 303, or 307, and header does not have \u0026quot;Refresh:\u0026quot;\nmatch not_redirect {\n    status ! 301-303 307;\n    header ! Refresh;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e# status ok and not in maintenance mode\nmatch server_ok {\n    status 200-399;\n    body !~ \u0026quot;maintenance mode\u0026quot;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cpre\u003e\u003ccode\u003e# status is 200 or 204\nmap $upstream_status $good_status {\n    200 1;\n    204 1;\n}\n\nmatch server_ok {\n    require $good_status;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_upstream_module.html",
      "name": "ngx_http_upstream_module",
      "directives": [
        {
          "name": "upstream",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`name`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Defines a group of servers.\nServers can listen on different ports.\nIn addition, servers listening on TCP and UNIX-domain sockets\ncan be mixed.\n\nExample:\n```\nupstream backend {\n    server backend1.example.com weight=5;\n    server 127.0.0.1:8080       max_fails=3 fail_timeout=30s;\n    server unix:/tmp/backend3;\n\n    server backup1.example.com  backup;\n}\n```\n\nBy default, requests are distributed between the servers using a\nweighted round-robin balancing method.\nIn the above example, each 7 requests will be distributed as follows:\n5 requests go to `backend1.example.com`\nand one request to each of the second and third servers.\nIf an error occurs during communication with a server, the request will\nbe passed to the next server, and so on until all of the functioning\nservers will be tried.\nIf a successful response could not be obtained from any of the servers,\nthe client will receive the result of the communication with the last server.",
          "description_html": "\u003cp\u003eDefines a group of servers.\nServers can listen on different ports.\nIn addition, servers listening on TCP and UNIX-domain sockets\ncan be mixed.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream backend {\n    server backend1.example.com weight=5;\n    server 127.0.0.1:8080       max_fails=3 fail_timeout=30s;\n    server unix:/tmp/backend3;\n\n    server backup1.example.com  backup;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eBy default, requests are distributed between the servers using a\nweighted round-robin balancing method.\nIn the above example, each 7 requests will be distributed as follows:\n5 requests go to \u003ccode\u003ebackend1.example.com\u003c/code\u003e\nand one request to each of the second and third servers.\nIf an error occurs during communication with a server, the request will\nbe passed to the next server, and so on until all of the functioning\nservers will be tried.\nIf a successful response could not be obtained from any of the servers,\nthe client will receive the result of the communication with the last server.\u003c/p\u003e\n"
        },
        {
          "name": "server",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`address`* [*`parameters`*]"
          ],
          "isBlock": false,
          "description_md": "Defines the *`address`* and other *`parameters`*\nof a server.\nThe address can be specified as a domain name or IP address,\nwith an optional port, or as a UNIX-domain socket path\nspecified after the “`unix:`” prefix.\nIf a port is not specified, the port 80 is used.\nA domain name that resolves to several IP addresses defines\nmultiple servers at once.\n\nThe following parameters can be defined:\n- `weight`=*`number`*\n\n    sets the weight of the server, by default, 1.\n- `max_conns`=*`number`*\n\n    limits the maximum *`number`* of simultaneous active\n    connections to the proxied server (1.11.5).\n    Default value is zero, meaning there is no limit.\n    If the server group does not reside in the [shared memory](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#zone),\n    the limitation works per each worker process.\n    \u003e If [idle keepalive](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive) connections,\n    \u003e multiple [workers](https://nginx.org/en/docs/ngx_core_module.html#worker_processes),\n    \u003e and the [shared memory](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#zone) are enabled,\n    \u003e the total number of active and idle connections to the proxied server\n    \u003e may exceed the `max_conns` value.\n    \n    \u003e Since version 1.5.9 and prior to version 1.11.5,\n    \u003e this parameter was available as part of our\n    \u003e [commercial subscription](https://nginx.com/products/).\n- `max_fails`=*`number`*\n\n    sets the number of unsuccessful attempts to communicate with the server\n    that should happen in the duration set by the `fail_timeout`\n    parameter to consider the server unavailable for a duration also set by the\n    `fail_timeout` parameter.\n    By default, the number of unsuccessful attempts is set to 1.\n    The zero value disables the accounting of attempts.\n    What is considered an unsuccessful attempt is defined by the\n    [`proxy_next_upstream`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream),\n    [`fastcgi_next_upstream`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream),\n    [`uwsgi_next_upstream`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream),\n    [`scgi_next_upstream`](https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream),\n    [`memcached_next_upstream`](https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream), and\n    [`grpc_next_upstream`](https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream)\n    directives.\n- `fail_timeout`=*`time`*\n\n    sets\n    - the time during which the specified number of unsuccessful attempts to\n        communicate with the server should happen to consider the server unavailable;\n    - and the period of time the server will be considered unavailable.\n    \n    By default, the parameter is set to 10 seconds.\n- `backup`\n\n    marks the server as a backup server.\n    It will be passed requests when the primary servers are unavailable.\n    \u003e The parameter cannot be used along with the\n    \u003e [`hash`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#hash), [`ip_hash`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ip_hash), and [`random`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#random)\n    \u003e load balancing methods.\n- `down`\n\n    marks the server as permanently unavailable.\n\nAdditionally,\nthe following parameters are available as part of our\n[commercial subscription](https://nginx.com/products/):\n- `resolve`\n\n    monitors changes of the IP addresses\n    that correspond to a domain name of the server,\n    and automatically modifies the upstream configuration\n    without the need of restarting nginx (1.5.12).\n    The server group must reside in the [shared memory](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#zone).\n    \n    In order for this parameter to work,\n    the `resolver` directive\n    must be specified in the\n    [http](https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver) block\n    or in the corresponding [upstream](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#resolver) block.\n- `route`=*`string`*\n\n    sets the server route name.\n- `service`=*`name`*\n\n    enables resolving of DNS\n    [SRV](https://datatracker.ietf.org/doc/html/rfc2782)\n    records and sets the service *`name`* (1.9.13).\n    In order for this parameter to work, it is necessary to specify\n    the [`resolve`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#resolve) parameter for the server\n    and specify a hostname without a port number.\n    \n    If the service name does not contain a dot (“`.`”), then\n    the [RFC](https://datatracker.ietf.org/doc/html/rfc2782)-compliant name\n    is constructed\n    and the TCP protocol is added to the service prefix.\n    For example, to look up the\n    `_http._tcp.backend.example.com` SRV record,\n    it is necessary to specify the directive:\n    ```\n    server backend.example.com service=http resolve;\n    ```\n    If the service name contains one or more dots, then the name is constructed\n    by joining the service prefix and the server name.\n    For example, to look up the `_http._tcp.backend.example.com`\n    and `server1.backend.example.com` SRV records,\n    it is necessary to specify the directives:\n    ```\n    server backend.example.com service=_http._tcp resolve;\n    server example.com service=server1.backend resolve;\n    ```\n    \n    \n    \n    Highest-priority SRV records\n    (records with the same lowest-number priority value)\n    are resolved as primary servers,\n    the rest of SRV records are resolved as backup servers.\n    If the [`backup`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#backup) parameter is specified for the server,\n    high-priority SRV records are resolved as backup servers,\n    the rest of SRV records are ignored.\n- `slow_start`=*`time`*\n\n    sets the *`time`* during which the server will recover its weight\n    from zero to a nominal value, when unhealthy server becomes\n    [healthy](https://nginx.org/en/docs/http/ngx_http_upstream_hc_module.html#health_check),\n    or when the server becomes available after a period of time\n    it was considered [unavailable](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#fail_timeout).\n    Default value is zero, i.e. slow start is disabled.\n    \u003e The parameter cannot be used along with the\n    \u003e [`hash`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#hash), [`ip_hash`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ip_hash), and [`random`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#random)\n    \u003e load balancing methods.\n- `drain`\n\n    puts the server into the “draining” mode (1.13.6).\n    In this mode, only requests [bound](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#sticky) to the server\n    will be proxied to it.\n    \u003e Prior to version 1.13.6,\n    \u003e the parameter could be changed only with the\n    \u003e [API](https://nginx.org/en/docs/http/ngx_http_api_module.html) module.\n\n\u003e If there is only a single server in a group, `max_fails`,\n\u003e `fail_timeout` and `slow_start` parameters\n\u003e are ignored, and such a server will never be considered unavailable.",
          "description_html": "\u003cp\u003eDefines the \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e and other \u003cem\u003e\u003ccode\u003eparameters\u003c/code\u003e\u003c/em\u003e\nof a server.\nThe address can be specified as a domain name or IP address,\nwith an optional port, or as a UNIX-domain socket path\nspecified after the “\u003ccode\u003eunix:\u003c/code\u003e” prefix.\nIf a port is not specified, the port 80 is used.\nA domain name that resolves to several IP addresses defines\nmultiple servers at once.\u003c/p\u003e\n\n\u003cp\u003eThe following parameters can be defined:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eweight\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the weight of the server, by default, 1.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emax_conns\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003elimits the maximum \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e of simultaneous active\nconnections to the proxied server (1.11.5).\nDefault value is zero, meaning there is no limit.\nIf the server group does not reside in the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#zone\" target=\"_blank\"\u003eshared memory\u003c/a\u003e,\nthe limitation works per each worker process.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive\" target=\"_blank\"\u003eidle keepalive\u003c/a\u003e connections,\nmultiple \u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#worker_processes\" target=\"_blank\"\u003eworkers\u003c/a\u003e,\nand the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#zone\" target=\"_blank\"\u003eshared memory\u003c/a\u003e are enabled,\nthe total number of active and idle connections to the proxied server\nmay exceed the \u003ccode\u003emax_conns\u003c/code\u003e value.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.5.9 and prior to version 1.11.5,\nthis parameter was available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emax_fails\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the number of unsuccessful attempts to communicate with the server\nthat should happen in the duration set by the \u003ccode\u003efail_timeout\u003c/code\u003e\nparameter to consider the server unavailable for a duration also set by the\n\u003ccode\u003efail_timeout\u003c/code\u003e parameter.\nBy default, the number of unsuccessful attempts is set to 1.\nThe zero value disables the accounting of attempts.\nWhat is considered an unsuccessful attempt is defined by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream\" target=\"_blank\"\u003e\u003ccode\u003eproxy_next_upstream\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_next_upstream\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_next_upstream\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_next_upstream\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_next_upstream\" target=\"_blank\"\u003e\u003ccode\u003escgi_next_upstream\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_next_upstream\" target=\"_blank\"\u003e\u003ccode\u003ememcached_next_upstream\u003c/code\u003e\u003c/a\u003e, and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_grpc_module.html#grpc_next_upstream\" target=\"_blank\"\u003e\u003ccode\u003egrpc_next_upstream\u003c/code\u003e\u003c/a\u003e\ndirectives.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003efail_timeout\u003c/code\u003e=\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe time during which the specified number of unsuccessful attempts to\ncommunicate with the server should happen to consider the server unavailable;\u003c/li\u003e\n\u003cli\u003eand the period of time the server will be considered unavailable.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBy default, the parameter is set to 10 seconds.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebackup\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003emarks the server as a backup server.\nIt will be passed requests when the primary servers are unavailable.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe parameter cannot be used along with the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#hash\" target=\"_blank\"\u003e\u003ccode\u003ehash\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ip_hash\" target=\"_blank\"\u003e\u003ccode\u003eip_hash\u003c/code\u003e\u003c/a\u003e, and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#random\" target=\"_blank\"\u003e\u003ccode\u003erandom\u003c/code\u003e\u003c/a\u003e\nload balancing methods.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edown\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003emarks the server as permanently unavailable.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAdditionally,\nthe following parameters are available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eresolve\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003emonitors changes of the IP addresses\nthat correspond to a domain name of the server,\nand automatically modifies the upstream configuration\nwithout the need of restarting nginx (1.5.12).\nThe server group must reside in the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#zone\" target=\"_blank\"\u003eshared memory\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn order for this parameter to work,\nthe \u003ccode\u003eresolver\u003c/code\u003e directive\nmust be specified in the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\" target=\"_blank\"\u003ehttp\u003c/a\u003e block\nor in the corresponding \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#resolver\" target=\"_blank\"\u003eupstream\u003c/a\u003e block.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eroute\u003c/code\u003e=\u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the server route name.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eservice\u003c/code\u003e=\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eenables resolving of DNS\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2782\" target=\"_blank\"\u003eSRV\u003c/a\u003e\nrecords and sets the service \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e (1.9.13).\nIn order for this parameter to work, it is necessary to specify\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#resolve\" target=\"_blank\"\u003e\u003ccode\u003eresolve\u003c/code\u003e\u003c/a\u003e parameter for the server\nand specify a hostname without a port number.\u003c/p\u003e\n\n\u003cp\u003eIf the service name does not contain a dot (“\u003ccode\u003e.\u003c/code\u003e”), then\nthe \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2782\" target=\"_blank\"\u003eRFC\u003c/a\u003e-compliant name\nis constructed\nand the TCP protocol is added to the service prefix.\nFor example, to look up the\n\u003ccode\u003e_http._tcp.backend.example.com\u003c/code\u003e SRV record,\nit is necessary to specify the directive:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver backend.example.com service=http resolve;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf the service name contains one or more dots, then the name is constructed\nby joining the service prefix and the server name.\nFor example, to look up the \u003ccode\u003e_http._tcp.backend.example.com\u003c/code\u003e\nand \u003ccode\u003eserver1.backend.example.com\u003c/code\u003e SRV records,\nit is necessary to specify the directives:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver backend.example.com service=_http._tcp resolve;\nserver example.com service=server1.backend resolve;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHighest-priority SRV records\n(records with the same lowest-number priority value)\nare resolved as primary servers,\nthe rest of SRV records are resolved as backup servers.\nIf the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#backup\" target=\"_blank\"\u003e\u003ccode\u003ebackup\u003c/code\u003e\u003c/a\u003e parameter is specified for the server,\nhigh-priority SRV records are resolved as backup servers,\nthe rest of SRV records are ignored.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eslow_start\u003c/code\u003e=\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e during which the server will recover its weight\nfrom zero to a nominal value, when unhealthy server becomes\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_hc_module.html#health_check\" target=\"_blank\"\u003ehealthy\u003c/a\u003e,\nor when the server becomes available after a period of time\nit was considered \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#fail_timeout\" target=\"_blank\"\u003eunavailable\u003c/a\u003e.\nDefault value is zero, i.e. slow start is disabled.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe parameter cannot be used along with the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#hash\" target=\"_blank\"\u003e\u003ccode\u003ehash\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ip_hash\" target=\"_blank\"\u003e\u003ccode\u003eip_hash\u003c/code\u003e\u003c/a\u003e, and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#random\" target=\"_blank\"\u003e\u003ccode\u003erandom\u003c/code\u003e\u003c/a\u003e\nload balancing methods.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edrain\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eputs the server into the “draining” mode (1.13.6).\nIn this mode, only requests \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#sticky\" target=\"_blank\"\u003ebound\u003c/a\u003e to the server\nwill be proxied to it.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.13.6,\nthe parameter could be changed only with the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\" target=\"_blank\"\u003eAPI\u003c/a\u003e module.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf there is only a single server in a group, \u003ccode\u003emax_fails\u003c/code\u003e,\n\u003ccode\u003efail_timeout\u003c/code\u003e and \u003ccode\u003eslow_start\u003c/code\u003e parameters\nare ignored, and such a server will never be considered unavailable.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "zone",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`name`* [*`size`*]"
          ],
          "isBlock": false,
          "description_md": "Defines the *`name`* and *`size`* of the shared\nmemory zone that keeps the group’s configuration and run-time state that are\nshared between worker processes.\nSeveral groups may share the same zone.\nIn this case, it is enough to specify the *`size`* only once.\n\nAdditionally,\nas part of our [commercial subscription](https://nginx.com/products/),\nsuch groups allow changing the group membership\nor modifying the settings of a particular server\nwithout the need of restarting nginx.\nThe configuration is accessible via the\n[API](https://nginx.org/en/docs/http/ngx_http_api_module.html) module (1.13.3).\n\u003e Prior to version 1.13.3,\n\u003e the configuration was accessible only via a special location\n\u003e handled by\n\u003e [`upstream_conf`](https://nginx.org/en/docs/http/ngx_http_upstream_conf_module.html#upstream_conf).",
          "description_html": "\u003cp\u003eDefines the \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the shared\nmemory zone that keeps the group’s configuration and run-time state that are\nshared between worker processes.\nSeveral groups may share the same zone.\nIn this case, it is enough to specify the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e only once.\u003c/p\u003e\n\n\u003cp\u003eAdditionally,\nas part of our \u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e,\nsuch groups allow changing the group membership\nor modifying the settings of a particular server\nwithout the need of restarting nginx.\nThe configuration is accessible via the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\" target=\"_blank\"\u003eAPI\u003c/a\u003e module (1.13.3).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.13.3,\nthe configuration was accessible only via a special location\nhandled by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_conf_module.html#upstream_conf\" target=\"_blank\"\u003e\u003ccode\u003eupstream_conf\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "state",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* that keeps the state\nof the dynamically configurable group.\n\nExamples:\n```\nstate /var/lib/nginx/state/servers.conf; # path for Linux\nstate /var/db/nginx/state/servers.conf;  # path for FreeBSD\n```\n\nThe state is currently limited to the list of servers with their parameters.\nThe file is read when parsing the configuration and is updated each time\nthe upstream configuration is\n[changed](https://nginx.org/en/docs/http/ngx_http_api_module.html#http_upstreams_http_upstream_name_servers_).\nChanging the file content directly should be avoided.\nThe directive cannot be used\nalong with the [`server`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server) directive.\n\n\u003e Changes made during\n\u003e [configuration reload](https://nginx.org/en/docs/control.html#reconfiguration)\n\u003e or [binary upgrade](https://nginx.org/en/docs/control.html#upgrade)\n\u003e can be lost.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e that keeps the state\nof the dynamically configurable group.\u003c/p\u003e\n\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003estate /var/lib/nginx/state/servers.conf; # path for Linux\nstate /var/db/nginx/state/servers.conf;  # path for FreeBSD\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe state is currently limited to the list of servers with their parameters.\nThe file is read when parsing the configuration and is updated each time\nthe upstream configuration is\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_upstreams_http_upstream_name_servers_\" target=\"_blank\"\u003echanged\u003c/a\u003e.\nChanging the file content directly should be avoided.\nThe directive cannot be used\nalong with the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eChanges made during\n\u003ca href=\"https://nginx.org/en/docs/control.html#reconfiguration\" target=\"_blank\"\u003econfiguration reload\u003c/a\u003e\nor \u003ca href=\"https://nginx.org/en/docs/control.html#upgrade\" target=\"_blank\"\u003ebinary upgrade\u003c/a\u003e\ncan be lost.\u003c/p\u003e\n\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "hash",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`key`* [`consistent`]"
          ],
          "isBlock": false,
          "description_md": "Specifies a load balancing method for a server group\nwhere the client-server mapping is based on the hashed *`key`* value.\nThe *`key`* can contain text, variables, and their combinations.\nNote that adding or removing a server from the group\nmay result in remapping most of the keys to different servers.\nThe method is compatible with the\n[Cache::Memcached](https://metacpan.org/pod/Cache::Memcached)\nPerl library.\n\nIf the `consistent` parameter is specified,\nthe [ketama](https://www.metabrew.com/article/libketama-consistent-hashing-algo-memcached-clients)\nconsistent hashing method will be used instead.\nThe method ensures that only a few keys\nwill be remapped to different servers\nwhen a server is added to or removed from the group.\nThis helps to achieve a higher cache hit ratio for caching servers.\nThe method is compatible with the\n[Cache::Memcached::Fast](https://metacpan.org/pod/Cache::Memcached::Fast)\nPerl library with the *`ketama_points`* parameter set to 160.",
          "description_html": "\u003cp\u003eSpecifies a load balancing method for a server group\nwhere the client-server mapping is based on the hashed \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e value.\nThe \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combinations.\nNote that adding or removing a server from the group\nmay result in remapping most of the keys to different servers.\nThe method is compatible with the\n\u003ca href=\"https://metacpan.org/pod/Cache::Memcached\" target=\"_blank\"\u003eCache::Memcached\u003c/a\u003e\nPerl library.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003econsistent\u003c/code\u003e parameter is specified,\nthe \u003ca href=\"https://www.metabrew.com/article/libketama-consistent-hashing-algo-memcached-clients\" target=\"_blank\"\u003eketama\u003c/a\u003e\nconsistent hashing method will be used instead.\nThe method ensures that only a few keys\nwill be remapped to different servers\nwhen a server is added to or removed from the group.\nThis helps to achieve a higher cache hit ratio for caching servers.\nThe method is compatible with the\n\u003ca href=\"https://metacpan.org/pod/Cache::Memcached::Fast\" target=\"_blank\"\u003eCache::Memcached::Fast\u003c/a\u003e\nPerl library with the \u003cem\u003e\u003ccode\u003eketama_points\u003c/code\u003e\u003c/em\u003e parameter set to 160.\u003c/p\u003e\n"
        },
        {
          "name": "ip_hash",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Specifies that a group should use a load balancing method where requests\nare distributed between servers based on client IP addresses.\nThe first three octets of the client IPv4 address, or the entire IPv6 address,\nare used as a hashing key.\nThe method ensures that requests from the same client will always be\npassed to the same server except when this server is unavailable.\nIn the latter case client requests will be passed to another server.\nMost probably, it will always be the same server as well.\n\u003e IPv6 addresses are supported starting from versions 1.3.2 and 1.2.2.\n\nIf one of the servers needs to be temporarily removed, it should\nbe marked with the `down` parameter in\norder to preserve the current hashing of client IP addresses.\n\nExample:\n```\nupstream backend {\n    ip_hash;\n\n    server backend1.example.com;\n    server backend2.example.com;\n    server backend3.example.com down;\n    server backend4.example.com;\n}\n```\n\n\u003e Until versions 1.3.1 and 1.2.2, it was not possible to specify a weight for\n\u003e servers using the `ip_hash` load balancing method.",
          "description_html": "\u003cp\u003eSpecifies that a group should use a load balancing method where requests\nare distributed between servers based on client IP addresses.\nThe first three octets of the client IPv4 address, or the entire IPv6 address,\nare used as a hashing key.\nThe method ensures that requests from the same client will always be\npassed to the same server except when this server is unavailable.\nIn the latter case client requests will be passed to another server.\nMost probably, it will always be the same server as well.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIPv6 addresses are supported starting from versions 1.3.2 and 1.2.2.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIf one of the servers needs to be temporarily removed, it should\nbe marked with the \u003ccode\u003edown\u003c/code\u003e parameter in\norder to preserve the current hashing of client IP addresses.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream backend {\n    ip_hash;\n\n    server backend1.example.com;\n    server backend2.example.com;\n    server backend3.example.com down;\n    server backend4.example.com;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eUntil versions 1.3.1 and 1.2.2, it was not possible to specify a weight for\nservers using the \u003ccode\u003eip_hash\u003c/code\u003e load balancing method.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "keepalive",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`connections`*"
          ],
          "isBlock": false,
          "description_md": "Activates the cache for connections to upstream servers.\n\nThe *`connections`* parameter sets the maximum number of\nidle keepalive connections to upstream servers that are preserved in\nthe cache of each worker process.\nWhen this number is exceeded, the least recently used connections\nare closed.\n\u003e It should be particularly noted that the `keepalive` directive\n\u003e does not limit the total number of connections to upstream servers\n\u003e that an nginx worker process can open.\n\u003e The *`connections`* parameter should be set to a number small enough\n\u003e to let upstream servers process new incoming connections as well.\n\n\n\u003e When using load balancing methods other than the default\n\u003e round-robin method, it is necessary to activate them before\n\u003e the `keepalive` directive.\n\nExample configuration of memcached upstream with keepalive connections:\n```\nupstream memcached_backend {\n    server 127.0.0.1:11211;\n    server 10.0.0.2:11211;\n\n    keepalive 32;\n}\n\nserver {\n    ...\n\n    location /memcached/ {\n        set $memcached_key $uri;\n        memcached_pass memcached_backend;\n    }\n\n}\n```\n\nFor HTTP, the [`proxy_http_version`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version)\ndirective should be set to “`1.1`”\nand the \"Connection\" header field should be cleared:\n```\nupstream http_backend {\n    server 127.0.0.1:8080;\n\n    keepalive 16;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        ...\n    }\n}\n```\n\n\u003e Alternatively, HTTP/1.0 persistent connections can be used by passing the\n\u003e \"Connection: Keep-Alive\" header field to an upstream server,\n\u003e though this method is not recommended.\n\nFor FastCGI servers, it is required to set\n[`fastcgi_keep_conn`](https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_keep_conn)\nfor keepalive connections to work:\n```\nupstream fastcgi_backend {\n    server 127.0.0.1:9000;\n\n    keepalive 8;\n}\n\nserver {\n    ...\n\n    location /fastcgi/ {\n        fastcgi_pass fastcgi_backend;\n        fastcgi_keep_conn on;\n        ...\n    }\n}\n```\n\n\u003e SCGI and uwsgi protocols do not have a notion of keepalive connections.",
          "description_html": "\u003cp\u003eActivates the cache for connections to upstream servers.\u003c/p\u003e\n\n\u003cp\u003eThe \u003cem\u003e\u003ccode\u003econnections\u003c/code\u003e\u003c/em\u003e parameter sets the maximum number of\nidle keepalive connections to upstream servers that are preserved in\nthe cache of each worker process.\nWhen this number is exceeded, the least recently used connections\nare closed.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIt should be particularly noted that the \u003ccode\u003ekeepalive\u003c/code\u003e directive\ndoes not limit the total number of connections to upstream servers\nthat an nginx worker process can open.\nThe \u003cem\u003e\u003ccode\u003econnections\u003c/code\u003e\u003c/em\u003e parameter should be set to a number small enough\nto let upstream servers process new incoming connections as well.\u003c/p\u003e\n\n\u003cp\u003eWhen using load balancing methods other than the default\nround-robin method, it is necessary to activate them before\nthe \u003ccode\u003ekeepalive\u003c/code\u003e directive.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eExample configuration of memcached upstream with keepalive connections:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream memcached_backend {\n    server 127.0.0.1:11211;\n    server 10.0.0.2:11211;\n\n    keepalive 32;\n}\n\nserver {\n    ...\n\n    location /memcached/ {\n        set $memcached_key $uri;\n        memcached_pass memcached_backend;\n    }\n\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eFor HTTP, the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version\" target=\"_blank\"\u003e\u003ccode\u003eproxy_http_version\u003c/code\u003e\u003c/a\u003e\ndirective should be set to “\u003ccode\u003e1.1\u003c/code\u003e”\nand the \u0026ldquo;Connection\u0026rdquo; header field should be cleared:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream http_backend {\n    server 127.0.0.1:8080;\n\n    keepalive 16;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \u0026quot;\u0026quot;;\n        ...\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAlternatively, HTTP/1.0 persistent connections can be used by passing the\n\u0026ldquo;Connection: Keep-Alive\u0026rdquo; header field to an upstream server,\nthough this method is not recommended.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eFor FastCGI servers, it is required to set\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_keep_conn\" target=\"_blank\"\u003e\u003ccode\u003efastcgi_keep_conn\u003c/code\u003e\u003c/a\u003e\nfor keepalive connections to work:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream fastcgi_backend {\n    server 127.0.0.1:9000;\n\n    keepalive 8;\n}\n\nserver {\n    ...\n\n    location /fastcgi/ {\n        fastcgi_pass fastcgi_backend;\n        fastcgi_keep_conn on;\n        ...\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSCGI and uwsgi protocols do not have a notion of keepalive connections.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "keepalive_requests",
          "default": "1000",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum number of requests that can be\nserved through one keepalive connection.\nAfter the maximum number of requests is made, the connection is closed.\n\nClosing connections periodically is necessary to free\nper-connection memory allocations.\nTherefore, using too high maximum number of requests\ncould result in excessive memory usage and not recommended.\n\n\u003e Prior to version 1.19.10, the default value was 100.",
          "description_html": "\u003cp\u003eSets the maximum number of requests that can be\nserved through one keepalive connection.\nAfter the maximum number of requests is made, the connection is closed.\u003c/p\u003e\n\n\u003cp\u003eClosing connections periodically is necessary to free\nper-connection memory allocations.\nTherefore, using too high maximum number of requests\ncould result in excessive memory usage and not recommended.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.19.10, the default value was 100.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "keepalive_time",
          "default": "1h",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Limits the maximum time during which\nrequests can be processed through one keepalive connection.\nAfter this time is reached, the connection is closed\nfollowing the subsequent request processing.",
          "description_html": "\u003cp\u003eLimits the maximum time during which\nrequests can be processed through one keepalive connection.\nAfter this time is reached, the connection is closed\nfollowing the subsequent request processing.\u003c/p\u003e\n"
        },
        {
          "name": "keepalive_timeout",
          "default": "60s",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`timeout`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout during which an idle keepalive\nconnection to an upstream server will stay open.",
          "description_html": "\u003cp\u003eSets a timeout during which an idle keepalive\nconnection to an upstream server will stay open.\u003c/p\u003e\n"
        },
        {
          "name": "ntlm",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Allows proxying requests with\n[NTLM Authentication](https://en.wikipedia.org/wiki/Integrated_Windows_Authentication).\nThe upstream connection is bound to the client connection\nonce the client sends a request with the \"Authorization\"\nheader field value\nstarting with “`Negotiate`” or “`NTLM`”.\nFurther client requests will be proxied through the same upstream connection,\nkeeping the authentication context.\n\nIn order for NTLM authentication to work,\nit is necessary to enable keepalive connections to upstream servers.\nThe [`proxy_http_version`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version)\ndirective should be set to “`1.1`”\nand the \"Connection\" header field should be cleared:\n```\nupstream http_backend {\n    server 127.0.0.1:8080;\n\n    ntlm;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        ...\n    }\n}\n```\n\n\u003e When using load balancer methods other than the default\n\u003e round-robin method, it is necessary to activate them before\n\u003e the `ntlm` directive.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eAllows proxying requests with\n\u003ca href=\"https://en.wikipedia.org/wiki/Integrated_Windows_Authentication\" target=\"_blank\"\u003eNTLM Authentication\u003c/a\u003e.\nThe upstream connection is bound to the client connection\nonce the client sends a request with the \u0026ldquo;Authorization\u0026rdquo;\nheader field value\nstarting with “\u003ccode\u003eNegotiate\u003c/code\u003e” or “\u003ccode\u003eNTLM\u003c/code\u003e”.\nFurther client requests will be proxied through the same upstream connection,\nkeeping the authentication context.\u003c/p\u003e\n\n\u003cp\u003eIn order for NTLM authentication to work,\nit is necessary to enable keepalive connections to upstream servers.\nThe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version\" target=\"_blank\"\u003e\u003ccode\u003eproxy_http_version\u003c/code\u003e\u003c/a\u003e\ndirective should be set to “\u003ccode\u003e1.1\u003c/code\u003e”\nand the \u0026ldquo;Connection\u0026rdquo; header field should be cleared:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream http_backend {\n    server 127.0.0.1:8080;\n\n    ntlm;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \u0026quot;\u0026quot;;\n        ...\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe \u003ccode\u003entlm\u003c/code\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "least_conn",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Specifies that a group should use a load balancing method where a request\nis passed to the server with the least number of active connections,\ntaking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.",
          "description_html": "\u003cp\u003eSpecifies that a group should use a load balancing method where a request\nis passed to the server with the least number of active connections,\ntaking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\u003c/p\u003e\n"
        },
        {
          "name": "least_time",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "`header` | `last_byte` [`inflight`]"
          ],
          "isBlock": false,
          "description_md": "Specifies that a group should use a load balancing method where a request\nis passed to the server with the least average response time and\nleast number of active connections, taking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\n\nIf the `header` parameter is specified,\ntime to receive the\n[response header](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_header_time) is used.\nIf the `last_byte` parameter is specified,\ntime to receive the [full response](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_response_time)\nis used.\nIf the `inflight` parameter is specified (1.11.6),\nincomplete requests are also taken into account.\n\u003e Prior to version 1.11.6, incomplete requests were taken into account by default.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eSpecifies that a group should use a load balancing method where a request\nis passed to the server with the least average response time and\nleast number of active connections, taking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003eheader\u003c/code\u003e parameter is specified,\ntime to receive the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_header_time\" target=\"_blank\"\u003eresponse header\u003c/a\u003e is used.\nIf the \u003ccode\u003elast_byte\u003c/code\u003e parameter is specified,\ntime to receive the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_response_time\" target=\"_blank\"\u003efull response\u003c/a\u003e\nis used.\nIf the \u003ccode\u003einflight\u003c/code\u003e parameter is specified (1.11.6),\nincomplete requests are also taken into account.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.11.6, incomplete requests were taken into account by default.\u003c/p\u003e\n\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "queue",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`number`* [`timeout`=*`time`*]"
          ],
          "isBlock": false,
          "description_md": "If an upstream server cannot be selected immediately\nwhile processing a request,\nthe request will be placed into the queue.\nThe directive specifies the maximum *`number`* of requests\nthat can be in the queue at the same time.\nIf the queue is filled up,\nor the server to pass the request to cannot be selected within\nthe time period specified in the `timeout` parameter,\nthe 502 (Bad Gateway)\nerror will be returned to the client.\n\nThe default value of the `timeout` parameter is 60 seconds.\n\n\u003e When using load balancer methods other than the default\n\u003e round-robin method, it is necessary to activate them before\n\u003e the `queue` directive.\n\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eIf an upstream server cannot be selected immediately\nwhile processing a request,\nthe request will be placed into the queue.\nThe directive specifies the maximum \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e of requests\nthat can be in the queue at the same time.\nIf the queue is filled up,\nor the server to pass the request to cannot be selected within\nthe time period specified in the \u003ccode\u003etimeout\u003c/code\u003e parameter,\nthe 502 (Bad Gateway)\nerror will be returned to the client.\u003c/p\u003e\n\n\u003cp\u003eThe default value of the \u003ccode\u003etimeout\u003c/code\u003e parameter is 60 seconds.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eWhen using load balancer methods other than the default\nround-robin method, it is necessary to activate them before\nthe \u003ccode\u003equeue\u003c/code\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "random",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "[`two` [*`method`*]]"
          ],
          "isBlock": false,
          "description_md": "Specifies that a group should use a load balancing method where a request\nis passed to a randomly selected server, taking into account weights\nof servers.\n\nThe optional `two` parameter\ninstructs nginx to randomly select\n[two](https://homes.cs.washington.edu/~karlin/papers/balls.pdf)\nservers and then choose a server\nusing the specified `method`.\nThe default method is `least_conn`\nwhich passes a request to a server\nwith the least number of active connections.\n\nThe `least_time` method passes a request to a server\nwith the least average response time and least number of active connections.\nIf `least_time=header` is specified, the time to receive the\n[response header](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_header_time) is used.\nIf `least_time=last_byte` is specified, the time to receive the\n[full response](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_response_time) is used.\n\u003e The `least_time` method is available as a part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eSpecifies that a group should use a load balancing method where a request\nis passed to a randomly selected server, taking into account weights\nof servers.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003etwo\u003c/code\u003e parameter\ninstructs nginx to randomly select\n\u003ca href=\"https://homes.cs.washington.edu/~karlin/papers/balls.pdf\" target=\"_blank\"\u003etwo\u003c/a\u003e\nservers and then choose a server\nusing the specified \u003ccode\u003emethod\u003c/code\u003e.\nThe default method is \u003ccode\u003eleast_conn\u003c/code\u003e\nwhich passes a request to a server\nwith the least number of active connections.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eleast_time\u003c/code\u003e method passes a request to a server\nwith the least average response time and least number of active connections.\nIf \u003ccode\u003eleast_time=header\u003c/code\u003e is specified, the time to receive the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_header_time\" target=\"_blank\"\u003eresponse header\u003c/a\u003e is used.\nIf \u003ccode\u003eleast_time=last_byte\u003c/code\u003e is specified, the time to receive the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_response_time\" target=\"_blank\"\u003efull response\u003c/a\u003e is used.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003eleast_time\u003c/code\u003e method is available as a part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "resolver",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`address`* ... [`valid`=*`time`*] [`ipv4`=`on`|`off`] [`ipv6`=`on`|`off`] [`status_zone`=*`zone`*]"
          ],
          "isBlock": false,
          "description_md": "Configures name servers used to resolve names of upstream servers\ninto addresses, for example:\n```\nresolver 127.0.0.1 [::1]:5353;\n```\nThe address can be specified as a domain name or IP address,\nwith an optional port.\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n\nBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv4 or IPv6 addresses is not desired,\nthe `ipv4=off` (1.23.1) or\nthe `ipv6=off` parameter can be specified.\n\nBy default, nginx caches answers using the TTL value of a response.\nAn optional `valid` parameter allows overriding it:\n```\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n```\n\u003e To prevent DNS spoofing, it is recommended\n\u003e configuring DNS servers in a properly secured trusted local network.\n\nThe optional `status_zone` parameter\nenables\n[collection](https://nginx.org/en/docs/http/ngx_http_api_module.html#resolvers_)\nof DNS server statistics of requests and responses\nin the specified *`zone`*.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eConfigures name servers used to resolve names of upstream servers\ninto addresses, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver 127.0.0.1 [::1]:5353;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe address can be specified as a domain name or IP address,\nwith an optional port.\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\u003c/p\u003e\n\n\u003cp\u003eBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv4 or IPv6 addresses is not desired,\nthe \u003ccode\u003eipv4=off\u003c/code\u003e (1.23.1) or\nthe \u003ccode\u003eipv6=off\u003c/code\u003e parameter can be specified.\u003c/p\u003e\n\n\u003cp\u003eBy default, nginx caches answers using the TTL value of a response.\nAn optional \u003ccode\u003evalid\u003c/code\u003e parameter allows overriding it:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver 127.0.0.1 [::1]:5353 valid=30s;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTo prevent DNS spoofing, it is recommended\nconfiguring DNS servers in a properly secured trusted local network.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003estatus_zone\u003c/code\u003e parameter\nenables\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#resolvers_\" target=\"_blank\"\u003ecollection\u003c/a\u003e\nof DNS server statistics of requests and responses\nin the specified \u003cem\u003e\u003ccode\u003ezone\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "resolver_timeout",
          "default": "30s",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for name resolution, for example:\n```\nresolver_timeout 5s;\n```\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eSets a timeout for name resolution, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver_timeout 5s;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "sticky",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "`cookie` *`name`* [`expires=`*`time`*] [`domain=`*`domain`*] [`httponly`] [`samesite=``strict`|`lax`|`none`|*`$variable`*] [`secure`] [`path=`*`path`*]",
            "`route` *`$variable`* ...",
            "`learn` `create=`*`$variable`* `lookup=`*`$variable`* `zone=`*`name`*:*`size`* [`timeout=`*`time`*] [`header`] [`sync`]"
          ],
          "isBlock": false,
          "description_md": "Enables session affinity, which causes requests from the same client to be\npassed to the same server in a group of servers.\nThree methods are available:\n- `cookie`\n\n    When the `cookie` method is used, information about the\n    designated server is passed in an HTTP cookie generated by nginx:\n    ```\n    upstream backend {\n        server backend1.example.com;\n        server backend2.example.com;\n    \n        sticky cookie srv_id expires=1h domain=.example.com path=/;\n    }\n    ```\n    \n    \n    \n    A request that comes from a client not yet bound to a particular server\n    is passed to the server selected by the configured balancing method.\n    Further requests with this cookie will be passed to the designated server.\n    If the designated server cannot process a request, the new server is\n    selected as if the client has not been bound yet.\n    \n    \u003e As a load balancing method always tries to evenly distribute the load\n    \u003e considering already bound requests,\n    \u003e the server with a higher number of active bound requests\n    \u003e has less possibility of getting new unbound requests.\n    \n    \n    \n    \n    The first parameter sets the name of the cookie to be set or inspected.\n    The cookie value is\n    a hexadecimal representation of the MD5 hash of the IP address and port,\n    or of the UNIX-domain socket path.\n    However, if the “`route`” parameter of the\n    [`server`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server) directive is specified, the cookie value will be\n    the value of the “`route`” parameter:\n    ```\n    upstream backend {\n        server backend1.example.com route=a;\n        server backend2.example.com route=b;\n    \n        sticky cookie srv_id expires=1h domain=.example.com path=/;\n    }\n    ```\n    In this case, the value of the “`srv_id`” cookie will be\n    either *`a`* or *`b`*.\n    \n    \n    \n    Additional parameters may be as follows:\n    - `expires=`*`time`*\n    \n        Sets the *`time`* for which a browser should keep the cookie.\n        The special value `max` will cause the cookie to expire on\n        “`31 Dec 2037 23:55:55 GMT`”.\n        If the parameter is not specified, it will cause the cookie to expire at\n        the end of a browser session.\n    - `domain=`*`domain`*\n    \n        Defines the *`domain`* for which the cookie is set.\n        Parameter value can contain variables (1.11.5).\n    - `httponly`\n    \n        Adds the `HttpOnly` attribute to the cookie (1.7.11).\n    - `samesite=``strict` |\n    `lax` | `none` | *`$variable`*\n    \n        Adds the `SameSite` (1.19.4) attribute to the cookie\n        with one of the following values:\n        `Strict`,\n        `Lax`,\n        `None`, or\n        using variables (1.23.3).\n        In the latter case, if the variable value is empty,\n        the `SameSite` attribute will not be added to the cookie,\n        if the value is resolved to\n        `Strict`,\n        `Lax`, or\n        `None`,\n        the corresponding value will be assigned,\n        otherwise the `Strict` value will be assigned.\n    - `secure`\n    \n        Adds the `Secure` attribute to the cookie (1.7.11).\n    - `path=`*`path`*\n    \n        Defines the *`path`* for which the cookie is set.\n    \n    If any parameters are omitted, the corresponding cookie fields are not set.\n- `route`\n\n    When the `route` method is used, proxied server assigns\n    client a route on receipt of the first request.\n    All subsequent requests from this client will carry routing information\n    in a cookie or URI.\n    This information is compared with the “`route`” parameter\n    of the [`server`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server) directive to identify the server to which the\n    request should be proxied.\n    If the “`route`” parameter is not specified, the route name\n    will be a hexadecimal representation of the MD5 hash of the IP address and port,\n    or of the UNIX-domain socket path.\n    If the designated server cannot process a request, the new server is\n    selected by the configured balancing method as if there is no routing\n    information in the request.\n    \n    \n    \n    The parameters of the `route` method specify variables that\n    may contain routing information.\n    The first non-empty variable is used to find the matching server.\n    \n    \n    \n    Example:\n    ```\n    map $cookie_jsessionid $route_cookie {\n        ~.+\\.(?P\u003croute\u003e\\w+)$ $route;\n    }\n    \n    map $request_uri $route_uri {\n        ~jsessionid=.+\\.(?P\u003croute\u003e\\w+)$ $route;\n    }\n    \n    upstream backend {\n        server backend1.example.com route=a;\n        server backend2.example.com route=b;\n    \n        sticky route $route_cookie $route_uri;\n    }\n    ```\n    Here, the route is taken from the “`JSESSIONID`” cookie\n    if present in a request.\n    Otherwise, the route from the URI is used.\n- `learn`\n\n    When the `learn` method (1.7.1) is used, nginx\n    analyzes upstream server responses and learns server-initiated sessions\n    usually passed in an HTTP cookie.\n    ```\n    upstream backend {\n       server backend1.example.com:8080;\n       server backend2.example.com:8081;\n    \n       sticky learn\n              create=$upstream_cookie_examplecookie\n              lookup=$cookie_examplecookie\n              zone=client_sessions:1m;\n    }\n    ```\n    \n    In the example, the upstream server creates a session by setting the\n    cookie “`EXAMPLECOOKIE`” in the response.\n    Further requests with this cookie will be passed to the same server.\n    If the server cannot process the request, the new server is\n    selected as if the client has not been bound yet.\n    \n    \n    \n    The parameters `create` and `lookup`\n    specify variables that indicate how new sessions are created and existing\n    sessions are searched, respectively.\n    Both parameters may be specified more than once, in which case the first\n    non-empty variable is used.\n    \n    \n    \n    Sessions are stored in a shared memory zone, whose *`name`* and\n    *`size`* are configured by the `zone` parameter.\n    One megabyte zone can store about 4000 sessions on the 64-bit platform.\n    The sessions that are not accessed during the time specified by the\n    `timeout` parameter get removed from the zone.\n    By default, `timeout` is set to 10 minutes.\n    \n    \n    \n    The `header` parameter (1.13.1) allows creating a session\n    right after receiving response headers from the upstream server.\n    \n    \n    \n    The `sync` parameter (1.13.8) enables\n    [synchronization](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync)\n    of the shared memory zone.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eEnables session affinity, which causes requests from the same client to be\npassed to the same server in a group of servers.\nThree methods are available:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ecookie\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen the \u003ccode\u003ecookie\u003c/code\u003e method is used, information about the\ndesignated server is passed in an HTTP cookie generated by nginx:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream backend {\n    server backend1.example.com;\n    server backend2.example.com;\n\n\n    sticky cookie srv_id expires=1h domain=.example.com path=/;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eA request that comes from a client not yet bound to a particular server\nis passed to the server selected by the configured balancing method.\nFurther requests with this cookie will be passed to the designated server.\nIf the designated server cannot process a request, the new server is\nselected as if the client has not been bound yet.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs a load balancing method always tries to evenly distribute the load\nconsidering already bound requests,\nthe server with a higher number of active bound requests\nhas less possibility of getting new unbound requests.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe first parameter sets the name of the cookie to be set or inspected.\nThe cookie value is\na hexadecimal representation of the MD5 hash of the IP address and port,\nor of the UNIX-domain socket path.\nHowever, if the “\u003ccode\u003eroute\u003c/code\u003e” parameter of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e directive is specified, the cookie value will be\nthe value of the “\u003ccode\u003eroute\u003c/code\u003e” parameter:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream backend {\n    server backend1.example.com route=a;\n    server backend2.example.com route=b;\n\n\n    sticky cookie srv_id expires=1h domain=.example.com path=/;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn this case, the value of the “\u003ccode\u003esrv_id\u003c/code\u003e” cookie will be\neither \u003cem\u003e\u003ccode\u003ea\u003c/code\u003e\u003c/em\u003e or \u003cem\u003e\u003ccode\u003eb\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eAdditional parameters may be as follows:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eexpires=\u003c/code\u003e\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e for which a browser should keep the cookie.\nThe special value \u003ccode\u003emax\u003c/code\u003e will cause the cookie to expire on\n“\u003ccode\u003e31 Dec 2037 23:55:55 GMT\u003c/code\u003e”.\nIf the parameter is not specified, it will cause the cookie to expire at\nthe end of a browser session.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edomain=\u003c/code\u003e\u003cem\u003e\u003ccode\u003edomain\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eDefines the \u003cem\u003e\u003ccode\u003edomain\u003c/code\u003e\u003c/em\u003e for which the cookie is set.\nParameter value can contain variables (1.11.5).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttponly\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAdds the \u003ccode\u003eHttpOnly\u003c/code\u003e attribute to the cookie (1.7.11).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003esamesite=\u003c/code\u003e\u003ccode\u003estrict\u003c/code\u003e |\n\u003ccode\u003elax\u003c/code\u003e | \u003ccode\u003enone\u003c/code\u003e | \u003cem\u003e\u003ccode\u003e$variable\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eAdds the \u003ccode\u003eSameSite\u003c/code\u003e (1.19.4) attribute to the cookie\nwith one of the following values:\n\u003ccode\u003eStrict\u003c/code\u003e,\n\u003ccode\u003eLax\u003c/code\u003e,\n\u003ccode\u003eNone\u003c/code\u003e, or\nusing variables (1.23.3).\nIn the latter case, if the variable value is empty,\nthe \u003ccode\u003eSameSite\u003c/code\u003e attribute will not be added to the cookie,\nif the value is resolved to\n\u003ccode\u003eStrict\u003c/code\u003e,\n\u003ccode\u003eLax\u003c/code\u003e, or\n\u003ccode\u003eNone\u003c/code\u003e,\nthe corresponding value will be assigned,\notherwise the \u003ccode\u003eStrict\u003c/code\u003e value will be assigned.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003esecure\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAdds the \u003ccode\u003eSecure\u003c/code\u003e attribute to the cookie (1.7.11).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epath=\u003c/code\u003e\u003cem\u003e\u003ccode\u003epath\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eDefines the \u003cem\u003e\u003ccode\u003epath\u003c/code\u003e\u003c/em\u003e for which the cookie is set.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf any parameters are omitted, the corresponding cookie fields are not set.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eroute\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen the \u003ccode\u003eroute\u003c/code\u003e method is used, proxied server assigns\nclient a route on receipt of the first request.\nAll subsequent requests from this client will carry routing information\nin a cookie or URI.\nThis information is compared with the “\u003ccode\u003eroute\u003c/code\u003e” parameter\nof the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e directive to identify the server to which the\nrequest should be proxied.\nIf the “\u003ccode\u003eroute\u003c/code\u003e” parameter is not specified, the route name\nwill be a hexadecimal representation of the MD5 hash of the IP address and port,\nor of the UNIX-domain socket path.\nIf the designated server cannot process a request, the new server is\nselected by the configured balancing method as if there is no routing\ninformation in the request.\u003c/p\u003e\n\n\u003cp\u003eThe parameters of the \u003ccode\u003eroute\u003c/code\u003e method specify variables that\nmay contain routing information.\nThe first non-empty variable is used to find the matching server.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003emap $cookie_jsessionid $route_cookie {\n    ~.+\\.(?P\u0026lt;route\u0026gt;\\w+)$ $route;\n}\n\n\nmap $request_uri $route_uri {\n    ~jsessionid=.+\\.(?P\u0026lt;route\u0026gt;\\w+)$ $route;\n}\n\n\nupstream backend {\n    server backend1.example.com route=a;\n    server backend2.example.com route=b;\n\n\n    sticky route $route_cookie $route_uri;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHere, the route is taken from the “\u003ccode\u003eJSESSIONID\u003c/code\u003e” cookie\nif present in a request.\nOtherwise, the route from the URI is used.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003elearn\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eWhen the \u003ccode\u003elearn\u003c/code\u003e method (1.7.1) is used, nginx\nanalyzes upstream server responses and learns server-initiated sessions\nusually passed in an HTTP cookie.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream backend {\n   server backend1.example.com:8080;\n   server backend2.example.com:8081;\n\n\n   sticky learn\n          create=$upstream_cookie_examplecookie\n          lookup=$cookie_examplecookie\n          zone=client_sessions:1m;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn the example, the upstream server creates a session by setting the\ncookie “\u003ccode\u003eEXAMPLECOOKIE\u003c/code\u003e” in the response.\nFurther requests with this cookie will be passed to the same server.\nIf the server cannot process the request, the new server is\nselected as if the client has not been bound yet.\u003c/p\u003e\n\n\u003cp\u003eThe parameters \u003ccode\u003ecreate\u003c/code\u003e and \u003ccode\u003elookup\u003c/code\u003e\nspecify variables that indicate how new sessions are created and existing\nsessions are searched, respectively.\nBoth parameters may be specified more than once, in which case the first\nnon-empty variable is used.\u003c/p\u003e\n\n\u003cp\u003eSessions are stored in a shared memory zone, whose \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and\n\u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e are configured by the \u003ccode\u003ezone\u003c/code\u003e parameter.\nOne megabyte zone can store about 4000 sessions on the 64-bit platform.\nThe sessions that are not accessed during the time specified by the\n\u003ccode\u003etimeout\u003c/code\u003e parameter get removed from the zone.\nBy default, \u003ccode\u003etimeout\u003c/code\u003e is set to 10 minutes.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eheader\u003c/code\u003e parameter (1.13.1) allows creating a session\nright after receiving response headers from the upstream server.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003esync\u003c/code\u003e parameter (1.13.8) enables\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync\" target=\"_blank\"\u003esynchronization\u003c/a\u003e\nof the shared memory zone.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "sticky_cookie_insert",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`name`* [`expires=`*`time`*] [`domain=`*`domain`*] [`path=`*`path`*]"
          ],
          "isBlock": false,
          "description_md": "This directive is obsolete since version 1.5.7.\nAn equivalent\n[`sticky`](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#sticky) directive with a new syntax should be used instead:\n\u003e `sticky cookie` *`name`*\n\u003e [`expires=`*`time`*]\n\u003e [`domain=`*`domain`*]\n\u003e [`path=`*`path`*];",
          "description_html": "\u003cp\u003eThis directive is obsolete since version 1.5.7.\nAn equivalent\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#sticky\" target=\"_blank\"\u003e\u003ccode\u003esticky\u003c/code\u003e\u003c/a\u003e directive with a new syntax should be used instead:\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003e\u003ccode\u003esticky cookie\u003c/code\u003e \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e\n[\u003ccode\u003eexpires=\u003c/code\u003e\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e]\n[\u003ccode\u003edomain=\u003c/code\u003e\u003cem\u003e\u003ccode\u003edomain\u003c/code\u003e\u003c/em\u003e]\n[\u003ccode\u003epath=\u003c/code\u003e\u003cem\u003e\u003ccode\u003epath\u003c/code\u003e\u003c/em\u003e];\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_userid_module.html",
      "name": "ngx_http_userid_module",
      "directives": [
        {
          "name": "userid",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `v1` | `log` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables setting cookies and logging the received cookies:\n- `on`\n\n    enables the setting of version 2 cookies\n    and logging of the received cookies;\n- `v1`\n\n    enables the setting of version 1 cookies\n    and logging of the received cookies;\n- `log`\n\n    disables the setting of cookies,\n    but enables logging of the received cookies;\n- `off`\n\n    disables the setting of cookies and logging of the received cookies.",
          "description_html": "\u003cp\u003eEnables or disables setting cookies and logging the received cookies:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eon\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables the setting of version 2 cookies\nand logging of the received cookies;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ev1\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eenables the setting of version 1 cookies\nand logging of the received cookies;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003elog\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables the setting of cookies,\nbut enables logging of the received cookies;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables the setting of cookies and logging of the received cookies.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "userid_domain",
          "default": "none",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`* | `none`"
          ],
          "isBlock": false,
          "description_md": "Defines a domain for which the cookie is set.\nThe `none` parameter disables setting of a domain for the\ncookie.",
          "description_html": "\u003cp\u003eDefines a domain for which the cookie is set.\nThe \u003ccode\u003enone\u003c/code\u003e parameter disables setting of a domain for the\ncookie.\u003c/p\u003e\n"
        },
        {
          "name": "userid_expires",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`* | `max` | `off`"
          ],
          "isBlock": false,
          "description_md": "Sets a time during which a browser should keep the cookie.\nThe parameter `max` will cause the cookie to expire on\n“`31 Dec 2037 23:55:55 GMT`”.\nThe parameter `off` will cause the cookie to expire at\nthe end of a browser session.",
          "description_html": "\u003cp\u003eSets a time during which a browser should keep the cookie.\nThe parameter \u003ccode\u003emax\u003c/code\u003e will cause the cookie to expire on\n“\u003ccode\u003e31 Dec 2037 23:55:55 GMT\u003c/code\u003e”.\nThe parameter \u003ccode\u003eoff\u003c/code\u003e will cause the cookie to expire at\nthe end of a browser session.\u003c/p\u003e\n"
        },
        {
          "name": "userid_flags",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`off` | *`flag`* ..."
          ],
          "isBlock": false,
          "description_md": "If the parameter is not `off`,\ndefines one or more additional flags for the cookie:\n`secure`,\n`httponly`,\n`samesite=strict`,\n`samesite=lax`,\n`samesite=none`.",
          "description_html": "\u003cp\u003eIf the parameter is not \u003ccode\u003eoff\u003c/code\u003e,\ndefines one or more additional flags for the cookie:\n\u003ccode\u003esecure\u003c/code\u003e,\n\u003ccode\u003ehttponly\u003c/code\u003e,\n\u003ccode\u003esamesite=strict\u003c/code\u003e,\n\u003ccode\u003esamesite=lax\u003c/code\u003e,\n\u003ccode\u003esamesite=none\u003c/code\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "userid_mark",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`letter`* | *`digit`* | `=` | `off`"
          ],
          "isBlock": false,
          "description_md": "If the parameter is not `off`, enables the cookie marking\nmechanism and sets the character used as a mark.\nThis mechanism is used to add or change\n[`userid_p3p`](https://nginx.org/en/docs/http/ngx_http_userid_module.html#userid_p3p) and/or a cookie expiration time while\npreserving the client identifier.\nA mark can be any letter of the English alphabet (case-sensitive),\ndigit, or the “`=`” character.\n\nIf the mark is set, it is compared with the first padding symbol\nin the base64 representation of the client identifier passed in a cookie.\nIf they do not match, the cookie is resent with the specified mark,\nexpiration time, and \"P3P\" header.",
          "description_html": "\u003cp\u003eIf the parameter is not \u003ccode\u003eoff\u003c/code\u003e, enables the cookie marking\nmechanism and sets the character used as a mark.\nThis mechanism is used to add or change\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_userid_module.html#userid_p3p\" target=\"_blank\"\u003e\u003ccode\u003euserid_p3p\u003c/code\u003e\u003c/a\u003e and/or a cookie expiration time while\npreserving the client identifier.\nA mark can be any letter of the English alphabet (case-sensitive),\ndigit, or the “\u003ccode\u003e=\u003c/code\u003e” character.\u003c/p\u003e\n\n\u003cp\u003eIf the mark is set, it is compared with the first padding symbol\nin the base64 representation of the client identifier passed in a cookie.\nIf they do not match, the cookie is resent with the specified mark,\nexpiration time, and \u0026ldquo;P3P\u0026rdquo; header.\u003c/p\u003e\n"
        },
        {
          "name": "userid_name",
          "default": "uid",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`*"
          ],
          "isBlock": false,
          "description_md": "Sets the cookie name.",
          "description_html": "\u003cp\u003eSets the cookie name.\u003c/p\u003e\n"
        },
        {
          "name": "userid_p3p",
          "default": "none",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* | `none`"
          ],
          "isBlock": false,
          "description_md": "Sets a value for the \"P3P\" header field that will be\nsent along with the cookie.\nIf the directive is set to the special value `none`,\nthe \"P3P\" header will not be sent in a response.",
          "description_html": "\u003cp\u003eSets a value for the \u0026ldquo;P3P\u0026rdquo; header field that will be\nsent along with the cookie.\nIf the directive is set to the special value \u003ccode\u003enone\u003c/code\u003e,\nthe \u0026ldquo;P3P\u0026rdquo; header will not be sent in a response.\u003c/p\u003e\n"
        },
        {
          "name": "userid_path",
          "default": "/",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`path`*"
          ],
          "isBlock": false,
          "description_md": "Defines a path for which the cookie is set.",
          "description_html": "\u003cp\u003eDefines a path for which the cookie is set.\u003c/p\u003e\n"
        },
        {
          "name": "userid_service",
          "default": "IP address of the server",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "If identifiers are issued by multiple servers (services),\neach service should be assigned its own *`number`*\nto ensure that client identifiers are unique.\nFor version 1 cookies, the default value is zero.\nFor version 2 cookies, the default value is the number composed from the last\nfour octets of the server’s IP address.",
          "description_html": "\u003cp\u003eIf identifiers are issued by multiple servers (services),\neach service should be assigned its own \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\nto ensure that client identifiers are unique.\nFor version 1 cookies, the default value is zero.\nFor version 2 cookies, the default value is the number composed from the last\nfour octets of the server’s IP address.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_uwsgi_module.html",
      "name": "ngx_http_uwsgi_module",
      "directives": [
        {
          "name": "uwsgi_bind",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`address`* [`transparent`] | `off`"
          ],
          "isBlock": false,
          "description_md": "Makes outgoing connections to a uwsgi server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value `off` (1.3.12) cancels the effect\nof the `uwsgi_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\n\nThe `transparent` parameter (1.11.0) allows\noutgoing connections to a uwsgi server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\n```\nuwsgi_bind $remote_addr transparent;\n```\nIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n[superuser](https://nginx.org/en/docs/ngx_core_module.html#user) privileges.\nOn Linux it is not required (1.13.8) as if\nthe `transparent` parameter is specified, worker processes\ninherit the `CAP_NET_RAW` capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the uwsgi server.",
          "description_html": "\u003cp\u003eMakes outgoing connections to a uwsgi server originate\nfrom the specified local IP address with an optional port (1.11.2).\nParameter value can contain variables (1.3.12).\nThe special value \u003ccode\u003eoff\u003c/code\u003e (1.3.12) cancels the effect\nof the \u003ccode\u003euwsgi_bind\u003c/code\u003e directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address and port.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003etransparent\u003c/code\u003e parameter (1.11.0) allows\noutgoing connections to a uwsgi server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_bind $remote_addr transparent;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#user\" target=\"_blank\"\u003esuperuser\u003c/a\u003e privileges.\nOn Linux it is not required (1.13.8) as if\nthe \u003ccode\u003etransparent\u003c/code\u003e parameter is specified, worker processes\ninherit the \u003ccode\u003eCAP_NET_RAW\u003c/code\u003e capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the uwsgi server.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_buffer_size",
          "default": "4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading the first part\nof the response received from the uwsgi server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading the first part\nof the response received from the uwsgi server.\nThis part usually contains a small response header.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_buffering",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables buffering of responses from the uwsgi server.\n\nWhen buffering is enabled, nginx receives a response from the uwsgi server\nas soon as possible, saving it into the buffers set by the\n[`uwsgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size) and [`uwsgi_buffers`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers) directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a [temporary file](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_path) on the disk.\nWriting to temporary files is controlled by the\n[`uwsgi_max_temp_file_size`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_max_temp_file_size) and\n[`uwsgi_temp_file_write_size`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_file_write_size) directives.\n\nWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the uwsgi server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the [`uwsgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size) directive.\n\nBuffering can also be enabled or disabled by passing\n“`yes`” or “`no`” in the\n\"X-Accel-Buffering\" response header field.\nThis capability can be disabled using the\n[`uwsgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers) directive.",
          "description_html": "\u003cp\u003eEnables or disables buffering of responses from the uwsgi server.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is enabled, nginx receives a response from the uwsgi server\nas soon as possible, saving it into the buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_buffers\u003c/code\u003e\u003c/a\u003e directives.\nIf the whole response does not fit into memory, a part of it can be saved\nto a \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_path\" target=\"_blank\"\u003etemporary file\u003c/a\u003e on the disk.\nWriting to temporary files is controlled by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_max_temp_file_size\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_max_temp_file_size\u003c/code\u003e\u003c/a\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_file_write_size\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_temp_file_write_size\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is disabled, the response is passed to a client synchronously,\nimmediately as it is received.\nnginx will not try to read the whole response from the uwsgi server.\nThe maximum size of the data that nginx can receive from the server\nat a time is set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_buffer_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eBuffering can also be enabled or disabled by passing\n“\u003ccode\u003eyes\u003c/code\u003e” or “\u003ccode\u003eno\u003c/code\u003e” in the\n\u0026ldquo;X-Accel-Buffering\u0026rdquo; response header field.\nThis capability can be disabled using the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_ignore_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_buffers",
          "default": "8 4k|8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* and *`size`* of the\nbuffers used for reading a response from the uwsgi server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the\nbuffers used for reading a response from the uwsgi server,\nfor a single connection.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_busy_buffers_size",
          "default": "8k|16k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "When [buffering](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering) of responses from the uwsgi\nserver is enabled, limits the total *`size`* of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, *`size`* is limited by the size of two buffers set by the\n[`uwsgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size) and [`uwsgi_buffers`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers) directives.",
          "description_html": "\u003cp\u003eWhen \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the uwsgi\nserver is enabled, limits the total \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of buffers that\ncan be busy sending a response to the client while the response is not\nyet fully read.\nIn the meantime, the rest of the buffers can be used for reading the response\nand, if needed, buffering part of the response to a temporary file.\nBy default, \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e is limited by the size of two buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_buffers\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`zone`* | `off`"
          ],
          "isBlock": false,
          "description_md": "Defines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe `off` parameter disables caching inherited\nfrom the previous configuration level.",
          "description_html": "\u003cp\u003eDefines a shared memory zone used for caching.\nThe same zone can be used in several places.\nParameter value can contain variables (1.7.9).\nThe \u003ccode\u003eoff\u003c/code\u003e parameter disables caching inherited\nfrom the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache_background_update",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Allows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n[allow](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_use_stale_updating)\nthe usage of a stale cached response when it is being updated.",
          "description_html": "\u003cp\u003eAllows starting a background subrequest\nto update an expired cache item,\nwhile a stale cached response is returned to the client.\nNote that it is necessary to\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_use_stale_updating\" target=\"_blank\"\u003eallow\u003c/a\u003e\nthe usage of a stale cached response when it is being updated.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache_bypass",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\n```\nuwsgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nuwsgi_cache_bypass $http_pragma    $http_authorization;\n```\nCan be used along with the [`uwsgi_no_cache`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_no_cache) directive.",
          "description_html": "\u003cp\u003eDefines conditions under which the response will not be taken from a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be taken from the cache:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_cache_bypass $cookie_nocache $arg_nocache$arg_comment;\nuwsgi_cache_bypass $http_pragma    $http_authorization;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eCan be used along with the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_no_cache\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_no_cache\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache_key",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`*"
          ],
          "isBlock": false,
          "description_md": "Defines a key for caching, for example\n```\nuwsgi_cache_key localhost:9000$request_uri;\n```",
          "description_html": "\u003cp\u003eDefines a key for caching, for example\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_cache_key localhost:9000$request_uri;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "uwsgi_cache_lock",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "When enabled, only one request at a time will be allowed to populate\na new cache element identified according to the [`uwsgi_cache_key`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key)\ndirective by passing a request to a uwsgi server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n[`uwsgi_cache_lock_timeout`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_lock_timeout) directive.",
          "description_html": "\u003cp\u003eWhen enabled, only one request at a time will be allowed to populate\na new cache element identified according to the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_cache_key\u003c/code\u003e\u003c/a\u003e\ndirective by passing a request to a uwsgi server.\nOther requests of the same cache element will either wait\nfor a response to appear in the cache or the cache lock for\nthis element to be released, up to the time set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_lock_timeout\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_cache_lock_timeout\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache_lock_age",
          "default": "5s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "If the last request passed to the uwsgi server\nfor populating a new cache element\nhas not completed for the specified *`time`*,\none more request may be passed to the uwsgi server.",
          "description_html": "\u003cp\u003eIf the last request passed to the uwsgi server\nfor populating a new cache element\nhas not completed for the specified \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e,\none more request may be passed to the uwsgi server.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache_lock_timeout",
          "default": "5s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for [`uwsgi_cache_lock`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_lock).\nWhen the *`time`* expires,\nthe request will be passed to the uwsgi server,\nhowever, the response will not be cached.\n\u003e Before 1.7.8, the response could be cached.",
          "description_html": "\u003cp\u003eSets a timeout for \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_lock\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_cache_lock\u003c/code\u003e\u003c/a\u003e.\nWhen the \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e expires,\nthe request will be passed to the uwsgi server,\nhowever, the response will not be cached.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore 1.7.8, the response could be cached.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "uwsgi_cache_max_range_offset",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the uwsgi server\nand the response will not be cached.",
          "description_html": "\u003cp\u003eSets an offset in bytes for byte-range requests.\nIf the range is beyond the offset,\nthe range request will be passed to the uwsgi server\nand the response will not be cached.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache_methods",
          "default": "GET HEAD",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`GET` | `HEAD` | `POST` ..."
          ],
          "isBlock": false,
          "description_md": "If the client request method is listed in this directive then\nthe response will be cached.\n“`GET`” and “`HEAD`” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the [`uwsgi_no_cache`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_no_cache) directive.",
          "description_html": "\u003cp\u003eIf the client request method is listed in this directive then\nthe response will be cached.\n“\u003ccode\u003eGET\u003c/code\u003e” and “\u003ccode\u003eHEAD\u003c/code\u003e” methods are always\nadded to the list, though it is recommended to specify them explicitly.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_no_cache\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_no_cache\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache_min_uses",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* of requests after which the response\nwill be cached.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e of requests after which the response\nwill be cached.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache_path",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`path`* [`levels`=*`levels`*] [`use_temp_path`=`on`|`off`] `keys_zone`=*`name`*:*`size`* [`inactive`=*`time`*] [`max_size`=*`size`*] [`min_free`=*`size`*] [`manager_files`=*`number`*] [`manager_sleep`=*`time`*] [`manager_threshold`=*`time`*] [`loader_files`=*`number`*] [`loader_sleep`=*`time`*] [`loader_threshold`=*`time`*] [`purger`=`on`|`off`] [`purger_files`=*`number`*] [`purger_sleep`=*`time`*] [`purger_threshold`=*`time`*]"
          ],
          "isBlock": false,
          "description_md": "Sets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n[cache key](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key).\nThe `levels` parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\n```\nuwsgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n```\nfile names in a cache will look like this:\n```\n/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n```\n\nA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe `use_temp_path` parameter (1.7.10).\nIf this parameter is omitted or set to the value `on`,\nthe directory set by the [`uwsgi_temp_path`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_path) directive\nfor the given location will be used.\nIf the value is set to `off`,\ntemporary files will be put directly in the cache directory.\n\nIn addition, all active keys and information about data are stored\nin a shared memory zone, whose *`name`* and *`size`*\nare configured by the `keys_zone` parameter.\nOne megabyte zone can store about 8 thousand keys.\n\u003e As part of\n\u003e [commercial subscription](https://nginx.com/products/),\n\u003e the shared memory zone also stores extended\n\u003e cache [information](https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_),\n\u003e thus, it is required to specify a larger zone size for the same number of keys.\n\u003e For example,\n\u003e one megabyte zone can store about 4 thousand keys.\n\nCached data that are not accessed during the time specified by the\n`inactive` parameter get removed from the cache\nregardless of their freshness.\nBy default, `inactive` is set to 10 minutes.\n\nThe special “cache manager” process monitors the maximum cache size set\nby the `max_size` parameter,\nand the minimum amount of free space set\nby the `min_free` (1.19.1) parameter\non the file system with cache.\nWhen the size is exceeded or there is not enough free space,\nit removes the least recently used data.\nThe data is removed in iterations configured by\n`manager_files`,\n`manager_threshold`, and\n`manager_sleep` parameters (1.11.5).\nDuring one iteration no more than `manager_files` items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n`manager_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `manager_sleep`\nparameter (by default, 50 milliseconds) is made.\n\nA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than `loader_files` items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n`loader_threshold` parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the `loader_sleep`\nparameter (by default, 50 milliseconds) is made.\n\nAdditionally,\nthe following parameters are available as part of our\n[commercial subscription](https://nginx.com/products/):\n\n- `purger`=`on`|`off`\n\n    Instructs whether cache entries that match a\n    [wildcard key](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_purge)\n    will be removed from the disk by the cache purger (1.7.12).\n    Setting the parameter to `on`\n    (default is `off`)\n    will activate the “cache purger” process that\n    permanently iterates through all cache entries\n    and deletes the entries that match the wildcard key.\n- `purger_files`=*`number`*\n\n    Sets the number of items that will be scanned during one iteration (1.7.12).\n    By default, `purger_files` is set to 10.\n- `purger_threshold`=*`number`*\n\n    Sets the duration of one iteration (1.7.12).\n    By default, `purger_threshold` is set to 50 milliseconds.\n- `purger_sleep`=*`number`*\n\n    Sets a pause between iterations (1.7.12).\n    By default, `purger_sleep` is set to 50 milliseconds.\n\n\u003e In versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\n\u003e Previously cached responses will be considered invalid\n\u003e after upgrading to a newer nginx version.",
          "description_html": "\u003cp\u003eSets the path and other parameters of a cache.\nCache data are stored in files.\nThe file name in a cache is a result of\napplying the MD5 function to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e.\nThe \u003ccode\u003elevels\u003c/code\u003e parameter defines hierarchy levels of a cache:\nfrom 1 to 3, each level accepts values 1 or 2.\nFor example, in the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_cache_path /data/nginx/cache levels=1:2 keys_zone=one:10m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003efile names in a cache will look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/data/nginx/cache/c/29/b7f54b2df7773722d382f4809d65029c\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA cached response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the cache can be put on\ndifferent file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both cache and a directory\nholding temporary files\nare put on the same file system.\nA directory for temporary files is set based on\nthe \u003ccode\u003euse_temp_path\u003c/code\u003e parameter (1.7.10).\nIf this parameter is omitted or set to the value \u003ccode\u003eon\u003c/code\u003e,\nthe directory set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_path\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_temp_path\u003c/code\u003e\u003c/a\u003e directive\nfor the given location will be used.\nIf the value is set to \u003ccode\u003eoff\u003c/code\u003e,\ntemporary files will be put directly in the cache directory.\u003c/p\u003e\n\n\u003cp\u003eIn addition, all active keys and information about data are stored\nin a shared memory zone, whose \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\nare configured by the \u003ccode\u003ekeys_zone\u003c/code\u003e parameter.\nOne megabyte zone can store about 8 thousand keys.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs part of\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e,\nthe shared memory zone also stores extended\ncache \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#http_caches_\" target=\"_blank\"\u003einformation\u003c/a\u003e,\nthus, it is required to specify a larger zone size for the same number of keys.\nFor example,\none megabyte zone can store about 4 thousand keys.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eCached data that are not accessed during the time specified by the\n\u003ccode\u003einactive\u003c/code\u003e parameter get removed from the cache\nregardless of their freshness.\nBy default, \u003ccode\u003einactive\u003c/code\u003e is set to 10 minutes.\u003c/p\u003e\n\n\u003cp\u003eThe special “cache manager” process monitors the maximum cache size set\nby the \u003ccode\u003emax_size\u003c/code\u003e parameter,\nand the minimum amount of free space set\nby the \u003ccode\u003emin_free\u003c/code\u003e (1.19.1) parameter\non the file system with cache.\nWhen the size is exceeded or there is not enough free space,\nit removes the least recently used data.\nThe data is removed in iterations configured by\n\u003ccode\u003emanager_files\u003c/code\u003e,\n\u003ccode\u003emanager_threshold\u003c/code\u003e, and\n\u003ccode\u003emanager_sleep\u003c/code\u003e parameters (1.11.5).\nDuring one iteration no more than \u003ccode\u003emanager_files\u003c/code\u003e items\nare deleted (by default, 100).\nThe duration of one iteration is limited by the\n\u003ccode\u003emanager_threshold\u003c/code\u003e parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the \u003ccode\u003emanager_sleep\u003c/code\u003e\nparameter (by default, 50 milliseconds) is made.\u003c/p\u003e\n\n\u003cp\u003eA minute after the start the special “cache loader” process is activated.\nIt loads information about previously cached data stored on file system\ninto a cache zone.\nThe loading is also done in iterations.\nDuring one iteration no more than \u003ccode\u003eloader_files\u003c/code\u003e items\nare loaded (by default, 100).\nBesides, the duration of one iteration is limited by the\n\u003ccode\u003eloader_threshold\u003c/code\u003e parameter (by default, 200 milliseconds).\nBetween iterations, a pause configured by the \u003ccode\u003eloader_sleep\u003c/code\u003e\nparameter (by default, 50 milliseconds) is made.\u003c/p\u003e\n\n\u003cp\u003eAdditionally,\nthe following parameters are available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger\u003c/code\u003e=\u003ccode\u003eon\u003c/code\u003e|\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eInstructs whether cache entries that match a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_purge\" target=\"_blank\"\u003ewildcard key\u003c/a\u003e\nwill be removed from the disk by the cache purger (1.7.12).\nSetting the parameter to \u003ccode\u003eon\u003c/code\u003e\n(default is \u003ccode\u003eoff\u003c/code\u003e)\nwill activate the “cache purger” process that\npermanently iterates through all cache entries\nand deletes the entries that match the wildcard key.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_files\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets the number of items that will be scanned during one iteration (1.7.12).\nBy default, \u003ccode\u003epurger_files\u003c/code\u003e is set to 10.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_threshold\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets the duration of one iteration (1.7.12).\nBy default, \u003ccode\u003epurger_threshold\u003c/code\u003e is set to 50 milliseconds.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epurger_sleep\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eSets a pause between iterations (1.7.12).\nBy default, \u003ccode\u003epurger_sleep\u003c/code\u003e is set to 50 milliseconds.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIn versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed.\nPreviously cached responses will be considered invalid\nafter upgrading to a newer nginx version.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "uwsgi_cache_purge",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "string ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n[cache key](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key) is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\n\nIf the [cache key](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key) of a purge request ends\nwith an asterisk (“`*`”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either [inactivity](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_path),\nor processed by the [cache purger](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#purger) (1.7.12),\nor a client attempts to access them.\n\nExample configuration:\n```\nuwsgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        uwsgi_pass        backend;\n        uwsgi_cache       cache_zone;\n        uwsgi_cache_key   $uri;\n        uwsgi_cache_purge $purge_method;\n    }\n}\n```\n\u003e This functionality is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eDefines conditions under which the request will be considered a cache\npurge request.\nIf at least one value of the string parameters is not empty and is not equal\nto “0” then the cache entry with a corresponding\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e is removed.\nThe result of successful operation is indicated by returning\nthe 204 (No Content) response.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_key\" target=\"_blank\"\u003ecache key\u003c/a\u003e of a purge request ends\nwith an asterisk (“\u003ccode\u003e*\u003c/code\u003e”), all cache entries matching the\nwildcard key will be removed from the cache.\nHowever, these entries will remain on the disk until they are deleted\nfor either \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_path\" target=\"_blank\"\u003einactivity\u003c/a\u003e,\nor processed by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#purger\" target=\"_blank\"\u003ecache purger\u003c/a\u003e (1.7.12),\nor a client attempts to access them.\u003c/p\u003e\n\n\u003cp\u003eExample configuration:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_cache_path /data/nginx/cache keys_zone=cache_zone:10m;\n\nmap $request_method $purge_method {\n    PURGE   1;\n    default 0;\n}\n\nserver {\n    ...\n    location / {\n        uwsgi_pass        backend;\n        uwsgi_cache       cache_zone;\n        uwsgi_cache_key   $uri;\n        uwsgi_cache_purge $purge_method;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis functionality is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "uwsgi_cache_revalidate",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables revalidation of expired cache items using conditional requests with\nthe \"If-Modified-Since\" and \"If-None-Match\"\nheader fields.",
          "description_html": "\u003cp\u003eEnables revalidation of expired cache items using conditional requests with\nthe \u0026ldquo;If-Modified-Since\u0026rdquo; and \u0026ldquo;If-None-Match\u0026rdquo;\nheader fields.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache_use_stale",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`error` | `timeout` | `invalid_header` | `updating` | `http_500` | `http_503` | `http_403` | `http_404` | `http_429` | `off` ..."
          ],
          "isBlock": false,
          "description_md": "Determines in which cases a stale cached response can be used\nwhen an error occurs during communication with the uwsgi server.\nThe directive’s parameters match the parameters of the\n[`uwsgi_next_upstream`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream) directive.\n\nThe `error` parameter also permits\nusing a stale cached response if a uwsgi server to process a request\ncannot be selected.\n\nAdditionally, the `updating` parameter permits\nusing a stale cached response if it is currently being updated.\nThis allows minimizing the number of accesses to uwsgi servers\nwhen updating cached data.\n\nUsing a stale cached response\ncan also be enabled directly in the response header\nfor a specified number of seconds after the response became stale (1.11.10).\nThis has lower priority than using the directive parameters.\n- The\n    “[stale-while-revalidate](https://datatracker.ietf.org/doc/html/rfc5861#section-3)”\n    extension of the \"Cache-Control\" header field permits\n    using a stale cached response if it is currently being updated.\n- The\n    “[stale-if-error](https://datatracker.ietf.org/doc/html/rfc5861#section-4)”\n    extension of the \"Cache-Control\" header field permits\n    using a stale cached response in case of an error.\n\nTo minimize the number of accesses to uwsgi servers when\npopulating a new cache element, the [`uwsgi_cache_lock`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_lock)\ndirective can be used.",
          "description_html": "\u003cp\u003eDetermines in which cases a stale cached response can be used\nwhen an error occurs during communication with the uwsgi server.\nThe directive’s parameters match the parameters of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_next_upstream\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eerror\u003c/code\u003e parameter also permits\nusing a stale cached response if a uwsgi server to process a request\ncannot be selected.\u003c/p\u003e\n\n\u003cp\u003eAdditionally, the \u003ccode\u003eupdating\u003c/code\u003e parameter permits\nusing a stale cached response if it is currently being updated.\nThis allows minimizing the number of accesses to uwsgi servers\nwhen updating cached data.\u003c/p\u003e\n\n\u003cp\u003eUsing a stale cached response\ncan also be enabled directly in the response header\nfor a specified number of seconds after the response became stale (1.11.10).\nThis has lower priority than using the directive parameters.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe\n“\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5861#section-3\" target=\"_blank\"\u003estale-while-revalidate\u003c/a\u003e”\nextension of the \u0026ldquo;Cache-Control\u0026rdquo; header field permits\nusing a stale cached response if it is currently being updated.\u003c/li\u003e\n\u003cli\u003eThe\n“\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5861#section-4\" target=\"_blank\"\u003estale-if-error\u003c/a\u003e”\nextension of the \u0026ldquo;Cache-Control\u0026rdquo; header field permits\nusing a stale cached response in case of an error.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eTo minimize the number of accesses to uwsgi servers when\npopulating a new cache element, the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_lock\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_cache_lock\u003c/code\u003e\u003c/a\u003e\ndirective can be used.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_cache_valid",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "[*`code`* ...] *`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets caching time for different response codes.\nFor example, the following directives\n```\nuwsgi_cache_valid 200 302 10m;\nuwsgi_cache_valid 404      1m;\n```\nset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\n\nIf only caching *`time`* is specified\n```\nuwsgi_cache_valid 5m;\n```\nthen only 200, 301, and 302 responses are cached.\n\nIn addition, the `any` parameter can be specified\nto cache any responses:\n```\nuwsgi_cache_valid 200 302 10m;\nuwsgi_cache_valid 301      1h;\nuwsgi_cache_valid any      1m;\n```\n\nParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\n- The \"X-Accel-Expires\" header field sets caching time of a\n    response in seconds.\n    The zero value disables caching for a response.\n    If the value starts with the `@` prefix, it sets an absolute\n    time in seconds since Epoch, up to which the response may be cached.\n- If the header does not include the \"X-Accel-Expires\" field,\n    parameters of caching may be set in the header fields\n    \"Expires\" or \"Cache-Control\".\n- If the header includes the \"Set-Cookie\" field, such a\n    response will not be cached.\n- If the header includes the \"Vary\" field\n    with the special value “`*`”, such a\n    response will not be cached (1.7.7).\n    If the header includes the \"Vary\" field\n    with another value, such a response will be cached\n    taking into account the corresponding request header fields (1.7.7).\n\nProcessing of one or more of these response header fields can be disabled\nusing the [`uwsgi_ignore_headers`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers) directive.",
          "description_html": "\u003cp\u003eSets caching time for different response codes.\nFor example, the following directives\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_cache_valid 200 302 10m;\nuwsgi_cache_valid 404      1m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eset 10 minutes of caching for responses with codes 200 and 302\nand 1 minute for responses with code 404.\u003c/p\u003e\n\n\u003cp\u003eIf only caching \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e is specified\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_cache_valid 5m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ethen only 200, 301, and 302 responses are cached.\u003c/p\u003e\n\n\u003cp\u003eIn addition, the \u003ccode\u003eany\u003c/code\u003e parameter can be specified\nto cache any responses:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_cache_valid 200 302 10m;\nuwsgi_cache_valid 301      1h;\nuwsgi_cache_valid any      1m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eParameters of caching can also be set directly\nin the response header.\nThis has higher priority than setting of caching time using the directive.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe \u0026ldquo;X-Accel-Expires\u0026rdquo; header field sets caching time of a\nresponse in seconds.\nThe zero value disables caching for a response.\nIf the value starts with the \u003ccode\u003e@\u003c/code\u003e prefix, it sets an absolute\ntime in seconds since Epoch, up to which the response may be cached.\u003c/li\u003e\n\u003cli\u003eIf the header does not include the \u0026ldquo;X-Accel-Expires\u0026rdquo; field,\nparameters of caching may be set in the header fields\n\u0026ldquo;Expires\u0026rdquo; or \u0026ldquo;Cache-Control\u0026rdquo;.\u003c/li\u003e\n\u003cli\u003eIf the header includes the \u0026ldquo;Set-Cookie\u0026rdquo; field, such a\nresponse will not be cached.\u003c/li\u003e\n\u003cli\u003eIf the header includes the \u0026ldquo;Vary\u0026rdquo; field\nwith the special value “\u003ccode\u003e*\u003c/code\u003e”, such a\nresponse will not be cached (1.7.7).\nIf the header includes the \u0026ldquo;Vary\u0026rdquo; field\nwith another value, such a response will be cached\ntaking into account the corresponding request header fields (1.7.7).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eProcessing of one or more of these response header fields can be disabled\nusing the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ignore_headers\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_ignore_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_connect_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for establishing a connection with a uwsgi server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.",
          "description_html": "\u003cp\u003eDefines a timeout for establishing a connection with a uwsgi server.\nIt should be noted that this timeout cannot usually exceed 75 seconds.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_force_ranges",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables byte-range support\nfor both cached and uncached responses from the uwsgi server\nregardless of the \"Accept-Ranges\" field in these responses.",
          "description_html": "\u003cp\u003eEnables byte-range support\nfor both cached and uncached responses from the uwsgi server\nregardless of the \u0026ldquo;Accept-Ranges\u0026rdquo; field in these responses.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_hide_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`*"
          ],
          "isBlock": false,
          "description_md": "By default,\nnginx does not pass the header fields \"Status\" and\n\"X-Accel-...\" from the response of a uwsgi\nserver to a client.\nThe `uwsgi_hide_header` directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe [`uwsgi_pass_header`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass_header) directive can be used.",
          "description_html": "\u003cp\u003eBy default,\nnginx does not pass the header fields \u0026ldquo;Status\u0026rdquo; and\n\u0026ldquo;X-Accel-\u0026hellip;\u0026rdquo; from the response of a uwsgi\nserver to a client.\nThe \u003ccode\u003euwsgi_hide_header\u003c/code\u003e directive sets additional fields\nthat will not be passed.\nIf, on the contrary, the passing of fields needs to be permitted,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass_header\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_pass_header\u003c/code\u003e\u003c/a\u003e directive can be used.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ignore_client_abort",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether the connection with a uwsgi server should be\nclosed when a client closes the connection without waiting\nfor a response.",
          "description_html": "\u003cp\u003eDetermines whether the connection with a uwsgi server should be\nclosed when a client closes the connection without waiting\nfor a response.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ignore_headers",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`* ..."
          ],
          "isBlock": false,
          "description_md": "Disables processing of certain response header fields from the uwsgi server.\nThe following fields can be ignored: \"X-Accel-Redirect\",\n\"X-Accel-Expires\", \"X-Accel-Limit-Rate\" (1.1.6),\n\"X-Accel-Buffering\" (1.1.6),\n\"X-Accel-Charset\" (1.1.6), \"Expires\",\n\"Cache-Control\", \"Set-Cookie\" (0.8.44),\nand \"Vary\" (1.7.7).\n\nIf not disabled, processing of these header fields has the following\neffect:\n- \"X-Accel-Expires\", \"Expires\",\n    \"Cache-Control\", \"Set-Cookie\",\n    and \"Vary\"\n    set the parameters of response [caching](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_valid);\n- \"X-Accel-Redirect\" performs an\n    [internal redirect](https://nginx.org/en/docs/http/ngx_http_core_module.html#internal) to the specified URI;\n- \"X-Accel-Limit-Rate\" sets the\n    [rate limit](https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_rate) for transmission of a response to a client;\n- \"X-Accel-Buffering\" enables or disables\n    [buffering](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering) of a response;\n- \"X-Accel-Charset\" sets the desired\n    [`charset`](https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset)\n    of a response.",
          "description_html": "\u003cp\u003eDisables processing of certain response header fields from the uwsgi server.\nThe following fields can be ignored: \u0026ldquo;X-Accel-Redirect\u0026rdquo;,\n\u0026ldquo;X-Accel-Expires\u0026rdquo;, \u0026ldquo;X-Accel-Limit-Rate\u0026rdquo; (1.1.6),\n\u0026ldquo;X-Accel-Buffering\u0026rdquo; (1.1.6),\n\u0026ldquo;X-Accel-Charset\u0026rdquo; (1.1.6), \u0026ldquo;Expires\u0026rdquo;,\n\u0026ldquo;Cache-Control\u0026rdquo;, \u0026ldquo;Set-Cookie\u0026rdquo; (0.8.44),\nand \u0026ldquo;Vary\u0026rdquo; (1.7.7).\u003c/p\u003e\n\n\u003cp\u003eIf not disabled, processing of these header fields has the following\neffect:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Expires\u0026rdquo;, \u0026ldquo;Expires\u0026rdquo;,\n\u0026ldquo;Cache-Control\u0026rdquo;, \u0026ldquo;Set-Cookie\u0026rdquo;,\nand \u0026ldquo;Vary\u0026rdquo;\nset the parameters of response \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_valid\" target=\"_blank\"\u003ecaching\u003c/a\u003e;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Redirect\u0026rdquo; performs an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#internal\" target=\"_blank\"\u003einternal redirect\u003c/a\u003e to the specified URI;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Limit-Rate\u0026rdquo; sets the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_rate\" target=\"_blank\"\u003erate limit\u003c/a\u003e for transmission of a response to a client;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Buffering\u0026rdquo; enables or disables\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of a response;\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;X-Accel-Charset\u0026rdquo; sets the desired\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_charset_module.html#charset\" target=\"_blank\"\u003e\u003ccode\u003echarset\u003c/code\u003e\u003c/a\u003e\nof a response.\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "uwsgi_intercept_errors",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether a uwsgi server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the [`error_page`](https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page) directive.",
          "description_html": "\u003cp\u003eDetermines whether a uwsgi server responses with codes greater than or equal\nto 300 should be passed to a client\nor be intercepted and redirected to nginx for processing\nwith the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page\" target=\"_blank\"\u003e\u003ccode\u003eerror_page\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_limit_rate",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`rate`*"
          ],
          "isBlock": false,
          "description_md": "Limits the speed of reading the response from the uwsgi server.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the uwsgi server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n[buffering](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering) of responses from the uwsgi\nserver is enabled.",
          "description_html": "\u003cp\u003eLimits the speed of reading the response from the uwsgi server.\nThe \u003cem\u003e\u003ccode\u003erate\u003c/code\u003e\u003c/em\u003e is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a request, and so if nginx simultaneously opens\ntwo connections to the uwsgi server,\nthe overall rate will be twice as much as the specified limit.\nThe limitation works only if\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the uwsgi\nserver is enabled.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_max_temp_file_size",
          "default": "1024m",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "When [buffering](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering) of responses from the uwsgi\nserver is enabled, and the whole response does not fit into the buffers\nset by the [`uwsgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size) and [`uwsgi_buffers`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers)\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum *`size`* of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the [`uwsgi_temp_file_write_size`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_file_write_size) directive.\n\nThe zero value disables buffering of responses to temporary files.\n\n\u003e This restriction does not apply to responses\n\u003e that will be [cached](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache)\n\u003e or [stored](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_store) on disk.",
          "description_html": "\u003cp\u003eWhen \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffering\" target=\"_blank\"\u003ebuffering\u003c/a\u003e of responses from the uwsgi\nserver is enabled, and the whole response does not fit into the buffers\nset by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_buffers\u003c/code\u003e\u003c/a\u003e\ndirectives, a part of the response can be saved to a temporary file.\nThis directive sets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the temporary file.\nThe size of data written to the temporary file at a time is set\nby the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_file_write_size\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_temp_file_write_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cp\u003eThe zero value disables buffering of responses to temporary files.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis restriction does not apply to responses\nthat will be \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache\" target=\"_blank\"\u003ecached\u003c/a\u003e\nor \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_store\" target=\"_blank\"\u003estored\u003c/a\u003e on disk.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "uwsgi_modifier1",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the value of the `modifier1` field in the\n[uwsgi packet header](http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header).",
          "description_html": "\u003cp\u003eSets the value of the \u003ccode\u003emodifier1\u003c/code\u003e field in the\n\u003ca href=\"http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header\" target=\"_blank\"\u003euwsgi packet header\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_modifier2",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the value of the `modifier2` field in the\n[uwsgi packet header](http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header).",
          "description_html": "\u003cp\u003eSets the value of the \u003ccode\u003emodifier2\u003c/code\u003e field in the\n\u003ca href=\"http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header\" target=\"_blank\"\u003euwsgi packet header\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_next_upstream",
          "default": "error timeout",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`error` | `timeout` | `invalid_header` | `http_500` | `http_503` | `http_403` | `http_404` | `http_429` | `non_idempotent` | `off` ..."
          ],
          "isBlock": false,
          "description_md": "Specifies in which cases a request should be passed to the next server:\n- `error`\n\n    an error occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `timeout`\n\n    a timeout has occurred while establishing a connection with the\n    server, passing a request to it, or reading the response header;\n- `invalid_header`\n\n    a server returned an empty or invalid response;\n- `http_500`\n\n    a server returned a response with the code 500;\n- `http_503`\n\n    a server returned a response with the code 503;\n- `http_403`\n\n    a server returned a response with the code 403;\n- `http_404`\n\n    a server returned a response with the code 404;\n- `http_429`\n\n    a server returned a response with the code 429 (1.11.13);\n- `non_idempotent`\n\n    normally, requests with a\n    [non-idempotent](https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2)\n    method\n    (`POST`, `LOCK`, `PATCH`)\n    are not passed to the next server\n    if a request has been sent to an upstream server (1.9.13);\n    enabling this option explicitly allows retrying such requests;\n- `off`\n\n    disables passing a request to the next server.\n\nOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\n\nThe directive also defines what is considered an\n[unsuccessful attempt](https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails) of communication with a server.\nThe cases of `error`, `timeout` and\n`invalid_header` are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of `http_500`, `http_503`,\nand `http_429` are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of `http_403` and `http_404`\nare never considered unsuccessful attempts.\n\nPassing a request to the next server can be limited by\n[the number of tries](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream_tries)\nand by [time](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream_timeout).",
          "description_html": "\u003cp\u003eSpecifies in which cases a request should be passed to the next server:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eerror\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ean error occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea timeout has occurred while establishing a connection with the\nserver, passing a request to it, or reading the response header;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einvalid_header\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned an empty or invalid response;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_500\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 500;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_503\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 503;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_403\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 403;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_404\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 404;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehttp_429\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea server returned a response with the code 429 (1.11.13);\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enon_idempotent\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003enormally, requests with a\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-4.2.2\" target=\"_blank\"\u003enon-idempotent\u003c/a\u003e\nmethod\n(\u003ccode\u003ePOST\u003c/code\u003e, \u003ccode\u003eLOCK\u003c/code\u003e, \u003ccode\u003ePATCH\u003c/code\u003e)\nare not passed to the next server\nif a request has been sent to an upstream server (1.9.13);\nenabling this option explicitly allows retrying such requests;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables passing a request to the next server.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eOne should bear in mind that passing a request to the next server is\nonly possible if nothing has been sent to a client yet.\nThat is, if an error or timeout occurs in the middle of the\ntransferring of a response, fixing this is impossible.\u003c/p\u003e\n\n\u003cp\u003eThe directive also defines what is considered an\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails\" target=\"_blank\"\u003eunsuccessful attempt\u003c/a\u003e of communication with a server.\nThe cases of \u003ccode\u003eerror\u003c/code\u003e, \u003ccode\u003etimeout\u003c/code\u003e and\n\u003ccode\u003einvalid_header\u003c/code\u003e are always considered unsuccessful attempts,\neven if they are not specified in the directive.\nThe cases of \u003ccode\u003ehttp_500\u003c/code\u003e, \u003ccode\u003ehttp_503\u003c/code\u003e,\nand \u003ccode\u003ehttp_429\u003c/code\u003e are\nconsidered unsuccessful attempts only if they are specified in the directive.\nThe cases of \u003ccode\u003ehttp_403\u003c/code\u003e and \u003ccode\u003ehttp_404\u003c/code\u003e\nare never considered unsuccessful attempts.\u003c/p\u003e\n\n\u003cp\u003ePassing a request to the next server can be limited by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream_tries\" target=\"_blank\"\u003ethe number of tries\u003c/a\u003e\nand by \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream_timeout\" target=\"_blank\"\u003etime\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_next_upstream_timeout",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Limits the time during which a request can be passed to the\n[next server](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the time during which a request can be passed to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_next_upstream_tries",
          "default": "0",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Limits the number of possible tries for passing a request to the\n[next server](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the number of possible tries for passing a request to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_no_cache",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Defines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\n```\nuwsgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nuwsgi_no_cache $http_pragma    $http_authorization;\n```\nCan be used along with the [`uwsgi_cache_bypass`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_bypass) directive.",
          "description_html": "\u003cp\u003eDefines conditions under which the response will not be saved to a cache.\nIf at least one value of the string parameters is not empty and is not\nequal to “0” then the response will not be saved:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_no_cache $cookie_nocache $arg_nocache$arg_comment;\nuwsgi_no_cache $http_pragma    $http_authorization;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eCan be used along with the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_bypass\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_cache_bypass\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_param",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`parameter`* *`value`* [`if_not_empty`]"
          ],
          "isBlock": false,
          "description_md": "Sets a *`parameter`* that should be passed to the uwsgi server.\nThe *`value`* can contain text, variables, and their combination.\nThese directives are inherited from the previous configuration level\nif and only if there are no `uwsgi_param` directives\ndefined on the current level.\n\nStandard\n[CGI environment variables](https://datatracker.ietf.org/doc/html/rfc3875#section-4.1)\nshould be provided as uwsgi headers, see the `uwsgi_params` file\nprovided in the distribution:\n```\nlocation / {\n    include uwsgi_params;\n    ...\n}\n```\n\nIf the directive is specified with `if_not_empty` (1.1.11) then\nsuch a parameter will be passed to the server only if its value is not empty:\n```\nuwsgi_param HTTPS $https if_not_empty;\n```",
          "description_html": "\u003cp\u003eSets a \u003cem\u003e\u003ccode\u003eparameter\u003c/code\u003e\u003c/em\u003e that should be passed to the uwsgi server.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combination.\nThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003euwsgi_param\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cp\u003eStandard\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc3875#section-4.1\" target=\"_blank\"\u003eCGI environment variables\u003c/a\u003e\nshould be provided as uwsgi headers, see the \u003ccode\u003euwsgi_params\u003c/code\u003e file\nprovided in the distribution:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    include uwsgi_params;\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf the directive is specified with \u003ccode\u003eif_not_empty\u003c/code\u003e (1.1.11) then\nsuch a parameter will be passed to the server only if its value is not empty:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_param HTTPS $https if_not_empty;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "uwsgi_pass",
          "default": "",
          "contexts": [
            "location",
            "if in location"
          ],
          "syntax": [
            "[*`protocol`*://]*`address`*"
          ],
          "isBlock": false,
          "description_md": "Sets the protocol and address of a uwsgi server.\nAs a *`protocol`*,\n“`uwsgi`” or “`suwsgi`”\n(secured uwsgi, uwsgi over SSL) can be specified.\nThe address can be specified as a domain name or IP address,\nand a port:\n```\nuwsgi_pass localhost:9000;\nuwsgi_pass uwsgi://localhost:9000;\nuwsgi_pass suwsgi://[2001:db8::1]:9090;\n```\nor as a UNIX-domain socket path:\n```\nuwsgi_pass unix:/tmp/uwsgi.socket;\n```\n\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n[server group](https://nginx.org/en/docs/http/ngx_http_upstream_module.html).\n\nParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n[server groups](https://nginx.org/en/docs/http/ngx_http_upstream_module.html),\nand, if not found, is determined using a\n[`resolver`](https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver).\n\n\u003e Secured uwsgi protocol is supported since version 1.5.8.",
          "description_html": "\u003cp\u003eSets the protocol and address of a uwsgi server.\nAs a \u003cem\u003e\u003ccode\u003eprotocol\u003c/code\u003e\u003c/em\u003e,\n“\u003ccode\u003euwsgi\u003c/code\u003e” or “\u003ccode\u003esuwsgi\u003c/code\u003e”\n(secured uwsgi, uwsgi over SSL) can be specified.\nThe address can be specified as a domain name or IP address,\nand a port:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_pass localhost:9000;\nuwsgi_pass uwsgi://localhost:9000;\nuwsgi_pass suwsgi://[2001:db8::1]:9090;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eor as a UNIX-domain socket path:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_pass unix:/tmp/uwsgi.socket;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003eserver group\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eParameter value can contain variables.\nIn this case, if an address is specified as a domain name,\nthe name is searched among the described\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_module.html\" target=\"_blank\"\u003eserver groups\u003c/a\u003e,\nand, if not found, is determined using a\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#resolver\" target=\"_blank\"\u003e\u003ccode\u003eresolver\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSecured uwsgi protocol is supported since version 1.5.8.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "uwsgi_pass_header",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`field`*"
          ],
          "isBlock": false,
          "description_md": "Permits passing [otherwise disabled](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_hide_header) header\nfields from a uwsgi server to a client.",
          "description_html": "\u003cp\u003ePermits passing \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_hide_header\" target=\"_blank\"\u003eotherwise disabled\u003c/a\u003e header\nfields from a uwsgi server to a client.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_pass_request_body",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether the original request body is passed\nto the uwsgi server.\nSee also the [`uwsgi_pass_request_headers`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass_request_headers) directive.",
          "description_html": "\u003cp\u003eIndicates whether the original request body is passed\nto the uwsgi server.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass_request_headers\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_pass_request_headers\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_pass_request_headers",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether the header fields of the original request are passed\nto the uwsgi server.\nSee also the [`uwsgi_pass_request_body`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass_request_body) directive.",
          "description_html": "\u003cp\u003eIndicates whether the header fields of the original request are passed\nto the uwsgi server.\nSee also the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass_request_body\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_pass_request_body\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_read_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for reading a response from the uwsgi server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the uwsgi server does not transmit anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eDefines a timeout for reading a response from the uwsgi server.\nThe timeout is set only between two successive read operations,\nnot for the transmission of the whole response.\nIf the uwsgi server does not transmit anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_request_buffering",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables buffering of a client request body.\n\nWhen buffering is enabled, the entire request body is\n[read](https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size)\nfrom the client before sending the request to a uwsgi server.\n\nWhen buffering is disabled, the request body is sent to the uwsgi server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n[next server](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream)\nif nginx already started sending the request body.\n\nWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value.",
          "description_html": "\u003cp\u003eEnables or disables buffering of a client request body.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is enabled, the entire request body is\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size\" target=\"_blank\"\u003eread\u003c/a\u003e\nfrom the client before sending the request to a uwsgi server.\u003c/p\u003e\n\n\u003cp\u003eWhen buffering is disabled, the request body is sent to the uwsgi server\nimmediately as it is received.\nIn this case, the request cannot be passed to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e\nif nginx already started sending the request body.\u003c/p\u003e\n\n\u003cp\u003eWhen HTTP/1.1 chunked transfer encoding is used\nto send the original request body,\nthe request body will be buffered regardless of the directive value.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_send_timeout",
          "default": "60s",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for transmitting a request to the uwsgi server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the uwsgi server does not receive anything within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eSets a timeout for transmitting a request to the uwsgi server.\nThe timeout is set only between two successive write operations,\nnot for the transmission of the whole request.\nIf the uwsgi server does not receive anything within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_socket_keepalive",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Configures the “TCP keepalive” behavior\nfor outgoing connections to a uwsgi server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “`on`”, the\n`SO_KEEPALIVE` socket option is turned on for the socket.",
          "description_html": "\u003cp\u003eConfigures the “TCP keepalive” behavior\nfor outgoing connections to a uwsgi server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “\u003ccode\u003eon\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e socket option is turned on for the socket.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_certificate",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the certificate in the PEM format\nused for authentication to a secured uwsgi server.\n\nSince version 1.21.0, variables can be used in the *`file`* name.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the certificate in the PEM format\nused for authentication to a secured uwsgi server.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.21.0, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_certificate_key",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the secret key in the PEM format\nused for authentication to a secured uwsgi server.\n\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`* (1.7.9),\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n\nSince version 1.21.0, variables can be used in the *`file`* name.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key in the PEM format\nused for authentication to a secured uwsgi server.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003eengine\u003c/code\u003e:\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e (1.7.9),\nwhich loads a secret key with a specified \u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\nfrom the OpenSSL engine \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.21.0, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_ciphers",
          "default": "DEFAULT",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`ciphers`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the enabled ciphers for requests to a secured uwsgi server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n\nThe full list can be viewed using the\n“`openssl ciphers`” command.",
          "description_html": "\u003cp\u003eSpecifies the enabled ciphers for requests to a secured uwsgi server.\nThe ciphers are specified in the format understood by the OpenSSL library.\u003c/p\u003e\n\n\u003cp\u003eThe full list can be viewed using the\n“\u003ccode\u003eopenssl ciphers\u003c/code\u003e” command.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_conf_command",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets arbitrary OpenSSL configuration\n[commands](https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html)\nwhen establishing a connection with the secured uwsgi server.\n\u003e The directive is supported when using OpenSSL 1.0.2 or higher.\n\nSeveral `uwsgi_ssl_conf_command` directives\ncan be specified on the same level.\nThese directives are inherited from the previous configuration level\nif and only if there are\nno `uwsgi_ssl_conf_command` directives\ndefined on the current level.\n\n\u003e Note that configuring OpenSSL directly\n\u003e might result in unexpected behavior.",
          "description_html": "\u003cp\u003eSets arbitrary OpenSSL configuration\n\u003ca href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\" target=\"_blank\"\u003ecommands\u003c/a\u003e\nwhen establishing a connection with the secured uwsgi server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is supported when using OpenSSL 1.0.2 or higher.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003euwsgi_ssl_conf_command\u003c/code\u003e directives\ncan be specified on the same level.\nThese directives are inherited from the previous configuration level\nif and only if there are\nno \u003ccode\u003euwsgi_ssl_conf_command\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote that configuring OpenSSL directly\nmight result in unexpected behavior.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "uwsgi_ssl_crl",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to [verify](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify)\nthe certificate of the secured uwsgi server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with revoked certificates (CRL)\nin the PEM format used to \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the secured uwsgi server.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_name",
          "default": "host from uwsgi_pass",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`*"
          ],
          "isBlock": false,
          "description_md": "Allows overriding the server name used to\n[verify](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify)\nthe certificate of the secured uwsgi server and to be\n[passed through SNI](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_server_name)\nwhen establishing a connection with the secured uwsgi server.\n\nBy default, the host part from [`uwsgi_pass`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass) is used.",
          "description_html": "\u003cp\u003eAllows overriding the server name used to\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the secured uwsgi server and to be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_server_name\" target=\"_blank\"\u003epassed through SNI\u003c/a\u003e\nwhen establishing a connection with the secured uwsgi server.\u003c/p\u003e\n\n\u003cp\u003eBy default, the host part from \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_pass\u003c/code\u003e\u003c/a\u003e is used.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_password_file",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with passphrases for\n[secret keys](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_certificate_key)\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with passphrases for\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_certificate_key\" target=\"_blank\"\u003esecret keys\u003c/a\u003e\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_protocols",
          "default": "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "[`SSLv2`] [`SSLv3`] [`TLSv1`] [`TLSv1.1`] [`TLSv1.2`] [`TLSv1.3`]"
          ],
          "isBlock": false,
          "description_md": "Enables the specified protocols for requests to a secured uwsgi server.\n\n\u003e The `TLSv1.3` parameter is used by default\n\u003e since 1.23.4.",
          "description_html": "\u003cp\u003eEnables the specified protocols for requests to a secured uwsgi server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003eTLSv1.3\u003c/code\u003e parameter is used by default\nsince 1.23.4.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "uwsgi_ssl_server_name",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables passing of the server name through\n[TLS Server Name Indication extension](http://en.wikipedia.org/wiki/Server_Name_Indication) (SNI, RFC 6066)\nwhen establishing a connection with the secured uwsgi server.",
          "description_html": "\u003cp\u003eEnables or disables passing of the server name through\n\u003ca href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\" target=\"_blank\"\u003eTLS Server Name Indication extension\u003c/a\u003e (SNI, RFC 6066)\nwhen establishing a connection with the secured uwsgi server.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_session_reuse",
          "default": "on",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether SSL sessions can be reused when working with\na secured uwsgi server.\nIf the errors\n“`SSL3_GET_FINISHED:digest check failed`”\nappear in the logs, try disabling session reuse.",
          "description_html": "\u003cp\u003eDetermines whether SSL sessions can be reused when working with\na secured uwsgi server.\nIf the errors\n“\u003ccode\u003eSSL3_GET_FINISHED:digest check failed\u003c/code\u003e”\nappear in the logs, try disabling session reuse.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_trusted_certificate",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify)\nthe certificate of the secured uwsgi server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the secured uwsgi server.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_verify",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables verification of the secured uwsgi server certificate.",
          "description_html": "\u003cp\u003eEnables or disables verification of the secured uwsgi server certificate.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_ssl_verify_depth",
          "default": "1",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the verification depth in the secured uwsgi server certificates chain.",
          "description_html": "\u003cp\u003eSets the verification depth in the secured uwsgi server certificates chain.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_store",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off` | *`string`*"
          ],
          "isBlock": false,
          "description_md": "Enables saving of files to a disk.\nThe `on` parameter saves files with paths\ncorresponding to the directives\n[`alias`](https://nginx.org/en/docs/http/ngx_http_core_module.html#alias) or\n[`root`](https://nginx.org/en/docs/http/ngx_http_core_module.html#root).\nThe `off` parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n*`string`* with variables:\n```\nuwsgi_store /data/www$original_uri;\n```\n\nThe modification time of files is set according to the received\n\"Last-Modified\" response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the [`uwsgi_temp_path`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_path)\ndirective, are put on the same file system.\n\nThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\n```\nlocation /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    uwsgi_pass         backend:9000;\n    ...\n\n    uwsgi_store        on;\n    uwsgi_store_access user:rw group:rw all:r;\n    uwsgi_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n```",
          "description_html": "\u003cp\u003eEnables saving of files to a disk.\nThe \u003ccode\u003eon\u003c/code\u003e parameter saves files with paths\ncorresponding to the directives\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#alias\" target=\"_blank\"\u003e\u003ccode\u003ealias\u003c/code\u003e\u003c/a\u003e or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#root\" target=\"_blank\"\u003e\u003ccode\u003eroot\u003c/code\u003e\u003c/a\u003e.\nThe \u003ccode\u003eoff\u003c/code\u003e parameter disables saving of files.\nIn addition, the file name can be set explicitly using the\n\u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e with variables:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_store /data/www$original_uri;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe modification time of files is set according to the received\n\u0026ldquo;Last-Modified\u0026rdquo; response header field.\nThe response is first written to a temporary file,\nand then the file is renamed.\nStarting from version 0.8.9, temporary files and the persistent store\ncan be put on different file systems.\nHowever, be aware that in this case a file is copied\nacross two file systems instead of the cheap renaming operation.\nIt is thus recommended that for any given location both saved files and a\ndirectory holding temporary files, set by the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_temp_path\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_temp_path\u003c/code\u003e\u003c/a\u003e\ndirective, are put on the same file system.\u003c/p\u003e\n\n\u003cp\u003eThis directive can be used to create local copies of static unchangeable\nfiles, e.g.:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation /images/ {\n    root               /data/www;\n    error_page         404 = /fetch$uri;\n}\n\nlocation /fetch/ {\n    internal;\n\n    uwsgi_pass         backend:9000;\n    ...\n\n    uwsgi_store        on;\n    uwsgi_store_access user:rw group:rw all:r;\n    uwsgi_temp_path    /data/temp;\n\n    alias              /data/www/;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "uwsgi_store_access",
          "default": "user:rw",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`users`*:*`permissions`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets access permissions for newly created files and directories, e.g.:\n```\nuwsgi_store_access user:rw group:rw all:r;\n```\n\nIf any `group` or `all` access permissions\nare specified then `user` permissions may be omitted:\n```\nuwsgi_store_access group:rw all:r;\n```",
          "description_html": "\u003cp\u003eSets access permissions for newly created files and directories, e.g.:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_store_access user:rw group:rw all:r;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf any \u003ccode\u003egroup\u003c/code\u003e or \u003ccode\u003eall\u003c/code\u003e access permissions\nare specified then \u003ccode\u003euser\u003c/code\u003e permissions may be omitted:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_store_access group:rw all:r;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "uwsgi_temp_file_write_size",
          "default": "8k|16k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Limits the *`size`* of data written to a temporary file\nat a time, when buffering of responses from the uwsgi server\nto temporary files is enabled.\nBy default, *`size`* is limited by two buffers set by the\n[`uwsgi_buffer_size`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size) and [`uwsgi_buffers`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers) directives.\nThe maximum size of a temporary file is set by the\n[`uwsgi_max_temp_file_size`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_max_temp_file_size) directive.",
          "description_html": "\u003cp\u003eLimits the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of data written to a temporary file\nat a time, when buffering of responses from the uwsgi server\nto temporary files is enabled.\nBy default, \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e is limited by two buffers set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_buffer_size\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_buffers\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_buffers\u003c/code\u003e\u003c/a\u003e directives.\nThe maximum size of a temporary file is set by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_max_temp_file_size\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_max_temp_file_size\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        },
        {
          "name": "uwsgi_temp_path",
          "default": "uwsgi_temp",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`path`* [*`level1`* [*`level2`* [*`level3`*]]]"
          ],
          "isBlock": false,
          "description_md": "Defines a directory for storing temporary files\nwith data received from uwsgi servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\n```\nuwsgi_temp_path /spool/nginx/uwsgi_temp 1 2;\n```\na temporary file might look like this:\n```\n/spool/nginx/uwsgi_temp/7/45/00000123457\n```\n\nSee also the `use_temp_path` parameter of the\n[`uwsgi_cache_path`](https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_path) directive.",
          "description_html": "\u003cp\u003eDefines a directory for storing temporary files\nwith data received from uwsgi servers.\nUp to three-level subdirectory hierarchy can be used underneath the specified\ndirectory.\nFor example, in the following configuration\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003euwsgi_temp_path /spool/nginx/uwsgi_temp 1 2;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ea temporary file might look like this:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e/spool/nginx/uwsgi_temp/7/45/00000123457\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eSee also the \u003ccode\u003euse_temp_path\u003c/code\u003e parameter of the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_cache_path\" target=\"_blank\"\u003e\u003ccode\u003euwsgi_cache_path\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_v2_module.html",
      "name": "ngx_http_v2_module",
      "directives": [
        {
          "name": "http2",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables\nthe [HTTP/2](https://datatracker.ietf.org/doc/html/rfc9113)\nprotocol.",
          "description_html": "\u003cp\u003eEnables\nthe \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc9113\" target=\"_blank\"\u003eHTTP/2\u003c/a\u003e\nprotocol.\u003c/p\u003e\n"
        },
        {
          "name": "http2_body_preread_size",
          "default": "64k",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer per each request\nin which the request body may be saved\nbefore it is started to be processed.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer per each request\nin which the request body may be saved\nbefore it is started to be processed.\u003c/p\u003e\n"
        },
        {
          "name": "http2_chunk_size",
          "default": "8k",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum size of chunks\ninto which the response body is sliced.\nA too low value results in higher overhead.\nA too high value impairs prioritization due to\n[ HOL blocking](http://en.wikipedia.org/wiki/Head-of-line_blocking).",
          "description_html": "\u003cp\u003eSets the maximum size of chunks\ninto which the response body is sliced.\nA too low value results in higher overhead.\nA too high value impairs prioritization due to\n\u003ca href=\"http://en.wikipedia.org/wiki/Head-of-line_blocking\" target=\"_blank\"\u003e HOL blocking\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "http2_idle_timeout",
          "default": "3m",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "\u003e This directive is obsolete since version 1.19.7.\n\u003e The [`keepalive_timeout`](https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_timeout)\n\u003e directive should be used instead.\n\nSets the timeout of inactivity after which the connection is closed.",
          "description_html": "\u003cblockquote\u003e\n\u003cp\u003eThis directive is obsolete since version 1.19.7.\nThe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_timeout\" target=\"_blank\"\u003e\u003ccode\u003ekeepalive_timeout\u003c/code\u003e\u003c/a\u003e\ndirective should be used instead.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSets the timeout of inactivity after which the connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "http2_max_concurrent_pushes",
          "default": "10",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "\u003e This directive is obsolete since version 1.25.1.\n\nLimits the maximum number of concurrent\n[push](https://nginx.org/en/docs/http/ngx_http_v2_module.html#http2_push) requests in a connection.",
          "description_html": "\u003cblockquote\u003e\n\u003cp\u003eThis directive is obsolete since version 1.25.1.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eLimits the maximum number of concurrent\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html#http2_push\" target=\"_blank\"\u003epush\u003c/a\u003e requests in a connection.\u003c/p\u003e\n"
        },
        {
          "name": "http2_max_concurrent_streams",
          "default": "128",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum number of concurrent HTTP/2 streams\nin a connection.",
          "description_html": "\u003cp\u003eSets the maximum number of concurrent HTTP/2 streams\nin a connection.\u003c/p\u003e\n"
        },
        {
          "name": "http2_max_field_size",
          "default": "4k",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "\u003e This directive is obsolete since version 1.19.7.\n\u003e The [`large_client_header_buffers`](https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers)\n\u003e directive should be used instead.\n\nLimits the maximum size of\nan [HPACK](https://datatracker.ietf.org/doc/html/rfc7541)-compressed\nrequest header field.\nThe limit applies equally to both name and value.\nNote that if Huffman encoding is applied,\nthe actual size of decompressed name and value strings may be larger.\nFor most requests, the default limit should be enough.",
          "description_html": "\u003cblockquote\u003e\n\u003cp\u003eThis directive is obsolete since version 1.19.7.\nThe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers\" target=\"_blank\"\u003e\u003ccode\u003elarge_client_header_buffers\u003c/code\u003e\u003c/a\u003e\ndirective should be used instead.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eLimits the maximum size of\nan \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7541\" target=\"_blank\"\u003eHPACK\u003c/a\u003e-compressed\nrequest header field.\nThe limit applies equally to both name and value.\nNote that if Huffman encoding is applied,\nthe actual size of decompressed name and value strings may be larger.\nFor most requests, the default limit should be enough.\u003c/p\u003e\n"
        },
        {
          "name": "http2_max_header_size",
          "default": "16k",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "\u003e This directive is obsolete since version 1.19.7.\n\u003e The [`large_client_header_buffers`](https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers)\n\u003e directive should be used instead.\n\nLimits the maximum size of the entire request header list after\n[HPACK](https://datatracker.ietf.org/doc/html/rfc7541) decompression.\nFor most requests, the default limit should be enough.",
          "description_html": "\u003cblockquote\u003e\n\u003cp\u003eThis directive is obsolete since version 1.19.7.\nThe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers\" target=\"_blank\"\u003e\u003ccode\u003elarge_client_header_buffers\u003c/code\u003e\u003c/a\u003e\ndirective should be used instead.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eLimits the maximum size of the entire request header list after\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7541\" target=\"_blank\"\u003eHPACK\u003c/a\u003e decompression.\nFor most requests, the default limit should be enough.\u003c/p\u003e\n"
        },
        {
          "name": "http2_max_requests",
          "default": "1000",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "\u003e This directive is obsolete since version 1.19.7.\n\u003e The [`keepalive_requests`](https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_requests)\n\u003e directive should be used instead.\n\nSets the maximum number of requests (including\n[push](https://nginx.org/en/docs/http/ngx_http_v2_module.html#http2_push) requests) that can be served\nthrough one HTTP/2 connection,\nafter which the next client request will lead to connection closing\nand the need of establishing a new connection.\n\nClosing connections periodically is necessary to free\nper-connection memory allocations.\nTherefore, using too high maximum number of requests\ncould result in excessive memory usage and not recommended.",
          "description_html": "\u003cblockquote\u003e\n\u003cp\u003eThis directive is obsolete since version 1.19.7.\nThe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_requests\" target=\"_blank\"\u003e\u003ccode\u003ekeepalive_requests\u003c/code\u003e\u003c/a\u003e\ndirective should be used instead.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSets the maximum number of requests (including\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_v2_module.html#http2_push\" target=\"_blank\"\u003epush\u003c/a\u003e requests) that can be served\nthrough one HTTP/2 connection,\nafter which the next client request will lead to connection closing\nand the need of establishing a new connection.\u003c/p\u003e\n\n\u003cp\u003eClosing connections periodically is necessary to free\nper-connection memory allocations.\nTherefore, using too high maximum number of requests\ncould result in excessive memory usage and not recommended.\u003c/p\u003e\n"
        },
        {
          "name": "http2_push",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`uri`* | `off`"
          ],
          "isBlock": false,
          "description_md": "\u003e This directive is obsolete since version 1.25.1.\n\nPre-emptively sends\n([pushes](https://datatracker.ietf.org/doc/html/rfc9113#section-8.4))\na request to the specified *`uri`*\nalong with the response to the original request.\nOnly relative URIs with absolute path will be processed,\nfor example:\n```\nhttp2_push /static/css/main.css;\n```\nThe *`uri`* value can contain variables.\n\nSeveral `http2_push` directives\ncan be specified on the same configuration level.\nThe `off` parameter cancels the effect\nof the `http2_push` directives\ninherited from the previous configuration level.",
          "description_html": "\u003cblockquote\u003e\n\u003cp\u003eThis directive is obsolete since version 1.25.1.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003ePre-emptively sends\n(\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc9113#section-8.4\" target=\"_blank\"\u003epushes\u003c/a\u003e)\na request to the specified \u003cem\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/em\u003e\nalong with the response to the original request.\nOnly relative URIs with absolute path will be processed,\nfor example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehttp2_push /static/css/main.css;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003cem\u003e\u003ccode\u003euri\u003c/code\u003e\u003c/em\u003e value can contain variables.\u003c/p\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003ehttp2_push\u003c/code\u003e directives\ncan be specified on the same configuration level.\nThe \u003ccode\u003eoff\u003c/code\u003e parameter cancels the effect\nof the \u003ccode\u003ehttp2_push\u003c/code\u003e directives\ninherited from the previous configuration level.\u003c/p\u003e\n"
        },
        {
          "name": "http2_push_preload",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "\u003e This directive is obsolete since version 1.25.1.\n\nEnables automatic conversion of\n[preload links](https://www.w3.org/TR/preload/#server-push-http-2)\nspecified in the \"Link\" response header fields into\n[push](https://datatracker.ietf.org/doc/html/rfc9113#section-8.4)\nrequests.",
          "description_html": "\u003cblockquote\u003e\n\u003cp\u003eThis directive is obsolete since version 1.25.1.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eEnables automatic conversion of\n\u003ca href=\"https://www.w3.org/TR/preload/#server-push-http-2\" target=\"_blank\"\u003epreload links\u003c/a\u003e\nspecified in the \u0026ldquo;Link\u0026rdquo; response header fields into\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc9113#section-8.4\" target=\"_blank\"\u003epush\u003c/a\u003e\nrequests.\u003c/p\u003e\n"
        },
        {
          "name": "http2_recv_buffer_size",
          "default": "256k",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the size of the per\n[worker](https://nginx.org/en/docs/ngx_core_module.html#worker_processes)\ninput buffer.",
          "description_html": "\u003cp\u003eSets the size of the per\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#worker_processes\" target=\"_blank\"\u003eworker\u003c/a\u003e\ninput buffer.\u003c/p\u003e\n"
        },
        {
          "name": "http2_recv_timeout",
          "default": "30s",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "\u003e This directive is obsolete since version 1.19.7.\n\u003e The [`client_header_timeout`](https://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_timeout)\n\u003e directive should be used instead.\n\nSets the timeout for expecting more data from the client,\nafter which the connection is closed.",
          "description_html": "\u003cblockquote\u003e\n\u003cp\u003eThis directive is obsolete since version 1.19.7.\nThe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_timeout\" target=\"_blank\"\u003e\u003ccode\u003eclient_header_timeout\u003c/code\u003e\u003c/a\u003e\ndirective should be used instead.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSets the timeout for expecting more data from the client,\nafter which the connection is closed.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_v3_module.html",
      "name": "ngx_http_v3_module",
      "directives": [
        {
          "name": "http3",
          "default": "on",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables\n[HTTP/3](https://datatracker.ietf.org/doc/html/rfc9114)\nprotocol negotiation.",
          "description_html": "\u003cp\u003eEnables\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc9114\" target=\"_blank\"\u003eHTTP/3\u003c/a\u003e\nprotocol negotiation.\u003c/p\u003e\n"
        },
        {
          "name": "http3_hq",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables HTTP/0.9 protocol negotiation\nused in\n[QUIC interoperability tests](https://github.com/marten-seemann/quic-interop-runner).",
          "description_html": "\u003cp\u003eEnables HTTP/0.9 protocol negotiation\nused in\n\u003ca href=\"https://github.com/marten-seemann/quic-interop-runner\" target=\"_blank\"\u003eQUIC interoperability tests\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "http3_max_concurrent_streams",
          "default": "128",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum number of concurrent HTTP/3 request streams\nin a connection.",
          "description_html": "\u003cp\u003eSets the maximum number of concurrent HTTP/3 request streams\nin a connection.\u003c/p\u003e\n"
        },
        {
          "name": "http3_stream_buffer_size",
          "default": "64k",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the size of the buffer used for reading and writing of the\nQUIC streams.",
          "description_html": "\u003cp\u003eSets the size of the buffer used for reading and writing of the\nQUIC streams.\u003c/p\u003e\n"
        },
        {
          "name": "quic_active_connection_id_limit",
          "default": "2",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the\nQUIC `active_connection_id_limit` transport parameter value.\nThis is the maximum number of client connection IDs\nwhich can be stored on the server.",
          "description_html": "\u003cp\u003eSets the\nQUIC \u003ccode\u003eactive_connection_id_limit\u003c/code\u003e transport parameter value.\nThis is the maximum number of client connection IDs\nwhich can be stored on the server.\u003c/p\u003e\n"
        },
        {
          "name": "quic_bpf",
          "default": "off",
          "contexts": [
            "main"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables routing of QUIC packets using\n[eBPF](https://ebpf.io/).\nWhen enabled, this allows supporting QUIC connection migration.\n\n\u003e The directive is only supported on Linux 5.7+.",
          "description_html": "\u003cp\u003eEnables routing of QUIC packets using\n\u003ca href=\"https://ebpf.io/\" target=\"_blank\"\u003eeBPF\u003c/a\u003e.\nWhen enabled, this allows supporting QUIC connection migration.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is only supported on Linux 5.7+.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "quic_gso",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables sending in optimized batch mode\nusing segmentation offloading.\n\n\u003e Optimized sending is supported only on Linux\n\u003e featuring `UDP_SEGMENT`.",
          "description_html": "\u003cp\u003eEnables sending in optimized batch mode\nusing segmentation offloading.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOptimized sending is supported only on Linux\nfeaturing \u003ccode\u003eUDP_SEGMENT\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "quic_host_key",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Sets a *`file`* with the secret key used to encrypt\nstateless reset and address validation tokens.\nBy default, a random key is generated on each reload.\nTokens generated with old keys are not accepted.",
          "description_html": "\u003cp\u003eSets a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key used to encrypt\nstateless reset and address validation tokens.\nBy default, a random key is generated on each reload.\nTokens generated with old keys are not accepted.\u003c/p\u003e\n"
        },
        {
          "name": "quic_retry",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the\n[QUIC Address Validation](https://datatracker.ietf.org/doc/html/rfc9000#name-address-validation) feature.\nThis includes sending a new token in a `Retry` packet\nor a `NEW_TOKEN` frame\nand\nvalidating a token received in the `Initial` packet.",
          "description_html": "\u003cp\u003eEnables the\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc9000#name-address-validation\" target=\"_blank\"\u003eQUIC Address Validation\u003c/a\u003e feature.\nThis includes sending a new token in a \u003ccode\u003eRetry\u003c/code\u003e packet\nor a \u003ccode\u003eNEW_TOKEN\u003c/code\u003e frame\nand\nvalidating a token received in the \u003ccode\u003eInitial\u003c/code\u003e packet.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_http_xslt_module.html",
      "name": "ngx_http_xslt_module",
      "directives": [
        {
          "name": "xml_entities",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`path`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the DTD file that declares character entities.\nThis file is compiled at the configuration stage.\nFor technical reasons, the module is unable to use the\nexternal subset declared in the processed XML, so it is\nignored and a specially defined file is used instead.\nThis file should not describe the XML structure.\nIt is enough to declare just the required character entities, for example:\n```\n\u003c!ENTITY nbsp \"\u0026#xa0;\"\u003e\n```",
          "description_html": "\u003cp\u003eSpecifies the DTD file that declares character entities.\nThis file is compiled at the configuration stage.\nFor technical reasons, the module is unable to use the\nexternal subset declared in the processed XML, so it is\nignored and a specially defined file is used instead.\nThis file should not describe the XML structure.\nIt is enough to declare just the required character entities, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e\u0026lt;!ENTITY nbsp \u0026quot;\u0026amp;#xa0;\u0026quot;\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "xslt_last_modified",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Allows preserving the \"Last-Modified\" header field\nfrom the original response during XSLT transformations\nto facilitate response caching.\n\nBy default, the header field is removed as contents of the response\nare modified during transformations and may contain dynamically generated\nelements or parts that are changed independently of the original response.",
          "description_html": "\u003cp\u003eAllows preserving the \u0026ldquo;Last-Modified\u0026rdquo; header field\nfrom the original response during XSLT transformations\nto facilitate response caching.\u003c/p\u003e\n\n\u003cp\u003eBy default, the header field is removed as contents of the response\nare modified during transformations and may contain dynamically generated\nelements or parts that are changed independently of the original response.\u003c/p\u003e\n"
        },
        {
          "name": "xslt_param",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`parameter`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Defines the parameters for XSLT stylesheets.\nThe *`value`* is treated as an XPath expression.\nThe *`value`* can contain variables.\nTo pass a string value to a stylesheet,\nthe [`xslt_string_param`](https://nginx.org/en/docs/http/ngx_http_xslt_module.html#xslt_string_param) directive can be used.\n\nThere could be several `xslt_param` directives.\nThese directives are inherited from the previous configuration level\nif and only if there are no `xslt_param` and\n[`xslt_string_param`](https://nginx.org/en/docs/http/ngx_http_xslt_module.html#xslt_string_param) directives\ndefined on the current level.",
          "description_html": "\u003cp\u003eDefines the parameters for XSLT stylesheets.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e is treated as an XPath expression.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e can contain variables.\nTo pass a string value to a stylesheet,\nthe \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_xslt_module.html#xslt_string_param\" target=\"_blank\"\u003e\u003ccode\u003exslt_string_param\u003c/code\u003e\u003c/a\u003e directive can be used.\u003c/p\u003e\n\n\u003cp\u003eThere could be several \u003ccode\u003exslt_param\u003c/code\u003e directives.\nThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003exslt_param\u003c/code\u003e and\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_xslt_module.html#xslt_string_param\" target=\"_blank\"\u003e\u003ccode\u003exslt_string_param\u003c/code\u003e\u003c/a\u003e directives\ndefined on the current level.\u003c/p\u003e\n"
        },
        {
          "name": "xslt_string_param",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`parameter`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Defines the string parameters for XSLT stylesheets.\nXPath expressions in the *`value`* are not interpreted.\nThe *`value`* can contain variables.\n\nThere could be several `xslt_string_param` directives.\nThese directives are inherited from the previous configuration level\nif and only if there are no [`xslt_param`](https://nginx.org/en/docs/http/ngx_http_xslt_module.html#xslt_param) and\n`xslt_string_param` directives\ndefined on the current level.",
          "description_html": "\u003cp\u003eDefines the string parameters for XSLT stylesheets.\nXPath expressions in the \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e are not interpreted.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e can contain variables.\u003c/p\u003e\n\n\u003cp\u003eThere could be several \u003ccode\u003exslt_string_param\u003c/code\u003e directives.\nThese directives are inherited from the previous configuration level\nif and only if there are no \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_xslt_module.html#xslt_param\" target=\"_blank\"\u003e\u003ccode\u003exslt_param\u003c/code\u003e\u003c/a\u003e and\n\u003ccode\u003exslt_string_param\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n"
        },
        {
          "name": "xslt_stylesheet",
          "default": "",
          "contexts": [
            "location"
          ],
          "syntax": [
            "*`stylesheet`* [*`parameter`*=*`value`* ...]"
          ],
          "isBlock": false,
          "description_md": "Defines the XSLT stylesheet and its optional parameters.\nA stylesheet is compiled at the configuration stage.\n\nParameters can either be specified separately, or grouped in a\nsingle line using the “`:`” delimiter.\nIf a parameter includes the “`:`” character,\nit should be escaped as “`%3A`”.\nAlso, `libxslt` requires to enclose parameters\nthat contain non-alphanumeric characters into single or double quotes,\nfor example:\n```\nparam1='http%3A//www.example.com':param2=value2\n```\n\nThe parameters description can contain variables, for example,\nthe whole line of parameters can be taken from a single variable:\n```\nlocation / {\n    xslt_stylesheet /site/xslt/one.xslt\n                    $arg_xslt_params\n                    param1='$value1':param2=value2\n                    param3=value3;\n}\n```\n\nIt is possible to specify several stylesheets.\nThey will be applied sequentially in the specified order.",
          "description_html": "\u003cp\u003eDefines the XSLT stylesheet and its optional parameters.\nA stylesheet is compiled at the configuration stage.\u003c/p\u003e\n\n\u003cp\u003eParameters can either be specified separately, or grouped in a\nsingle line using the “\u003ccode\u003e:\u003c/code\u003e” delimiter.\nIf a parameter includes the “\u003ccode\u003e:\u003c/code\u003e” character,\nit should be escaped as “\u003ccode\u003e%3A\u003c/code\u003e”.\nAlso, \u003ccode\u003elibxslt\u003c/code\u003e requires to enclose parameters\nthat contain non-alphanumeric characters into single or double quotes,\nfor example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eparam1='http%3A//www.example.com':param2=value2\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe parameters description can contain variables, for example,\nthe whole line of parameters can be taken from a single variable:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elocation / {\n    xslt_stylesheet /site/xslt/one.xslt\n                    $arg_xslt_params\n                    param1='$value1':param2=value2\n                    param3=value3;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIt is possible to specify several stylesheets.\nThey will be applied sequentially in the specified order.\u003c/p\u003e\n"
        },
        {
          "name": "xslt_types",
          "default": "text/xml",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`mime-type`* ..."
          ],
          "isBlock": false,
          "description_md": "Enables transformations in responses with the specified MIME types\nin addition to “`text/xml`”.\nThe special value “`*`” matches any MIME type (0.8.29).\nIf the transformation result is an HTML response, its MIME type\nis changed to “`text/html`”.",
          "description_html": "\u003cp\u003eEnables transformations in responses with the specified MIME types\nin addition to “\u003ccode\u003etext/xml\u003c/code\u003e”.\nThe special value “\u003ccode\u003e*\u003c/code\u003e” matches any MIME type (0.8.29).\nIf the transformation result is an HTML response, its MIME type\nis changed to “\u003ccode\u003etext/html\u003c/code\u003e”.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/mail/ngx_mail_auth_http_module.html",
      "name": "ngx_mail_auth_http_module",
      "directives": [
        {
          "name": "auth_http",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`URL`*"
          ],
          "isBlock": false,
          "description_md": "Sets the URL of the HTTP authentication server.\nThe protocol is described [below](https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#protocol).",
          "description_html": "\u003cp\u003eSets the URL of the HTTP authentication server.\nThe protocol is described \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#protocol\" target=\"_blank\"\u003ebelow\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "auth_http_header",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`header`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Appends the specified header to requests sent to the authentication server.\nThis header can be used as the shared secret to verify\nthat the request comes from nginx.\nFor example:\n```\nauth_http_header X-Auth-Key \"secret_string\";\n```",
          "description_html": "\u003cp\u003eAppends the specified header to requests sent to the authentication server.\nThis header can be used as the shared secret to verify\nthat the request comes from nginx.\nFor example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eauth_http_header X-Auth-Key \u0026quot;secret_string\u0026quot;;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "auth_http_pass_client_cert",
          "default": "off",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Appends the \"Auth-SSL-Cert\" header with the\n[client](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client)\ncertificate in the PEM format (urlencoded)\nto requests sent to the authentication server.",
          "description_html": "\u003cp\u003eAppends the \u0026ldquo;Auth-SSL-Cert\u0026rdquo; header with the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003eclient\u003c/a\u003e\ncertificate in the PEM format (urlencoded)\nto requests sent to the authentication server.\u003c/p\u003e\n"
        },
        {
          "name": "auth_http_timeout",
          "default": "60s",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets the timeout for communication with the authentication server.",
          "description_html": "\u003cp\u003eSets the timeout for communication with the authentication server.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/mail/ngx_mail_core_module.html",
      "name": "ngx_mail_core_module",
      "directives": [
        {
          "name": "listen",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            "*`address`*:*`port`* [`ssl`] [`proxy_protocol`] [`backlog`=*`number`*] [`rcvbuf`=*`size`*] [`sndbuf`=*`size`*] [`bind`] [`ipv6only`=`on`|`off`] [`so_keepalive`=`on`|`off`|[*`keepidle`*]:[*`keepintvl`*]:[*`keepcnt`*]]"
          ],
          "isBlock": false,
          "description_md": "Sets the *`address`* and *`port`* for the socket\non which the server will accept requests.\nIt is possible to specify just the port.\nThe address can also be a hostname, for example:\n```\nlisten 127.0.0.1:110;\nlisten *:110;\nlisten 110;     # same as *:110\nlisten localhost:110;\n```\nIPv6 addresses (0.7.58) are specified in square brackets:\n```\nlisten [::1]:110;\nlisten [::]:110;\n```\nUNIX-domain sockets (1.3.5) are specified with the “`unix:`”\nprefix:\n```\nlisten unix:/var/run/nginx.sock;\n```\n\nDifferent servers must listen on different\n*`address`*:*`port`* pairs.\n\nThe `ssl` parameter allows specifying that all\nconnections accepted on this port should work in SSL mode.\n\nThe `proxy_protocol` parameter (1.19.8)\nallows specifying that all connections accepted on this port should use the\n[PROXY protocol](http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt).\nObtained information is passed to the\n[authentication server](https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#proxy_protocol)\nand can be used to\n[change the client address](https://nginx.org/en/docs/mail/ngx_mail_realip_module.html).\n\nThe `listen` directive\ncan have several additional parameters specific to socket-related system calls.\n- `backlog`=*`number`*\n\n    sets the `backlog` parameter in the\n    `listen()` call that limits\n    the maximum length for the queue of pending connections (1.9.2).\n    By default,\n    `backlog` is set to -1 on FreeBSD, DragonFly BSD, and macOS,\n    and to 511 on other platforms.\n- `rcvbuf`=*`size`*\n\n    sets the receive buffer size\n    (the `SO_RCVBUF` option) for the listening socket (1.11.13).\n- `sndbuf`=*`size`*\n\n    sets the send buffer size\n    (the `SO_SNDBUF` option) for the listening socket (1.11.13).\n- `bind`\n\n    this parameter instructs to make a separate `bind()`\n    call for a given address:port pair.\n    The fact is that if there are several `listen` directives with\n    the same port but different addresses, and one of the\n    `listen` directives listens on all addresses\n    for the given port (`*:`*`port`*), nginx will\n    `bind()` only to `*:`*`port`*.\n    It should be noted that the `getsockname()` system call will be\n    made in this case to determine the address that accepted the connection.\n    If the `backlog`,\n    `rcvbuf`, `sndbuf`,\n    `ipv6only`,\n    or `so_keepalive` parameters\n    are used then for a given\n    *`address`*:*`port`* pair\n    a separate `bind()` call will always be made.\n- `ipv6only`=`on`|`off`\n\n    this parameter determines\n    (via the `IPV6_V6ONLY` socket option)\n    whether an IPv6 socket listening on a wildcard address `[::]`\n    will accept only IPv6 connections or both IPv6 and IPv4 connections.\n    This parameter is turned on by default.\n    It can only be set once on start.\n- `so_keepalive`=`on`|`off`|[*`keepidle`*]:[*`keepintvl`*]:[*`keepcnt`*]\n\n    this parameter configures the “TCP keepalive” behavior\n    for the listening socket.\n    If this parameter is omitted then the operating system’s settings will be\n    in effect for the socket.\n    If it is set to the value “`on`”, the\n    `SO_KEEPALIVE` option is turned on for the socket.\n    If it is set to the value “`off`”, the\n    `SO_KEEPALIVE` option is turned off for the socket.\n    Some operating systems support setting of TCP keepalive parameters on\n    a per-socket basis using the `TCP_KEEPIDLE`,\n    `TCP_KEEPINTVL`, and `TCP_KEEPCNT` socket options.\n    On such systems (currently, Linux 2.4+, NetBSD 5+, and\n    FreeBSD 9.0-STABLE), they can be configured\n    using the *`keepidle`*, *`keepintvl`*, and\n    *`keepcnt`* parameters.\n    One or two parameters may be omitted, in which case the system default setting\n    for the corresponding socket option will be in effect.\n    For example,\n    ```\n    so_keepalive=30m::10\n    ```\n    will set the idle timeout (`TCP_KEEPIDLE`) to 30 minutes,\n    leave the probe interval (`TCP_KEEPINTVL`) at its system default,\n    and set the probes count (`TCP_KEEPCNT`) to 10 probes.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e for the socket\non which the server will accept requests.\nIt is possible to specify just the port.\nThe address can also be a hostname, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten 127.0.0.1:110;\nlisten *:110;\nlisten 110;     # same as *:110\nlisten localhost:110;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIPv6 addresses (0.7.58) are specified in square brackets:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten [::1]:110;\nlisten [::]:110;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eUNIX-domain sockets (1.3.5) are specified with the “\u003ccode\u003eunix:\u003c/code\u003e”\nprefix:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten unix:/var/run/nginx.sock;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eDifferent servers must listen on different\n\u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e pairs.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003essl\u003c/code\u003e parameter allows specifying that all\nconnections accepted on this port should work in SSL mode.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eproxy_protocol\u003c/code\u003e parameter (1.19.8)\nallows specifying that all connections accepted on this port should use the\n\u003ca href=\"http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt\" target=\"_blank\"\u003ePROXY protocol\u003c/a\u003e.\nObtained information is passed to the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#proxy_protocol\" target=\"_blank\"\u003eauthentication server\u003c/a\u003e\nand can be used to\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_realip_module.html\" target=\"_blank\"\u003echange the client address\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003elisten\u003c/code\u003e directive\ncan have several additional parameters specific to socket-related system calls.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebacklog\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the \u003ccode\u003ebacklog\u003c/code\u003e parameter in the\n\u003ccode\u003elisten()\u003c/code\u003e call that limits\nthe maximum length for the queue of pending connections (1.9.2).\nBy default,\n\u003ccode\u003ebacklog\u003c/code\u003e is set to -1 on FreeBSD, DragonFly BSD, and macOS,\nand to 511 on other platforms.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ercvbuf\u003c/code\u003e=\u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the receive buffer size\n(the \u003ccode\u003eSO_RCVBUF\u003c/code\u003e option) for the listening socket (1.11.13).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003esndbuf\u003c/code\u003e=\u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the send buffer size\n(the \u003ccode\u003eSO_SNDBUF\u003c/code\u003e option) for the listening socket (1.11.13).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebind\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethis parameter instructs to make a separate \u003ccode\u003ebind()\u003c/code\u003e\ncall for a given address:port pair.\nThe fact is that if there are several \u003ccode\u003elisten\u003c/code\u003e directives with\nthe same port but different addresses, and one of the\n\u003ccode\u003elisten\u003c/code\u003e directives listens on all addresses\nfor the given port (\u003ccode\u003e*:\u003c/code\u003e\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e), nginx will\n\u003ccode\u003ebind()\u003c/code\u003e only to \u003ccode\u003e*:\u003c/code\u003e\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e.\nIt should be noted that the \u003ccode\u003egetsockname()\u003c/code\u003e system call will be\nmade in this case to determine the address that accepted the connection.\nIf the \u003ccode\u003ebacklog\u003c/code\u003e,\n\u003ccode\u003ercvbuf\u003c/code\u003e, \u003ccode\u003esndbuf\u003c/code\u003e,\n\u003ccode\u003eipv6only\u003c/code\u003e,\nor \u003ccode\u003eso_keepalive\u003c/code\u003e parameters\nare used then for a given\n\u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e pair\na separate \u003ccode\u003ebind()\u003c/code\u003e call will always be made.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eipv6only\u003c/code\u003e=\u003ccode\u003eon\u003c/code\u003e|\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethis parameter determines\n(via the \u003ccode\u003eIPV6_V6ONLY\u003c/code\u003e socket option)\nwhether an IPv6 socket listening on a wildcard address \u003ccode\u003e[::]\u003c/code\u003e\nwill accept only IPv6 connections or both IPv6 and IPv4 connections.\nThis parameter is turned on by default.\nIt can only be set once on start.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eso_keepalive\u003c/code\u003e=\u003ccode\u003eon\u003c/code\u003e|\u003ccode\u003eoff\u003c/code\u003e|[\u003cem\u003e\u003ccode\u003ekeepidle\u003c/code\u003e\u003c/em\u003e]:[\u003cem\u003e\u003ccode\u003ekeepintvl\u003c/code\u003e\u003c/em\u003e]:[\u003cem\u003e\u003ccode\u003ekeepcnt\u003c/code\u003e\u003c/em\u003e]\u003c/p\u003e\n\n\u003cp\u003ethis parameter configures the “TCP keepalive” behavior\nfor the listening socket.\nIf this parameter is omitted then the operating system’s settings will be\nin effect for the socket.\nIf it is set to the value “\u003ccode\u003eon\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e option is turned on for the socket.\nIf it is set to the value “\u003ccode\u003eoff\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e option is turned off for the socket.\nSome operating systems support setting of TCP keepalive parameters on\na per-socket basis using the \u003ccode\u003eTCP_KEEPIDLE\u003c/code\u003e,\n\u003ccode\u003eTCP_KEEPINTVL\u003c/code\u003e, and \u003ccode\u003eTCP_KEEPCNT\u003c/code\u003e socket options.\nOn such systems (currently, Linux 2.4+, NetBSD 5+, and\nFreeBSD 9.0-STABLE), they can be configured\nusing the \u003cem\u003e\u003ccode\u003ekeepidle\u003c/code\u003e\u003c/em\u003e, \u003cem\u003e\u003ccode\u003ekeepintvl\u003c/code\u003e\u003c/em\u003e, and\n\u003cem\u003e\u003ccode\u003ekeepcnt\u003c/code\u003e\u003c/em\u003e parameters.\nOne or two parameters may be omitted, in which case the system default setting\nfor the corresponding socket option will be in effect.\nFor example,\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eso_keepalive=30m::10\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewill set the idle timeout (\u003ccode\u003eTCP_KEEPIDLE\u003c/code\u003e) to 30 minutes,\nleave the probe interval (\u003ccode\u003eTCP_KEEPINTVL\u003c/code\u003e) at its system default,\nand set the probes count (\u003ccode\u003eTCP_KEEPCNT\u003c/code\u003e) to 10 probes.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "mail",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            " `{...}`"
          ],
          "isBlock": true,
          "description_md": "Provides the configuration file context in which the mail server directives\nare specified.",
          "description_html": "\u003cp\u003eProvides the configuration file context in which the mail server directives\nare specified.\u003c/p\u003e\n"
        },
        {
          "name": "max_errors",
          "default": "5",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the number of protocol errors after which the connection is closed.",
          "description_html": "\u003cp\u003eSets the number of protocol errors after which the connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "protocol",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            "`imap` | `pop3` | `smtp`"
          ],
          "isBlock": false,
          "description_md": "Sets the protocol for a proxied server.\nSupported protocols are\n[IMAP](https://nginx.org/en/docs/mail/ngx_mail_imap_module.html),\n[POP3](https://nginx.org/en/docs/mail/ngx_mail_pop3_module.html), and\n[SMTP](https://nginx.org/en/docs/mail/ngx_mail_smtp_module.html).\n\nIf the directive is not set, the protocol can be detected automatically\nbased on the well-known port specified in the [`listen`](https://nginx.org/en/docs/mail/ngx_mail_core_module.html#listen)\ndirective:\n- `imap`: 143, 993\n- `pop3`: 110, 995\n- `smtp`: 25, 587, 465\n\nUnnecessary protocols can be disabled using the\n[configuration](https://nginx.org/en/docs/configure.html)\nparameters `--without-mail_imap_module`,\n`--without-mail_pop3_module`, and\n`--without-mail_smtp_module`.",
          "description_html": "\u003cp\u003eSets the protocol for a proxied server.\nSupported protocols are\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_imap_module.html\" target=\"_blank\"\u003eIMAP\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_pop3_module.html\" target=\"_blank\"\u003ePOP3\u003c/a\u003e, and\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_smtp_module.html\" target=\"_blank\"\u003eSMTP\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIf the directive is not set, the protocol can be detected automatically\nbased on the well-known port specified in the \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_core_module.html#listen\" target=\"_blank\"\u003e\u003ccode\u003elisten\u003c/code\u003e\u003c/a\u003e\ndirective:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eimap\u003c/code\u003e: 143, 993\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003epop3\u003c/code\u003e: 110, 995\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esmtp\u003c/code\u003e: 25, 587, 465\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUnnecessary protocols can be disabled using the\n\u003ca href=\"https://nginx.org/en/docs/configure.html\" target=\"_blank\"\u003econfiguration\u003c/a\u003e\nparameters \u003ccode\u003e--without-mail_imap_module\u003c/code\u003e,\n\u003ccode\u003e--without-mail_pop3_module\u003c/code\u003e, and\n\u003ccode\u003e--without-mail_smtp_module\u003c/code\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "resolver",
          "default": "off",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`address`* ... [`valid`=*`time`*] [`ipv4`=`on`|`off`] [`ipv6`=`on`|`off`] [`status_zone`=*`zone`*]",
            "`off`"
          ],
          "isBlock": false,
          "description_md": "Configures name servers used to find the client’s hostname\nto pass it to the\n[authentication server](https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html),\nand in the\n[XCLIENT](https://nginx.org/en/docs/mail/ngx_mail_proxy_module.html#xclient)\ncommand when proxying SMTP.\nFor example:\n```\nresolver 127.0.0.1 [::1]:5353;\n```\nThe address can be specified as a domain name or IP address,\nwith an optional port (1.3.1, 1.2.2).\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n\u003e Before version 1.1.7, only a single name server could be configured.\n\u003e Specifying name servers using IPv6 addresses is supported\n\u003e starting from versions 1.3.1 and 1.2.2.\n\nBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv4 or IPv6 addresses is not desired,\nthe `ipv4=off` (1.23.1) or\nthe `ipv6=off` parameter can be specified.\n\u003e Resolving of names into IPv6 addresses is supported\n\u003e starting from version 1.5.8.\n\nBy default, nginx caches answers using the TTL value of a response.\nAn optional `valid` parameter allows overriding it:\n```\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n```\n\u003e Before version 1.1.9, tuning of caching time was not possible,\n\u003e and nginx always cached answers for the duration of 5 minutes.\n\n\u003e To prevent DNS spoofing, it is recommended\n\u003e configuring DNS servers in a properly secured trusted local network.\n\nThe optional `status_zone` parameter (1.17.1)\nenables\n[collection](https://nginx.org/en/docs/http/ngx_http_api_module.html#resolvers_)\nof DNS server statistics of requests and responses\nin the specified *`zone`*.\nThe parameter is available as part of our\n[commercial subscription](https://nginx.com/products/).\n\nThe special value `off` disables resolving.",
          "description_html": "\u003cp\u003eConfigures name servers used to find the client’s hostname\nto pass it to the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html\" target=\"_blank\"\u003eauthentication server\u003c/a\u003e,\nand in the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_proxy_module.html#xclient\" target=\"_blank\"\u003eXCLIENT\u003c/a\u003e\ncommand when proxying SMTP.\nFor example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver 127.0.0.1 [::1]:5353;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe address can be specified as a domain name or IP address,\nwith an optional port (1.3.1, 1.2.2).\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore version 1.1.7, only a single name server could be configured.\nSpecifying name servers using IPv6 addresses is supported\nstarting from versions 1.3.1 and 1.2.2.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv4 or IPv6 addresses is not desired,\nthe \u003ccode\u003eipv4=off\u003c/code\u003e (1.23.1) or\nthe \u003ccode\u003eipv6=off\u003c/code\u003e parameter can be specified.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eResolving of names into IPv6 addresses is supported\nstarting from version 1.5.8.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eBy default, nginx caches answers using the TTL value of a response.\nAn optional \u003ccode\u003evalid\u003c/code\u003e parameter allows overriding it:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver 127.0.0.1 [::1]:5353 valid=30s;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore version 1.1.9, tuning of caching time was not possible,\nand nginx always cached answers for the duration of 5 minutes.\u003c/p\u003e\n\n\u003cp\u003eTo prevent DNS spoofing, it is recommended\nconfiguring DNS servers in a properly secured trusted local network.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003estatus_zone\u003c/code\u003e parameter (1.17.1)\nenables\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#resolvers_\" target=\"_blank\"\u003ecollection\u003c/a\u003e\nof DNS server statistics of requests and responses\nin the specified \u003cem\u003e\u003ccode\u003ezone\u003c/code\u003e\u003c/em\u003e.\nThe parameter is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe special value \u003ccode\u003eoff\u003c/code\u003e disables resolving.\u003c/p\u003e\n"
        },
        {
          "name": "resolver_timeout",
          "default": "30s",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for DNS operations, for example:\n```\nresolver_timeout 5s;\n```",
          "description_html": "\u003cp\u003eSets a timeout for DNS operations, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver_timeout 5s;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "server",
          "default": "",
          "contexts": [
            "mail"
          ],
          "syntax": [
            " `{...}`"
          ],
          "isBlock": true,
          "description_md": "Sets the configuration for a server.",
          "description_html": "\u003cp\u003eSets the configuration for a server.\u003c/p\u003e\n"
        },
        {
          "name": "server_name",
          "default": "hostname",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`name`*"
          ],
          "isBlock": false,
          "description_md": "Sets the server name that is used:\n- in the initial POP3/SMTP server greeting;\n- in the salt during the SASL CRAM-MD5 authentication;\n- in the `EHLO` command when connecting to the SMTP backend,\n    if the passing of the\n    [XCLIENT](https://nginx.org/en/docs/mail/ngx_mail_proxy_module.html#xclient) command\n    is enabled.\n\nIf the directive is not specified, the machine’s hostname is used.",
          "description_html": "\u003cp\u003eSets the server name that is used:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ein the initial POP3/SMTP server greeting;\u003c/li\u003e\n\u003cli\u003ein the salt during the SASL CRAM-MD5 authentication;\u003c/li\u003e\n\u003cli\u003ein the \u003ccode\u003eEHLO\u003c/code\u003e command when connecting to the SMTP backend,\nif the passing of the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_proxy_module.html#xclient\" target=\"_blank\"\u003eXCLIENT\u003c/a\u003e command\nis enabled.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf the directive is not specified, the machine’s hostname is used.\u003c/p\u003e\n"
        },
        {
          "name": "timeout",
          "default": "60s",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets the timeout that is used before proxying to the backend starts.",
          "description_html": "\u003cp\u003eSets the timeout that is used before proxying to the backend starts.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/mail/ngx_mail_imap_module.html",
      "name": "ngx_mail_imap_module",
      "directives": [
        {
          "name": "imap_auth",
          "default": "plain",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`method`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets permitted methods of authentication for IMAP clients.\nSupported methods are:\n- `plain`\n\n    [LOGIN](https://datatracker.ietf.org/doc/html/rfc3501),\n    [AUTH=PLAIN](https://datatracker.ietf.org/doc/html/rfc4616)\n- `login`\n\n    [AUTH=LOGIN](https://datatracker.ietf.org/doc/html/draft-murchison-sasl-login-00)\n- `cram-md5`\n\n    [AUTH=CRAM-MD5](https://datatracker.ietf.org/doc/html/rfc2195).\n    In order for this method to work, the password must be stored unencrypted.\n- `external`\n\n    [AUTH=EXTERNAL](https://datatracker.ietf.org/doc/html/rfc4422) (1.11.6).\n\nPlain text authentication methods\n(the `LOGIN` command, `AUTH=PLAIN`,\nand `AUTH=LOGIN`) are always enabled,\nthough if the `plain` and `login` methods\nare not specified,\n`AUTH=PLAIN` and `AUTH=LOGIN`\nwill not be automatically included in [`imap_capabilities`](https://nginx.org/en/docs/mail/ngx_mail_imap_module.html#imap_capabilities).",
          "description_html": "\u003cp\u003eSets permitted methods of authentication for IMAP clients.\nSupported methods are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eplain\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc3501\" target=\"_blank\"\u003eLOGIN\u003c/a\u003e,\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc4616\" target=\"_blank\"\u003eAUTH=PLAIN\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003elogin\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/draft-murchison-sasl-login-00\" target=\"_blank\"\u003eAUTH=LOGIN\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ecram-md5\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2195\" target=\"_blank\"\u003eAUTH=CRAM-MD5\u003c/a\u003e.\nIn order for this method to work, the password must be stored unencrypted.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eexternal\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc4422\" target=\"_blank\"\u003eAUTH=EXTERNAL\u003c/a\u003e (1.11.6).\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ePlain text authentication methods\n(the \u003ccode\u003eLOGIN\u003c/code\u003e command, \u003ccode\u003eAUTH=PLAIN\u003c/code\u003e,\nand \u003ccode\u003eAUTH=LOGIN\u003c/code\u003e) are always enabled,\nthough if the \u003ccode\u003eplain\u003c/code\u003e and \u003ccode\u003elogin\u003c/code\u003e methods\nare not specified,\n\u003ccode\u003eAUTH=PLAIN\u003c/code\u003e and \u003ccode\u003eAUTH=LOGIN\u003c/code\u003e\nwill not be automatically included in \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_imap_module.html#imap_capabilities\" target=\"_blank\"\u003e\u003ccode\u003eimap_capabilities\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "imap_capabilities",
          "default": "IMAP4 IMAP4rev1 UIDPLUS",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`extension`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets the\n[IMAP protocol](https://datatracker.ietf.org/doc/html/rfc3501)\nextensions list that is passed to the client in response to\nthe `CAPABILITY` command.\nThe authentication methods specified in the [`imap_auth`](https://nginx.org/en/docs/mail/ngx_mail_imap_module.html#imap_auth) directive and\n[STARTTLS](https://datatracker.ietf.org/doc/html/rfc2595)\nare automatically added to this list depending on the\n[`starttls`](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#starttls) directive value.\n\nIt makes sense to specify the extensions\nsupported by the IMAP backends\nto which the clients are proxied (if these extensions are related to commands\nused after the authentication, when nginx transparently proxies a client\nconnection to the backend).\n\nThe current list of standardized extensions is published at\n[www.iana.org](http://www.iana.org/assignments/imap4-capabilities).",
          "description_html": "\u003cp\u003eSets the\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc3501\" target=\"_blank\"\u003eIMAP protocol\u003c/a\u003e\nextensions list that is passed to the client in response to\nthe \u003ccode\u003eCAPABILITY\u003c/code\u003e command.\nThe authentication methods specified in the \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_imap_module.html#imap_auth\" target=\"_blank\"\u003e\u003ccode\u003eimap_auth\u003c/code\u003e\u003c/a\u003e directive and\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2595\" target=\"_blank\"\u003eSTARTTLS\u003c/a\u003e\nare automatically added to this list depending on the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#starttls\" target=\"_blank\"\u003e\u003ccode\u003estarttls\u003c/code\u003e\u003c/a\u003e directive value.\u003c/p\u003e\n\n\u003cp\u003eIt makes sense to specify the extensions\nsupported by the IMAP backends\nto which the clients are proxied (if these extensions are related to commands\nused after the authentication, when nginx transparently proxies a client\nconnection to the backend).\u003c/p\u003e\n\n\u003cp\u003eThe current list of standardized extensions is published at\n\u003ca href=\"http://www.iana.org/assignments/imap4-capabilities\" target=\"_blank\"\u003ewww.iana.org\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "imap_client_buffer",
          "default": "4k|8k",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading IMAP commands.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading IMAP commands.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/mail/ngx_mail_pop3_module.html",
      "name": "ngx_mail_pop3_module",
      "directives": [
        {
          "name": "pop3_auth",
          "default": "plain",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`method`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets permitted methods of authentication for POP3 clients.\nSupported methods are:\n- `plain`\n\n    [USER/PASS](https://datatracker.ietf.org/doc/html/rfc1939),\n    [AUTH PLAIN](https://datatracker.ietf.org/doc/html/rfc4616),\n    [AUTH LOGIN](https://datatracker.ietf.org/doc/html/draft-murchison-sasl-login-00)\n- `apop`\n\n    [APOP](https://datatracker.ietf.org/doc/html/rfc1939).\n    In order for this method to work, the password must be stored unencrypted.\n- `cram-md5`\n\n    [AUTH CRAM-MD5](https://datatracker.ietf.org/doc/html/rfc2195).\n    In order for this method to work, the password must be stored unencrypted.\n- `external`\n\n    [AUTH EXTERNAL](https://datatracker.ietf.org/doc/html/rfc4422) (1.11.6).\n\nPlain text authentication methods\n(`USER/PASS`, `AUTH PLAIN`,\nand `AUTH LOGIN`) are always enabled,\nthough if the `plain` method is not specified,\n`AUTH PLAIN` and `AUTH LOGIN`\nwill not be automatically included in [`pop3_capabilities`](https://nginx.org/en/docs/mail/ngx_mail_pop3_module.html#pop3_capabilities).",
          "description_html": "\u003cp\u003eSets permitted methods of authentication for POP3 clients.\nSupported methods are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eplain\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc1939\" target=\"_blank\"\u003eUSER/PASS\u003c/a\u003e,\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc4616\" target=\"_blank\"\u003eAUTH PLAIN\u003c/a\u003e,\n\u003ca href=\"https://datatracker.ietf.org/doc/html/draft-murchison-sasl-login-00\" target=\"_blank\"\u003eAUTH LOGIN\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eapop\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc1939\" target=\"_blank\"\u003eAPOP\u003c/a\u003e.\nIn order for this method to work, the password must be stored unencrypted.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ecram-md5\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2195\" target=\"_blank\"\u003eAUTH CRAM-MD5\u003c/a\u003e.\nIn order for this method to work, the password must be stored unencrypted.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eexternal\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc4422\" target=\"_blank\"\u003eAUTH EXTERNAL\u003c/a\u003e (1.11.6).\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ePlain text authentication methods\n(\u003ccode\u003eUSER/PASS\u003c/code\u003e, \u003ccode\u003eAUTH PLAIN\u003c/code\u003e,\nand \u003ccode\u003eAUTH LOGIN\u003c/code\u003e) are always enabled,\nthough if the \u003ccode\u003eplain\u003c/code\u003e method is not specified,\n\u003ccode\u003eAUTH PLAIN\u003c/code\u003e and \u003ccode\u003eAUTH LOGIN\u003c/code\u003e\nwill not be automatically included in \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_pop3_module.html#pop3_capabilities\" target=\"_blank\"\u003e\u003ccode\u003epop3_capabilities\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "pop3_capabilities",
          "default": "TOP USER UIDL",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`extension`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets the\n[POP3 protocol](https://datatracker.ietf.org/doc/html/rfc2449)\nextensions list that is passed to the client in response to\nthe `CAPA` command.\nThe authentication methods specified in the [`pop3_auth`](https://nginx.org/en/docs/mail/ngx_mail_pop3_module.html#pop3_auth) directive\n([SASL](https://datatracker.ietf.org/doc/html/rfc2449) extension) and\n[STLS](https://datatracker.ietf.org/doc/html/rfc2595)\nare automatically added to this list depending on the\n[`starttls`](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#starttls) directive value.\n\nIt makes sense to specify the extensions\nsupported by the POP3 backends\nto which the clients are proxied (if these extensions are related to commands\nused after the authentication, when nginx transparently proxies the client\nconnection to the backend).\n\nThe current list of standardized extensions is published at\n[www.iana.org](http://www.iana.org/assignments/pop3-extension-mechanism).",
          "description_html": "\u003cp\u003eSets the\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2449\" target=\"_blank\"\u003ePOP3 protocol\u003c/a\u003e\nextensions list that is passed to the client in response to\nthe \u003ccode\u003eCAPA\u003c/code\u003e command.\nThe authentication methods specified in the \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_pop3_module.html#pop3_auth\" target=\"_blank\"\u003e\u003ccode\u003epop3_auth\u003c/code\u003e\u003c/a\u003e directive\n(\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2449\" target=\"_blank\"\u003eSASL\u003c/a\u003e extension) and\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2595\" target=\"_blank\"\u003eSTLS\u003c/a\u003e\nare automatically added to this list depending on the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#starttls\" target=\"_blank\"\u003e\u003ccode\u003estarttls\u003c/code\u003e\u003c/a\u003e directive value.\u003c/p\u003e\n\n\u003cp\u003eIt makes sense to specify the extensions\nsupported by the POP3 backends\nto which the clients are proxied (if these extensions are related to commands\nused after the authentication, when nginx transparently proxies the client\nconnection to the backend).\u003c/p\u003e\n\n\u003cp\u003eThe current list of standardized extensions is published at\n\u003ca href=\"http://www.iana.org/assignments/pop3-extension-mechanism\" target=\"_blank\"\u003ewww.iana.org\u003c/a\u003e.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/mail/ngx_mail_proxy_module.html",
      "name": "ngx_mail_proxy_module",
      "directives": [
        {
          "name": "proxy_buffer",
          "default": "4k|8k",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the size of the buffer used for proxying.\nBy default, the buffer size is equal to one memory page.\nDepending on a platform, it is either 4K or 8K.",
          "description_html": "\u003cp\u003eSets the size of the buffer used for proxying.\nBy default, the buffer size is equal to one memory page.\nDepending on a platform, it is either 4K or 8K.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_pass_error_message",
          "default": "off",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Indicates whether to pass the error message obtained during\nthe authentication on the backend to the client.\n\nUsually, if the authentication in nginx is a success,\nthe backend cannot return an error.\nIf it nevertheless returns an error,\nit means some internal error has occurred.\nIn such case the backend message can contain information\nthat should not be shown to the client.\nHowever, responding with an error for the correct password\nis a normal behavior for some POP3 servers.\nFor example, CommuniGatePro informs a user about\n[mailbox overflow](http://www.stalker.com/CommuniGatePro/Alerts.html#Quota) or other events by periodically outputting the\n[authentication error](http://www.stalker.com/CommuniGatePro/POP.html#Alerts).\nThe directive should be enabled in this case.",
          "description_html": "\u003cp\u003eIndicates whether to pass the error message obtained during\nthe authentication on the backend to the client.\u003c/p\u003e\n\n\u003cp\u003eUsually, if the authentication in nginx is a success,\nthe backend cannot return an error.\nIf it nevertheless returns an error,\nit means some internal error has occurred.\nIn such case the backend message can contain information\nthat should not be shown to the client.\nHowever, responding with an error for the correct password\nis a normal behavior for some POP3 servers.\nFor example, CommuniGatePro informs a user about\n\u003ca href=\"http://www.stalker.com/CommuniGatePro/Alerts.html#Quota\" target=\"_blank\"\u003emailbox overflow\u003c/a\u003e or other events by periodically outputting the\n\u003ca href=\"http://www.stalker.com/CommuniGatePro/POP.html#Alerts\" target=\"_blank\"\u003eauthentication error\u003c/a\u003e.\nThe directive should be enabled in this case.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_protocol",
          "default": "off",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the\n[PROXY protocol](http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt) for connections to a backend.",
          "description_html": "\u003cp\u003eEnables the\n\u003ca href=\"http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt\" target=\"_blank\"\u003ePROXY protocol\u003c/a\u003e for connections to a backend.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_smtp_auth",
          "default": "off",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables user authentication on the SMTP backend\nusing the `AUTH` command.\n\nIf [XCLIENT](https://nginx.org/en/docs/mail/ngx_mail_proxy_module.html#xclient) is also enabled,\nthen the `XCLIENT` command will not send\nthe `LOGIN` parameter.",
          "description_html": "\u003cp\u003eEnables or disables user authentication on the SMTP backend\nusing the \u003ccode\u003eAUTH\u003c/code\u003e command.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_proxy_module.html#xclient\" target=\"_blank\"\u003eXCLIENT\u003c/a\u003e is also enabled,\nthen the \u003ccode\u003eXCLIENT\u003c/code\u003e command will not send\nthe \u003ccode\u003eLOGIN\u003c/code\u003e parameter.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_timeout",
          "default": "24h",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`timeout`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`timeout`* between two successive\nread or write operations on client or proxied server connections.\nIf no data is transmitted within this time, the connection is closed.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/em\u003e between two successive\nread or write operations on client or proxied server connections.\nIf no data is transmitted within this time, the connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "xclient",
          "default": "on",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the passing of the\n[XCLIENT](http://www.postfix.org/XCLIENT_README.html)\ncommand with client parameters when connecting to the SMTP backend.\n\nWith `XCLIENT`, the MTA is able to write client information\nto the log and apply various limitations based on this data.\n\nIf `XCLIENT` is enabled\nthen nginx passes the following commands when connecting to the backend:\n- `EHLO` with the\n    [server name](https://nginx.org/en/docs/mail/ngx_mail_core_module.html#server_name)\n- `\n    XCLIENT\n    `\n- `EHLO` or `HELO`,\n    as passed by the client\n\nIf the name\n[found](https://nginx.org/en/docs/mail/ngx_mail_core_module.html#resolver)\nby the client IP address points to the same address,\nit is passed in the `NAME` parameter\nof the `XCLIENT` command.\nIf the name could not be found, points to a different address,\nor [`resolver`](https://nginx.org/en/docs/mail/ngx_mail_core_module.html#resolver) is not specified,\nthe `[UNAVAILABLE]` is passed\nin the `NAME` parameter.\nIf an error has occurred in the process of resolving,\nthe `[TEMPUNAVAIL]` value is used.\n\nIf `XCLIENT` is disabled\nthen nginx passes the `EHLO` command with the\n[server name](https://nginx.org/en/docs/mail/ngx_mail_core_module.html#server_name)\nwhen connecting to the backend if the client has passed\n`EHLO`,\nor `HELO` with the server name, otherwise.",
          "description_html": "\u003cp\u003eEnables or disables the passing of the\n\u003ca href=\"http://www.postfix.org/XCLIENT_README.html\" target=\"_blank\"\u003eXCLIENT\u003c/a\u003e\ncommand with client parameters when connecting to the SMTP backend.\u003c/p\u003e\n\n\u003cp\u003eWith \u003ccode\u003eXCLIENT\u003c/code\u003e, the MTA is able to write client information\nto the log and apply various limitations based on this data.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eXCLIENT\u003c/code\u003e is enabled\nthen nginx passes the following commands when connecting to the backend:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eEHLO\u003c/code\u003e with the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_core_module.html#server_name\" target=\"_blank\"\u003eserver name\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003e\nXCLIENT\n\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eEHLO\u003c/code\u003e or \u003ccode\u003eHELO\u003c/code\u003e,\nas passed by the client\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf the name\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_core_module.html#resolver\" target=\"_blank\"\u003efound\u003c/a\u003e\nby the client IP address points to the same address,\nit is passed in the \u003ccode\u003eNAME\u003c/code\u003e parameter\nof the \u003ccode\u003eXCLIENT\u003c/code\u003e command.\nIf the name could not be found, points to a different address,\nor \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_core_module.html#resolver\" target=\"_blank\"\u003e\u003ccode\u003eresolver\u003c/code\u003e\u003c/a\u003e is not specified,\nthe \u003ccode\u003e[UNAVAILABLE]\u003c/code\u003e is passed\nin the \u003ccode\u003eNAME\u003c/code\u003e parameter.\nIf an error has occurred in the process of resolving,\nthe \u003ccode\u003e[TEMPUNAVAIL]\u003c/code\u003e value is used.\u003c/p\u003e\n\n\u003cp\u003eIf \u003ccode\u003eXCLIENT\u003c/code\u003e is disabled\nthen nginx passes the \u003ccode\u003eEHLO\u003c/code\u003e command with the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_core_module.html#server_name\" target=\"_blank\"\u003eserver name\u003c/a\u003e\nwhen connecting to the backend if the client has passed\n\u003ccode\u003eEHLO\u003c/code\u003e,\nor \u003ccode\u003eHELO\u003c/code\u003e with the server name, otherwise.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/mail/ngx_mail_realip_module.html",
      "name": "ngx_mail_realip_module",
      "directives": [
        {
          "name": "set_real_ip_from",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`address`* | *`CIDR`* | `unix:`"
          ],
          "isBlock": false,
          "description_md": "Defines trusted addresses that are known to send correct\nreplacement addresses.\nIf the special value `unix:` is specified,\nall UNIX-domain sockets will be trusted.",
          "description_html": "\u003cp\u003eDefines trusted addresses that are known to send correct\nreplacement addresses.\nIf the special value \u003ccode\u003eunix:\u003c/code\u003e is specified,\nall UNIX-domain sockets will be trusted.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/mail/ngx_mail_smtp_module.html",
      "name": "ngx_mail_smtp_module",
      "directives": [
        {
          "name": "smtp_auth",
          "default": "plain login",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`method`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets permitted methods of\n[SASL authentication](https://datatracker.ietf.org/doc/html/rfc2554)\nfor SMTP clients.\nSupported methods are:\n- `plain`\n\n    [AUTH PLAIN](https://datatracker.ietf.org/doc/html/rfc4616)\n- `login`\n\n    [AUTH LOGIN](https://datatracker.ietf.org/doc/html/draft-murchison-sasl-login-00)\n- `cram-md5`\n\n    [AUTH CRAM-MD5](https://datatracker.ietf.org/doc/html/rfc2195).\n    In order for this method to work, the password must be stored unencrypted.\n- `external`\n\n    [AUTH EXTERNAL](https://datatracker.ietf.org/doc/html/rfc4422) (1.11.6).\n- `none`\n\n    Authentication is not required.\n\nPlain text authentication methods\n(`AUTH PLAIN` and `AUTH LOGIN`)\nare always enabled,\nthough if the `plain` and `login` methods\nare not specified,\n`AUTH PLAIN` and `AUTH LOGIN`\nwill not be automatically included in [`smtp_capabilities`](https://nginx.org/en/docs/mail/ngx_mail_smtp_module.html#smtp_capabilities).",
          "description_html": "\u003cp\u003eSets permitted methods of\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2554\" target=\"_blank\"\u003eSASL authentication\u003c/a\u003e\nfor SMTP clients.\nSupported methods are:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eplain\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc4616\" target=\"_blank\"\u003eAUTH PLAIN\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003elogin\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/draft-murchison-sasl-login-00\" target=\"_blank\"\u003eAUTH LOGIN\u003c/a\u003e\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ecram-md5\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2195\" target=\"_blank\"\u003eAUTH CRAM-MD5\u003c/a\u003e.\nIn order for this method to work, the password must be stored unencrypted.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eexternal\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc4422\" target=\"_blank\"\u003eAUTH EXTERNAL\u003c/a\u003e (1.11.6).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enone\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eAuthentication is not required.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003ePlain text authentication methods\n(\u003ccode\u003eAUTH PLAIN\u003c/code\u003e and \u003ccode\u003eAUTH LOGIN\u003c/code\u003e)\nare always enabled,\nthough if the \u003ccode\u003eplain\u003c/code\u003e and \u003ccode\u003elogin\u003c/code\u003e methods\nare not specified,\n\u003ccode\u003eAUTH PLAIN\u003c/code\u003e and \u003ccode\u003eAUTH LOGIN\u003c/code\u003e\nwill not be automatically included in \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_smtp_module.html#smtp_capabilities\" target=\"_blank\"\u003e\u003ccode\u003esmtp_capabilities\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "smtp_capabilities",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`extension`* ..."
          ],
          "isBlock": false,
          "description_md": "Sets the SMTP protocol extensions list\nthat is passed to the client in response to the\n`EHLO` command.\nThe authentication methods specified in the [`smtp_auth`](https://nginx.org/en/docs/mail/ngx_mail_smtp_module.html#smtp_auth) directive and\n[STARTTLS](https://datatracker.ietf.org/doc/html/rfc3207)\nare automatically added to this list depending on the\n[`starttls`](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#starttls) directive value.\n\nIt makes sense to specify the extensions\nsupported by the MTA\nto which the clients are proxied (if these extensions are related to commands\nused after the authentication, when nginx transparently proxies the client\nconnection to the backend).\n\nThe current list of standardized extensions is published at\n[www.iana.org](http://www.iana.org/assignments/mail-parameters).",
          "description_html": "\u003cp\u003eSets the SMTP protocol extensions list\nthat is passed to the client in response to the\n\u003ccode\u003eEHLO\u003c/code\u003e command.\nThe authentication methods specified in the \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_smtp_module.html#smtp_auth\" target=\"_blank\"\u003e\u003ccode\u003esmtp_auth\u003c/code\u003e\u003c/a\u003e directive and\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc3207\" target=\"_blank\"\u003eSTARTTLS\u003c/a\u003e\nare automatically added to this list depending on the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#starttls\" target=\"_blank\"\u003e\u003ccode\u003estarttls\u003c/code\u003e\u003c/a\u003e directive value.\u003c/p\u003e\n\n\u003cp\u003eIt makes sense to specify the extensions\nsupported by the MTA\nto which the clients are proxied (if these extensions are related to commands\nused after the authentication, when nginx transparently proxies the client\nconnection to the backend).\u003c/p\u003e\n\n\u003cp\u003eThe current list of standardized extensions is published at\n\u003ca href=\"http://www.iana.org/assignments/mail-parameters\" target=\"_blank\"\u003ewww.iana.org\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "smtp_client_buffer",
          "default": "4k|8k",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading SMTP commands.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading SMTP commands.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\u003c/p\u003e\n"
        },
        {
          "name": "smtp_greeting_delay",
          "default": "0",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Allows setting a delay before sending an SMTP greeting\nin order to reject clients who fail to wait for the greeting before\nsending SMTP commands.",
          "description_html": "\u003cp\u003eAllows setting a delay before sending an SMTP greeting\nin order to reject clients who fail to wait for the greeting before\nsending SMTP commands.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/mail/ngx_mail_ssl_module.html",
      "name": "ngx_mail_ssl_module",
      "directives": [
        {
          "name": "ssl",
          "default": "off",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "This directive was made obsolete in version 1.15.0\nand was removed in version 1.25.1.\nThe `ssl` parameter\nof the [`listen`](https://nginx.org/en/docs/mail/ngx_mail_core_module.html#listen) directive\nshould be used instead.",
          "description_html": "\u003cp\u003eThis directive was made obsolete in version 1.15.0\nand was removed in version 1.25.1.\nThe \u003ccode\u003essl\u003c/code\u003e parameter\nof the \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_core_module.html#listen\" target=\"_blank\"\u003e\u003ccode\u003elisten\u003c/code\u003e\u003c/a\u003e directive\nshould be used instead.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_certificate",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the certificate in the PEM format\nfor the given server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\n\nSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\n```\nserver {\n    listen              993 ssl;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n```\n\u003e Only OpenSSL 1.0.2 or higher supports separate certificate chains\n\u003e for different certificates.\n\u003e With older versions, only one certificate chain can be used.\n\nThe value\n`data`:*`certificate`*\ncan be specified instead of the *`file`* (1.15.10),\nwhich loads a certificate without using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n[error log](https://nginx.org/en/docs/ngx_core_module.html#error_log).",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the certificate in the PEM format\nfor the given server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    listen              993 ssl;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOnly OpenSSL 1.0.2 or higher supports separate certificate chains\nfor different certificates.\nWith older versions, only one certificate chain can be used.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003edata\u003c/code\u003e:\u003cem\u003e\u003ccode\u003ecertificate\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e (1.15.10),\nwhich loads a certificate without using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\" target=\"_blank\"\u003eerror log\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_certificate_key",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the secret key in the PEM format\nfor the given server.\n\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`* (1.7.9),\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n\nThe value\n`data`:*`key`*\ncan be specified instead of the *`file`* (1.15.10),\nwhich loads a secret key without using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n[error log](https://nginx.org/en/docs/ngx_core_module.html#error_log).",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key in the PEM format\nfor the given server.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003eengine\u003c/code\u003e:\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e (1.7.9),\nwhich loads a secret key with a specified \u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\nfrom the OpenSSL engine \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003edata\u003c/code\u003e:\u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e (1.15.10),\nwhich loads a secret key without using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\" target=\"_blank\"\u003eerror log\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_ciphers",
          "default": "HIGH:!aNULL:!MD5",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`ciphers`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\n```\nssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n```\n\nThe full list can be viewed using the\n“`openssl ciphers`” command.\n\n\u003e The previous versions of nginx used\n\u003e [different](https://nginx.org/en/docs/http/configuring_https_servers.html#compatibility)\n\u003e ciphers by default.",
          "description_html": "\u003cp\u003eSpecifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe full list can be viewed using the\n“\u003ccode\u003eopenssl ciphers\u003c/code\u003e” command.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe previous versions of nginx used\n\u003ca href=\"https://nginx.org/en/docs/http/configuring_https_servers.html#compatibility\" target=\"_blank\"\u003edifferent\u003c/a\u003e\nciphers by default.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_client_certificate",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client) client certificates.\n\nThe list of certificates will be sent to clients.\nIf this is not desired, the [`ssl_trusted_certificate`](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_trusted_certificate)\ndirective can be used.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003everify\u003c/a\u003e client certificates.\u003c/p\u003e\n\n\u003cp\u003eThe list of certificates will be sent to clients.\nIf this is not desired, the \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_trusted_certificate\" target=\"_blank\"\u003e\u003ccode\u003essl_trusted_certificate\u003c/code\u003e\u003c/a\u003e\ndirective can be used.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_conf_command",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`name`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets arbitrary OpenSSL configuration\n[commands](https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html).\n\u003e The directive is supported when using OpenSSL 1.0.2 or higher.\n\nSeveral `ssl_conf_command` directives\ncan be specified on the same level:\n```\nssl_conf_command Options PrioritizeChaCha;\nssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;\n```\nThese directives are inherited from the previous configuration level\nif and only if there are no `ssl_conf_command` directives\ndefined on the current level.\n\n\u003e Note that configuring OpenSSL directly\n\u003e might result in unexpected behavior.",
          "description_html": "\u003cp\u003eSets arbitrary OpenSSL configuration\n\u003ca href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\" target=\"_blank\"\u003ecommands\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is supported when using OpenSSL 1.0.2 or higher.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003essl_conf_command\u003c/code\u003e directives\ncan be specified on the same level:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_conf_command Options PrioritizeChaCha;\nssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003essl_conf_command\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote that configuring OpenSSL directly\nmight result in unexpected behavior.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_crl",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to [verify](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client)\nclient certificates.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with revoked certificates (CRL)\nin the PEM format used to \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003everify\u003c/a\u003e\nclient certificates.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_dhparam",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with DH parameters for DHE ciphers.\n\nBy default no parameters are set,\nand therefore DHE ciphers will not be used.\n\u003e Prior to version 1.11.0, builtin parameters were used by default.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with DH parameters for DHE ciphers.\u003c/p\u003e\n\n\u003cp\u003eBy default no parameters are set,\nand therefore DHE ciphers will not be used.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.11.0, builtin parameters were used by default.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_ecdh_curve",
          "default": "auto",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`curve`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`curve`* for ECDHE ciphers.\n\nWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\n```\nssl_ecdh_curve prime256v1:secp384r1;\n```\n\nThe special value `auto` (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor `prime256v1` with older versions.\n\n\u003e Prior to version 1.11.0,\n\u003e the `prime256v1` curve was used by default.\n\n\u003e When using OpenSSL 1.0.2 or higher,\n\u003e this directive sets the list of curves supported by the server.\n\u003e Thus, in order for ECDSA certificates to work,\n\u003e it is important to include the curves used in the certificates.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003ecurve\u003c/code\u003e\u003c/em\u003e for ECDHE ciphers.\u003c/p\u003e\n\n\u003cp\u003eWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_ecdh_curve prime256v1:secp384r1;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe special value \u003ccode\u003eauto\u003c/code\u003e (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor \u003ccode\u003eprime256v1\u003c/code\u003e with older versions.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.11.0,\nthe \u003ccode\u003eprime256v1\u003c/code\u003e curve was used by default.\u003c/p\u003e\n\n\u003cp\u003eWhen using OpenSSL 1.0.2 or higher,\nthis directive sets the list of curves supported by the server.\nThus, in order for ECDSA certificates to work,\nit is important to include the curves used in the certificates.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_password_file",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with passphrases for\n[secret keys](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_certificate_key)\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n\nExample:\n```\nmail {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        server_name mail1.example.com;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        server_name mail2.example.com;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n```",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with passphrases for\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_certificate_key\" target=\"_blank\"\u003esecret keys\u003c/a\u003e\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003email {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        server_name mail1.example.com;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        server_name mail2.example.com;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "ssl_prefer_server_ciphers",
          "default": "off",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Specifies that server ciphers should be preferred over client ciphers\nwhen the SSLv3 and TLS protocols are used.",
          "description_html": "\u003cp\u003eSpecifies that server ciphers should be preferred over client ciphers\nwhen the SSLv3 and TLS protocols are used.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_protocols",
          "default": "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "[`SSLv2`] [`SSLv3`] [`TLSv1`] [`TLSv1.1`] [`TLSv1.2`] [`TLSv1.3`]"
          ],
          "isBlock": false,
          "description_md": "Enables the specified protocols.\n\u003e The `TLSv1.1` and `TLSv1.2` parameters\n\u003e (1.1.13, 1.0.12) work only when OpenSSL 1.0.1 or higher is used.\n\n\u003e The `TLSv1.3` parameter (1.13.0) works only when\n\u003e OpenSSL 1.1.1 or higher is used.\n\n\u003e The `TLSv1.3` parameter is used by default\n\u003e since 1.23.4.",
          "description_html": "\u003cp\u003eEnables the specified protocols.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003eTLSv1.1\u003c/code\u003e and \u003ccode\u003eTLSv1.2\u003c/code\u003e parameters\n(1.1.13, 1.0.12) work only when OpenSSL 1.0.1 or higher is used.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eTLSv1.3\u003c/code\u003e parameter (1.13.0) works only when\nOpenSSL 1.1.1 or higher is used.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eTLSv1.3\u003c/code\u003e parameter is used by default\nsince 1.23.4.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_session_cache",
          "default": "none",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`off` | `none` | [`builtin`[:*`size`*]] [`shared`:*`name`*:*`size`*]"
          ],
          "isBlock": false,
          "description_md": "Sets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\n- `off`\n\n    the use of a session cache is strictly prohibited:\n    nginx explicitly tells a client that sessions may not be reused.\n- `none`\n\n    the use of a session cache is gently disallowed:\n    nginx tells a client that sessions may be reused, but does not\n    actually store session parameters in the cache.\n- `builtin`\n\n    a cache built in OpenSSL; used by one worker process only.\n    The cache size is specified in sessions.\n    If size is not given, it is equal to 20480 sessions.\n    Use of the built-in cache can cause memory fragmentation.\n- `shared`\n\n    a cache shared between all worker processes.\n    The cache size is specified in bytes; one megabyte can store\n    about 4000 sessions.\n    Each shared cache should have an arbitrary name.\n    A cache with the same name can be used in several\n    servers.\n    It is also used to automatically generate, store, and\n    periodically rotate TLS session ticket keys (1.23.2)\n    unless configured explicitly\n    using the [`ssl_session_ticket_key`](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_session_ticket_key) directive.\n\nBoth cache types can be used simultaneously, for example:\n```\nssl_session_cache builtin:1000 shared:SSL:10m;\n```\nbut using only shared cache without the built-in cache should\nbe more efficient.",
          "description_html": "\u003cp\u003eSets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe use of a session cache is strictly prohibited:\nnginx explicitly tells a client that sessions may not be reused.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enone\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe use of a session cache is gently disallowed:\nnginx tells a client that sessions may be reused, but does not\nactually store session parameters in the cache.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebuiltin\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea cache built in OpenSSL; used by one worker process only.\nThe cache size is specified in sessions.\nIf size is not given, it is equal to 20480 sessions.\nUse of the built-in cache can cause memory fragmentation.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eshared\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea cache shared between all worker processes.\nThe cache size is specified in bytes; one megabyte can store\nabout 4000 sessions.\nEach shared cache should have an arbitrary name.\nA cache with the same name can be used in several\nservers.\nIt is also used to automatically generate, store, and\nperiodically rotate TLS session ticket keys (1.23.2)\nunless configured explicitly\nusing the \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_session_ticket_key\" target=\"_blank\"\u003e\u003ccode\u003essl_session_ticket_key\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBoth cache types can be used simultaneously, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_session_cache builtin:1000 shared:SSL:10m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ebut using only shared cache without the built-in cache should\nbe more efficient.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_session_ticket_key",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Sets a *`file`* with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\n\nIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\n```\nssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n```\n\nThe *`file`* must contain 80 or 48 bytes\nof random data and can be created using the following command:\n```\nopenssl rand 80 \u003e ticket.key\n```\nDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.",
          "description_html": "\u003cp\u003eSets a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\u003c/p\u003e\n\n\u003cp\u003eIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e must contain 80 or 48 bytes\nof random data and can be created using the following command:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eopenssl rand 80 \u0026gt; ticket.key\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_session_tickets",
          "default": "on",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables session resumption through\n[TLS session tickets](https://datatracker.ietf.org/doc/html/rfc5077).",
          "description_html": "\u003cp\u003eEnables or disables session resumption through\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5077\" target=\"_blank\"\u003eTLS session tickets\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_session_timeout",
          "default": "5m",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a time during which a client may reuse the\nsession parameters.",
          "description_html": "\u003cp\u003eSpecifies a time during which a client may reuse the\nsession parameters.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_trusted_certificate",
          "default": "",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client) client certificates.\n\nIn contrast to the certificate set by [`ssl_client_certificate`](https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_client_certificate),\nthe list of these certificates will not be sent to clients.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003everify\u003c/a\u003e client certificates.\u003c/p\u003e\n\n\u003cp\u003eIn contrast to the certificate set by \u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_ssl_module.html#ssl_client_certificate\" target=\"_blank\"\u003e\u003ccode\u003essl_client_certificate\u003c/code\u003e\u003c/a\u003e,\nthe list of these certificates will not be sent to clients.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_verify_client",
          "default": "off",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`on` | `off` | `optional` | `optional_no_ca`"
          ],
          "isBlock": false,
          "description_md": "Enables verification of client certificates.\nThe verification result is passed in the\n\"Auth-SSL-Verify\" header of the\n[authentication](https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#auth_http)\nrequest.\n\nThe `optional` parameter requests the client\ncertificate and verifies it if the certificate is present.\n\nThe `optional_no_ca` parameter\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through requests\n[sent](https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#auth_http_pass_client_cert)\nto the authentication server.",
          "description_html": "\u003cp\u003eEnables verification of client certificates.\nThe verification result is passed in the\n\u0026ldquo;Auth-SSL-Verify\u0026rdquo; header of the\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#auth_http\" target=\"_blank\"\u003eauthentication\u003c/a\u003e\nrequest.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoptional\u003c/code\u003e parameter requests the client\ncertificate and verifies it if the certificate is present.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoptional_no_ca\u003c/code\u003e parameter\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through requests\n\u003ca href=\"https://nginx.org/en/docs/mail/ngx_mail_auth_http_module.html#auth_http_pass_client_cert\" target=\"_blank\"\u003esent\u003c/a\u003e\nto the authentication server.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_verify_depth",
          "default": "1",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the verification depth in the client certificates chain.",
          "description_html": "\u003cp\u003eSets the verification depth in the client certificates chain.\u003c/p\u003e\n"
        },
        {
          "name": "starttls",
          "default": "off",
          "contexts": [
            "mail",
            "server"
          ],
          "syntax": [
            "`on` | `off` | `only`"
          ],
          "isBlock": false,
          "description_md": "- `on`\n\n    allow usage of the `STLS` command for the POP3\n    and the `STARTTLS` command for the IMAP and SMTP;\n- `off`\n\n    deny usage of the `STLS`\n    and `STARTTLS` commands;\n- `only`\n\n    require preliminary TLS transition.",
          "description_html": "\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eon\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eallow usage of the \u003ccode\u003eSTLS\u003c/code\u003e command for the POP3\nand the \u003ccode\u003eSTARTTLS\u003c/code\u003e command for the IMAP and SMTP;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edeny usage of the \u003ccode\u003eSTLS\u003c/code\u003e\nand \u003ccode\u003eSTARTTLS\u003c/code\u003e commands;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eonly\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003erequire preliminary TLS transition.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/ngx_core_module.html",
      "name": "Core functionality",
      "directives": [
        {
          "name": "accept_mutex",
          "default": "off",
          "contexts": [
            "events"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "If `accept_mutex` is enabled,\nworker processes will accept new connections by turn.\nOtherwise, all worker processes will be notified about new connections,\nand if volume of new connections is low, some of the worker processes\nmay just waste system resources.\n\u003e There is no need to enable `accept_mutex`\n\u003e on systems that support the\n\u003e [EPOLLEXCLUSIVE](https://nginx.org/en/docs/events.html#epoll) flag (1.11.3) or\n\u003e when using [`reuseport`](https://nginx.org/en/docs/http/ngx_http_core_module.html#reuseport).\n\n\u003e Prior to version 1.11.3, the default value was `on`.",
          "description_html": "\u003cp\u003eIf \u003ccode\u003eaccept_mutex\u003c/code\u003e is enabled,\nworker processes will accept new connections by turn.\nOtherwise, all worker processes will be notified about new connections,\nand if volume of new connections is low, some of the worker processes\nmay just waste system resources.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThere is no need to enable \u003ccode\u003eaccept_mutex\u003c/code\u003e\non systems that support the\n\u003ca href=\"https://nginx.org/en/docs/events.html#epoll\" target=\"_blank\"\u003eEPOLLEXCLUSIVE\u003c/a\u003e flag (1.11.3) or\nwhen using \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#reuseport\" target=\"_blank\"\u003e\u003ccode\u003ereuseport\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003ePrior to version 1.11.3, the default value was \u003ccode\u003eon\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "accept_mutex_delay",
          "default": "500ms",
          "contexts": [
            "events"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "If [`accept_mutex`](https://nginx.org/en/docs/ngx_core_module.html#accept_mutex) is enabled, specifies the maximum time\nduring which a worker process will try to restart accepting new\nconnections if another worker process is currently accepting\nnew connections.",
          "description_html": "\u003cp\u003eIf \u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#accept_mutex\" target=\"_blank\"\u003e\u003ccode\u003eaccept_mutex\u003c/code\u003e\u003c/a\u003e is enabled, specifies the maximum time\nduring which a worker process will try to restart accepting new\nconnections if another worker process is currently accepting\nnew connections.\u003c/p\u003e\n"
        },
        {
          "name": "daemon",
          "default": "on",
          "contexts": [
            "main"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether nginx should become a daemon.\nMainly used during development.",
          "description_html": "\u003cp\u003eDetermines whether nginx should become a daemon.\nMainly used during development.\u003c/p\u003e\n"
        },
        {
          "name": "debug_connection",
          "default": "",
          "contexts": [
            "events"
          ],
          "syntax": [
            "*`address`* | *`CIDR`* | `unix:`"
          ],
          "isBlock": false,
          "description_md": "Enables debugging log for selected client connections.\nOther connections will use logging level set by the\n[`error_log`](https://nginx.org/en/docs/ngx_core_module.html#error_log) directive.\nDebugged connections are specified by IPv4 or IPv6 (1.3.0, 1.2.1)\naddress or network.\nA connection may also be specified using a hostname.\nFor connections using UNIX-domain sockets (1.3.0, 1.2.1),\ndebugging log is enabled by the “`unix:`” parameter.\n```\nevents {\n    debug_connection 127.0.0.1;\n    debug_connection localhost;\n    debug_connection 192.0.2.0/24;\n    debug_connection ::1;\n    debug_connection 2001:0db8::/32;\n    debug_connection unix:;\n    ...\n}\n```\n\u003e For this directive to work, nginx needs to\n\u003e be built with `--with-debug`,\n\u003e see “[A debugging log](https://nginx.org/en/docs/debugging_log.html)”.",
          "description_html": "\u003cp\u003eEnables debugging log for selected client connections.\nOther connections will use logging level set by the\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\" target=\"_blank\"\u003e\u003ccode\u003eerror_log\u003c/code\u003e\u003c/a\u003e directive.\nDebugged connections are specified by IPv4 or IPv6 (1.3.0, 1.2.1)\naddress or network.\nA connection may also be specified using a hostname.\nFor connections using UNIX-domain sockets (1.3.0, 1.2.1),\ndebugging log is enabled by the “\u003ccode\u003eunix:\u003c/code\u003e” parameter.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eevents {\n    debug_connection 127.0.0.1;\n    debug_connection localhost;\n    debug_connection 192.0.2.0/24;\n    debug_connection ::1;\n    debug_connection 2001:0db8::/32;\n    debug_connection unix:;\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFor this directive to work, nginx needs to\nbe built with \u003ccode\u003e--with-debug\u003c/code\u003e,\nsee “\u003ca href=\"https://nginx.org/en/docs/debugging_log.html\" target=\"_blank\"\u003eA debugging log\u003c/a\u003e”.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "debug_points",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            "`abort` | `stop`"
          ],
          "isBlock": false,
          "description_md": "This directive is used for debugging.\n\nWhen internal error is detected, e.g. the leak of sockets on\nrestart of working processes, enabling `debug_points`\nleads to a core file creation (`abort`)\nor to stopping of a process (`stop`) for further\nanalysis using a system debugger.",
          "description_html": "\u003cp\u003eThis directive is used for debugging.\u003c/p\u003e\n\n\u003cp\u003eWhen internal error is detected, e.g. the leak of sockets on\nrestart of working processes, enabling \u003ccode\u003edebug_points\u003c/code\u003e\nleads to a core file creation (\u003ccode\u003eabort\u003c/code\u003e)\nor to stopping of a process (\u003ccode\u003estop\u003c/code\u003e) for further\nanalysis using a system debugger.\u003c/p\u003e\n"
        },
        {
          "name": "env",
          "default": "TZ",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`variable`*[=*`value`*]"
          ],
          "isBlock": false,
          "description_md": "By default, nginx removes all environment variables inherited\nfrom its parent process except the TZ variable.\nThis directive allows preserving some of the inherited variables,\nchanging their values, or creating new environment variables.\nThese variables are then:\n- inherited during a [live upgrade](https://nginx.org/en/docs/control.html#upgrade)\n    of an executable file;\n- used by the\n    [ngx_http_perl_module](https://nginx.org/en/docs/http/ngx_http_perl_module.html) module;\n- used by worker processes.\n    One should bear in mind that controlling system libraries in this way\n    is not always possible as it is common for libraries to check\n    variables only during initialization, well before they can be set\n    using this directive.\n    An exception from this is an above mentioned\n    [live upgrade](https://nginx.org/en/docs/control.html#upgrade)\n    of an executable file.\n\nThe TZ variable is always inherited and available to the\n[ngx_http_perl_module](https://nginx.org/en/docs/http/ngx_http_perl_module.html)\nmodule, unless it is configured explicitly.\n\nUsage example:\n```\nenv MALLOC_OPTIONS;\nenv PERL5LIB=/data/site/modules;\nenv OPENSSL_ALLOW_PROXY_CERTS=1;\n```\n\n\u003e The NGINX environment variable is used internally by nginx\n\u003e and should not be set directly by the user.",
          "description_html": "\u003cp\u003eBy default, nginx removes all environment variables inherited\nfrom its parent process except the TZ variable.\nThis directive allows preserving some of the inherited variables,\nchanging their values, or creating new environment variables.\nThese variables are then:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003einherited during a \u003ca href=\"https://nginx.org/en/docs/control.html#upgrade\" target=\"_blank\"\u003elive upgrade\u003c/a\u003e\nof an executable file;\u003c/li\u003e\n\u003cli\u003eused by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_perl_module.html\" target=\"_blank\"\u003engx_http_perl_module\u003c/a\u003e module;\u003c/li\u003e\n\u003cli\u003eused by worker processes.\nOne should bear in mind that controlling system libraries in this way\nis not always possible as it is common for libraries to check\nvariables only during initialization, well before they can be set\nusing this directive.\nAn exception from this is an above mentioned\n\u003ca href=\"https://nginx.org/en/docs/control.html#upgrade\" target=\"_blank\"\u003elive upgrade\u003c/a\u003e\nof an executable file.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe TZ variable is always inherited and available to the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_perl_module.html\" target=\"_blank\"\u003engx_http_perl_module\u003c/a\u003e\nmodule, unless it is configured explicitly.\u003c/p\u003e\n\n\u003cp\u003eUsage example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eenv MALLOC_OPTIONS;\nenv PERL5LIB=/data/site/modules;\nenv OPENSSL_ALLOW_PROXY_CERTS=1;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe NGINX environment variable is used internally by nginx\nand should not be set directly by the user.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "error_log",
          "default": "logs/error.log error",
          "contexts": [
            "main",
            "http",
            "mail",
            "stream",
            "server",
            "location"
          ],
          "syntax": [
            "*`file`* [*`level`*]"
          ],
          "isBlock": false,
          "description_md": "Configures logging.\nSeveral logs can be specified on the same configuration level (1.5.2).\nIf on the `main` configuration level writing a log to a file\nis not explicitly defined, the default file will be used.\n\nThe first parameter defines a *`file`* that will store the log.\n\nThe special value `stderr` selects the standard error file.\nLogging to [syslog](https://nginx.org/en/docs/syslog.html) can be configured by specifying\nthe “`syslog:`” prefix.\nLogging to a\n[cyclic memory buffer](https://nginx.org/en/docs/debugging_log.html#memory)\ncan be configured by specifying the “`memory:`” prefix and\nbuffer *`size`*, and is generally used for debugging (1.7.11).\n\nThe second parameter determines the *`level`* of logging,\nand can be one of the following:\n`debug`, `info`, `notice`,\n`warn`, `error`, `crit`,\n`alert`, or `emerg`.\nLog levels above are listed in the order of increasing severity.\nSetting a certain log level will cause all messages of\nthe specified and more severe log levels to be logged.\nFor example, the default level `error` will\ncause `error`, `crit`,\n`alert`, and `emerg` messages\nto be logged.\nIf this parameter is omitted then `error` is used.\n\u003e For `debug` logging to work, nginx needs to\n\u003e be built with `--with-debug`,\n\u003e see “[A debugging log](https://nginx.org/en/docs/debugging_log.html)”.\n\n\n\u003e The directive can be specified on the\n\u003e `stream` level\n\u003e starting from version 1.7.11,\n\u003e and on the `mail` level\n\u003e starting from version 1.9.0.",
          "description_html": "\u003cp\u003eConfigures logging.\nSeveral logs can be specified on the same configuration level (1.5.2).\nIf on the \u003ccode\u003emain\u003c/code\u003e configuration level writing a log to a file\nis not explicitly defined, the default file will be used.\u003c/p\u003e\n\n\u003cp\u003eThe first parameter defines a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e that will store the log.\u003c/p\u003e\n\n\u003cp\u003eThe special value \u003ccode\u003estderr\u003c/code\u003e selects the standard error file.\nLogging to \u003ca href=\"https://nginx.org/en/docs/syslog.html\" target=\"_blank\"\u003esyslog\u003c/a\u003e can be configured by specifying\nthe “\u003ccode\u003esyslog:\u003c/code\u003e” prefix.\nLogging to a\n\u003ca href=\"https://nginx.org/en/docs/debugging_log.html#memory\" target=\"_blank\"\u003ecyclic memory buffer\u003c/a\u003e\ncan be configured by specifying the “\u003ccode\u003ememory:\u003c/code\u003e” prefix and\nbuffer \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e, and is generally used for debugging (1.7.11).\u003c/p\u003e\n\n\u003cp\u003eThe second parameter determines the \u003cem\u003e\u003ccode\u003elevel\u003c/code\u003e\u003c/em\u003e of logging,\nand can be one of the following:\n\u003ccode\u003edebug\u003c/code\u003e, \u003ccode\u003einfo\u003c/code\u003e, \u003ccode\u003enotice\u003c/code\u003e,\n\u003ccode\u003ewarn\u003c/code\u003e, \u003ccode\u003eerror\u003c/code\u003e, \u003ccode\u003ecrit\u003c/code\u003e,\n\u003ccode\u003ealert\u003c/code\u003e, or \u003ccode\u003eemerg\u003c/code\u003e.\nLog levels above are listed in the order of increasing severity.\nSetting a certain log level will cause all messages of\nthe specified and more severe log levels to be logged.\nFor example, the default level \u003ccode\u003eerror\u003c/code\u003e will\ncause \u003ccode\u003eerror\u003c/code\u003e, \u003ccode\u003ecrit\u003c/code\u003e,\n\u003ccode\u003ealert\u003c/code\u003e, and \u003ccode\u003eemerg\u003c/code\u003e messages\nto be logged.\nIf this parameter is omitted then \u003ccode\u003eerror\u003c/code\u003e is used.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFor \u003ccode\u003edebug\u003c/code\u003e logging to work, nginx needs to\nbe built with \u003ccode\u003e--with-debug\u003c/code\u003e,\nsee “\u003ca href=\"https://nginx.org/en/docs/debugging_log.html\" target=\"_blank\"\u003eA debugging log\u003c/a\u003e”.\u003c/p\u003e\n\n\u003cp\u003eThe directive can be specified on the\n\u003ccode\u003estream\u003c/code\u003e level\nstarting from version 1.7.11,\nand on the \u003ccode\u003email\u003c/code\u003e level\nstarting from version 1.9.0.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "events",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            " `{...}`"
          ],
          "isBlock": true,
          "description_md": "Provides the configuration file context in which the directives that\naffect connection processing are specified.",
          "description_html": "\u003cp\u003eProvides the configuration file context in which the directives that\naffect connection processing are specified.\u003c/p\u003e\n"
        },
        {
          "name": "include",
          "default": "",
          "contexts": [
            ""
          ],
          "syntax": [
            "*`file`* | *`mask`*"
          ],
          "isBlock": false,
          "description_md": "Includes another *`file`*, or files matching the\nspecified *`mask`*, into configuration.\nIncluded files should consist of\nsyntactically correct directives and blocks.\n\nUsage example:\n```\ninclude mime.types;\ninclude vhosts/*.conf;\n```",
          "description_html": "\u003cp\u003eIncludes another \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e, or files matching the\nspecified \u003cem\u003e\u003ccode\u003emask\u003c/code\u003e\u003c/em\u003e, into configuration.\nIncluded files should consist of\nsyntactically correct directives and blocks.\u003c/p\u003e\n\n\u003cp\u003eUsage example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003einclude mime.types;\ninclude vhosts/*.conf;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "load_module",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Loads a dynamic module.\n\nExample:\n```\nload_module modules/ngx_mail_module.so;\n```",
          "description_html": "\u003cp\u003eLoads a dynamic module.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eload_module modules/ngx_mail_module.so;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "lock_file",
          "default": "logs/nginx.lock",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "nginx uses the locking mechanism to implement [`accept_mutex`](https://nginx.org/en/docs/ngx_core_module.html#accept_mutex)\nand serialize access to shared memory.\nOn most systems the locks are implemented using atomic operations,\nand this directive is ignored.\nOn other systems the “lock file” mechanism is used.\nThis directive specifies a prefix for the names of lock files.",
          "description_html": "\u003cp\u003enginx uses the locking mechanism to implement \u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#accept_mutex\" target=\"_blank\"\u003e\u003ccode\u003eaccept_mutex\u003c/code\u003e\u003c/a\u003e\nand serialize access to shared memory.\nOn most systems the locks are implemented using atomic operations,\nand this directive is ignored.\nOn other systems the “lock file” mechanism is used.\nThis directive specifies a prefix for the names of lock files.\u003c/p\u003e\n"
        },
        {
          "name": "master_process",
          "default": "on",
          "contexts": [
            "main"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether worker processes are started.\nThis directive is intended for nginx developers.",
          "description_html": "\u003cp\u003eDetermines whether worker processes are started.\nThis directive is intended for nginx developers.\u003c/p\u003e\n"
        },
        {
          "name": "multi_accept",
          "default": "off",
          "contexts": [
            "events"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "If `multi_accept` is disabled, a worker process\nwill accept one new connection at a time.\nOtherwise, a worker process\nwill accept all new connections at a time.\n\u003e The directive is ignored if [`kqueue`](https://nginx.org/en/docs/events.html#kqueue)\n\u003e connection processing method is used, because it reports\n\u003e the number of new connections waiting to be accepted.",
          "description_html": "\u003cp\u003eIf \u003ccode\u003emulti_accept\u003c/code\u003e is disabled, a worker process\nwill accept one new connection at a time.\nOtherwise, a worker process\nwill accept all new connections at a time.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is ignored if \u003ca href=\"https://nginx.org/en/docs/events.html#kqueue\" target=\"_blank\"\u003e\u003ccode\u003ekqueue\u003c/code\u003e\u003c/a\u003e\nconnection processing method is used, because it reports\nthe number of new connections waiting to be accepted.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "pcre_jit",
          "default": "off",
          "contexts": [
            "main"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the use of “just-in-time compilation” (PCRE JIT)\nfor the regular expressions known by the time of configuration parsing.\n\nPCRE JIT can speed up processing of regular expressions significantly.\n\u003e The JIT is available in PCRE libraries starting from version 8.20\n\u003e built with the `--enable-jit` configuration parameter.\n\u003e When the PCRE library is built with nginx (`--with-pcre=`),\n\u003e the JIT support is enabled via the\n\u003e `--with-pcre-jit` configuration parameter.",
          "description_html": "\u003cp\u003eEnables or disables the use of “just-in-time compilation” (PCRE JIT)\nfor the regular expressions known by the time of configuration parsing.\u003c/p\u003e\n\n\u003cp\u003ePCRE JIT can speed up processing of regular expressions significantly.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe JIT is available in PCRE libraries starting from version 8.20\nbuilt with the \u003ccode\u003e--enable-jit\u003c/code\u003e configuration parameter.\nWhen the PCRE library is built with nginx (\u003ccode\u003e--with-pcre=\u003c/code\u003e),\nthe JIT support is enabled via the\n\u003ccode\u003e--with-pcre-jit\u003c/code\u003e configuration parameter.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "pid",
          "default": "logs/nginx.pid",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Defines a *`file`* that will store the process ID of the main process.",
          "description_html": "\u003cp\u003eDefines a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e that will store the process ID of the main process.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_engine",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`device`*"
          ],
          "isBlock": false,
          "description_md": "Defines the name of the hardware SSL accelerator.",
          "description_html": "\u003cp\u003eDefines the name of the hardware SSL accelerator.\u003c/p\u003e\n"
        },
        {
          "name": "thread_pool",
          "default": "default threads=32 max_queue=65536",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`name`* `threads`=*`number`* [`max_queue`=*`number`*]"
          ],
          "isBlock": false,
          "description_md": "Defines the *`name`* and parameters of a thread pool\nused for multi-threaded reading and sending of files\n[without blocking](https://nginx.org/en/docs/http/ngx_http_core_module.html#aio)\nworker processes.\n\nThe `threads` parameter\ndefines the number of threads in the pool.\n\nIn the event that all threads in the pool are busy,\na new task will wait in the queue.\nThe `max_queue` parameter limits the number\nof tasks allowed to be waiting in the queue.\nBy default, up to 65536 tasks can wait in the queue.\nWhen the queue overflows, the task is completed with an error.",
          "description_html": "\u003cp\u003eDefines the \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and parameters of a thread pool\nused for multi-threaded reading and sending of files\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\" target=\"_blank\"\u003ewithout blocking\u003c/a\u003e\nworker processes.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003ethreads\u003c/code\u003e parameter\ndefines the number of threads in the pool.\u003c/p\u003e\n\n\u003cp\u003eIn the event that all threads in the pool are busy,\na new task will wait in the queue.\nThe \u003ccode\u003emax_queue\u003c/code\u003e parameter limits the number\nof tasks allowed to be waiting in the queue.\nBy default, up to 65536 tasks can wait in the queue.\nWhen the queue overflows, the task is completed with an error.\u003c/p\u003e\n"
        },
        {
          "name": "timer_resolution",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`interval`*"
          ],
          "isBlock": false,
          "description_md": "Reduces timer resolution in worker processes, thus reducing the\nnumber of `gettimeofday()` system calls made.\nBy default, `gettimeofday()` is called each time\na kernel event is received.\nWith reduced resolution, `gettimeofday()` is only\ncalled once per specified *`interval`*.\n\nExample:\n```\ntimer_resolution 100ms;\n```\n\nInternal implementation of the interval depends on the method used:\n- the `EVFILT_TIMER` filter if `kqueue` is used;\n- `timer_create()` if `eventport` is used;\n- `setitimer()` otherwise.",
          "description_html": "\u003cp\u003eReduces timer resolution in worker processes, thus reducing the\nnumber of \u003ccode\u003egettimeofday()\u003c/code\u003e system calls made.\nBy default, \u003ccode\u003egettimeofday()\u003c/code\u003e is called each time\na kernel event is received.\nWith reduced resolution, \u003ccode\u003egettimeofday()\u003c/code\u003e is only\ncalled once per specified \u003cem\u003e\u003ccode\u003einterval\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003etimer_resolution 100ms;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eInternal implementation of the interval depends on the method used:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe \u003ccode\u003eEVFILT_TIMER\u003c/code\u003e filter if \u003ccode\u003ekqueue\u003c/code\u003e is used;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003etimer_create()\u003c/code\u003e if \u003ccode\u003eeventport\u003c/code\u003e is used;\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003esetitimer()\u003c/code\u003e otherwise.\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "use",
          "default": "",
          "contexts": [
            "events"
          ],
          "syntax": [
            "*`method`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the [connection processing](https://nginx.org/en/docs/events.html)\n*`method`* to use.\nThere is normally no need to specify it explicitly, because nginx will\nby default use the most efficient method.",
          "description_html": "\u003cp\u003eSpecifies the \u003ca href=\"https://nginx.org/en/docs/events.html\" target=\"_blank\"\u003econnection processing\u003c/a\u003e\n\u003cem\u003e\u003ccode\u003emethod\u003c/code\u003e\u003c/em\u003e to use.\nThere is normally no need to specify it explicitly, because nginx will\nby default use the most efficient method.\u003c/p\u003e\n"
        },
        {
          "name": "user",
          "default": "nobody nobody",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`user`* [*`group`*]"
          ],
          "isBlock": false,
          "description_md": "Defines *`user`* and *`group`*\ncredentials used by worker processes.\nIf *`group`* is omitted, a group whose name equals\nthat of *`user`* is used.",
          "description_html": "\u003cp\u003eDefines \u003cem\u003e\u003ccode\u003euser\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003egroup\u003c/code\u003e\u003c/em\u003e\ncredentials used by worker processes.\nIf \u003cem\u003e\u003ccode\u003egroup\u003c/code\u003e\u003c/em\u003e is omitted, a group whose name equals\nthat of \u003cem\u003e\u003ccode\u003euser\u003c/code\u003e\u003c/em\u003e is used.\u003c/p\u003e\n"
        },
        {
          "name": "worker_aio_requests",
          "default": "32",
          "contexts": [
            "events"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "When using [`aio`](https://nginx.org/en/docs/http/ngx_http_core_module.html#aio)\nwith the [`epoll`](https://nginx.org/en/docs/events.html#epoll)\nconnection processing method, sets the maximum *`number`* of\noutstanding asynchronous I/O operations\nfor a single worker process.",
          "description_html": "\u003cp\u003eWhen using \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_core_module.html#aio\" target=\"_blank\"\u003e\u003ccode\u003eaio\u003c/code\u003e\u003c/a\u003e\nwith the \u003ca href=\"https://nginx.org/en/docs/events.html#epoll\" target=\"_blank\"\u003e\u003ccode\u003eepoll\u003c/code\u003e\u003c/a\u003e\nconnection processing method, sets the maximum \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e of\noutstanding asynchronous I/O operations\nfor a single worker process.\u003c/p\u003e\n"
        },
        {
          "name": "worker_connections",
          "default": "512",
          "contexts": [
            "events"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum number of simultaneous connections that\ncan be opened by a worker process.\n\nIt should be kept in mind that this number includes all connections\n(e.g. connections with proxied servers, among others),\nnot only connections with clients.\nAnother consideration is that the actual number of simultaneous\nconnections cannot exceed the current limit on\nthe maximum number of open files, which can be changed by\n[`worker_rlimit_nofile`](https://nginx.org/en/docs/ngx_core_module.html#worker_rlimit_nofile).",
          "description_html": "\u003cp\u003eSets the maximum number of simultaneous connections that\ncan be opened by a worker process.\u003c/p\u003e\n\n\u003cp\u003eIt should be kept in mind that this number includes all connections\n(e.g. connections with proxied servers, among others),\nnot only connections with clients.\nAnother consideration is that the actual number of simultaneous\nconnections cannot exceed the current limit on\nthe maximum number of open files, which can be changed by\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#worker_rlimit_nofile\" target=\"_blank\"\u003e\u003ccode\u003eworker_rlimit_nofile\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "worker_cpu_affinity",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`cpumask`* ...",
            "`auto` [*`cpumask`*]"
          ],
          "isBlock": false,
          "description_md": "Binds worker processes to the sets of CPUs.\nEach CPU set is represented by a bitmask of allowed CPUs.\nThere should be a separate set defined for each of the worker processes.\nBy default, worker processes are not bound to any specific CPUs.\n\nFor example,\n```\nworker_processes    4;\nworker_cpu_affinity 0001 0010 0100 1000;\n```\nbinds each worker process to a separate CPU, while\n```\nworker_processes    2;\nworker_cpu_affinity 0101 1010;\n```\nbinds the first worker process to CPU0/CPU2,\nand the second worker process to CPU1/CPU3.\nThe second example is suitable for hyper-threading.\n\nThe special value `auto` (1.9.10) allows\nbinding worker processes automatically to available CPUs:\n```\nworker_processes auto;\nworker_cpu_affinity auto;\n```\nThe optional mask parameter can be used to limit the CPUs\navailable for automatic binding:\n```\nworker_cpu_affinity auto 01010101;\n```\n\n\u003e The directive is only available on FreeBSD and Linux.",
          "description_html": "\u003cp\u003eBinds worker processes to the sets of CPUs.\nEach CPU set is represented by a bitmask of allowed CPUs.\nThere should be a separate set defined for each of the worker processes.\nBy default, worker processes are not bound to any specific CPUs.\u003c/p\u003e\n\n\u003cp\u003eFor example,\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eworker_processes    4;\nworker_cpu_affinity 0001 0010 0100 1000;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ebinds each worker process to a separate CPU, while\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eworker_processes    2;\nworker_cpu_affinity 0101 1010;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ebinds the first worker process to CPU0/CPU2,\nand the second worker process to CPU1/CPU3.\nThe second example is suitable for hyper-threading.\u003c/p\u003e\n\n\u003cp\u003eThe special value \u003ccode\u003eauto\u003c/code\u003e (1.9.10) allows\nbinding worker processes automatically to available CPUs:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eworker_processes auto;\nworker_cpu_affinity auto;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe optional mask parameter can be used to limit the CPUs\navailable for automatic binding:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eworker_cpu_affinity auto 01010101;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is only available on FreeBSD and Linux.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "worker_priority",
          "default": "0",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Defines the scheduling priority for worker processes like it is\ndone by the `nice` command: a negative\n*`number`*\nmeans higher priority.\nAllowed range normally varies from -20 to 20.\n\nExample:\n```\nworker_priority -10;\n```",
          "description_html": "\u003cp\u003eDefines the scheduling priority for worker processes like it is\ndone by the \u003ccode\u003enice\u003c/code\u003e command: a negative\n\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\nmeans higher priority.\nAllowed range normally varies from -20 to 20.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eworker_priority -10;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "worker_processes",
          "default": "1",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`number`* | `auto`"
          ],
          "isBlock": false,
          "description_md": "Defines the number of worker processes.\n\nThe optimal value depends on many factors including (but not\nlimited to) the number of CPU cores, the number of hard disk\ndrives that store data, and load pattern.\nWhen one is in doubt, setting it to the number of available CPU cores\nwould be a good start (the value “`auto`”\nwill try to autodetect it).\n\u003e The `auto` parameter is supported starting from\n\u003e versions 1.3.8 and 1.2.5.",
          "description_html": "\u003cp\u003eDefines the number of worker processes.\u003c/p\u003e\n\n\u003cp\u003eThe optimal value depends on many factors including (but not\nlimited to) the number of CPU cores, the number of hard disk\ndrives that store data, and load pattern.\nWhen one is in doubt, setting it to the number of available CPU cores\nwould be a good start (the value “\u003ccode\u003eauto\u003c/code\u003e”\nwill try to autodetect it).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003eauto\u003c/code\u003e parameter is supported starting from\nversions 1.3.8 and 1.2.5.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "worker_rlimit_core",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Changes the limit on the largest size of a core file\n(`RLIMIT_CORE`) for worker processes.\nUsed to increase the limit without restarting the main process.",
          "description_html": "\u003cp\u003eChanges the limit on the largest size of a core file\n(\u003ccode\u003eRLIMIT_CORE\u003c/code\u003e) for worker processes.\nUsed to increase the limit without restarting the main process.\u003c/p\u003e\n"
        },
        {
          "name": "worker_rlimit_nofile",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Changes the limit on the maximum number of open files\n(`RLIMIT_NOFILE`) for worker processes.\nUsed to increase the limit without restarting the main process.",
          "description_html": "\u003cp\u003eChanges the limit on the maximum number of open files\n(\u003ccode\u003eRLIMIT_NOFILE\u003c/code\u003e) for worker processes.\nUsed to increase the limit without restarting the main process.\u003c/p\u003e\n"
        },
        {
          "name": "worker_shutdown_timeout",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Configures a timeout for a graceful shutdown of worker processes.\nWhen the *`time`* expires,\nnginx will try to close all the connections currently open\nto facilitate shutdown.",
          "description_html": "\u003cp\u003eConfigures a timeout for a graceful shutdown of worker processes.\nWhen the \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e expires,\nnginx will try to close all the connections currently open\nto facilitate shutdown.\u003c/p\u003e\n"
        },
        {
          "name": "working_directory",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`directory`*"
          ],
          "isBlock": false,
          "description_md": "Defines the current working directory for a worker process.\nIt is primarily used when writing a core-file, in which case\na worker process should have write permission for the\nspecified directory.",
          "description_html": "\u003cp\u003eDefines the current working directory for a worker process.\nIt is primarily used when writing a core-file, in which case\na worker process should have write permission for the\nspecified directory.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/ngx_google_perftools_module.html",
      "name": "ngx_google_perftools_module",
      "directives": [
        {
          "name": "google_perftools_profiles",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Sets a file name that keeps profiling information of\nnginx worker process.\nThe ID of the worker process is always a part of the file name\nand is appended to the end of the file name, after a dot.",
          "description_html": "\u003cp\u003eSets a file name that keeps profiling information of\nnginx worker process.\nThe ID of the worker process is always a part of the file name\nand is appended to the end of the file name, after a dot.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/ngx_otel_module.html",
      "name": "ngx_otel_module",
      "directives": [
        {
          "name": "otel_exporter",
          "default": "",
          "contexts": [
            "http"
          ],
          "syntax": [
            " `{...}`"
          ],
          "isBlock": true,
          "description_md": "Specifies OTel data export parameters:\n\n- `endpoint`\n\n    the address of OTLP/gRPC endpoint that will accept telemetry data.\n- `interval`\n\n    the maximum interval between two exports,\n    by default is `5` seconds.\n- `batch_size`\n\n    the maximum number of spans to be sent in one batch per worker,\n    by default is `512`.\n- `batch_count`\n\n    the number of pending batches per worker,\n    spans exceeding the limit are dropped,\n    by default is `4`.\n\nExample:\n```\notel_exporter {\n    endpoint    localhost:4317;\n    interval    5s;\n    batch_size  512;\n    batch_count 4;\n}\n```",
          "description_html": "\u003cp\u003eSpecifies OTel data export parameters:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eendpoint\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe address of OTLP/gRPC endpoint that will accept telemetry data.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einterval\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe maximum interval between two exports,\nby default is \u003ccode\u003e5\u003c/code\u003e seconds.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebatch_size\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe maximum number of spans to be sent in one batch per worker,\nby default is \u003ccode\u003e512\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebatch_count\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe number of pending batches per worker,\nspans exceeding the limit are dropped,\nby default is \u003ccode\u003e4\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eotel_exporter {\n    endpoint    localhost:4317;\n    interval    5s;\n    batch_size  512;\n    batch_count 4;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "otel_service_name",
          "default": "unknown_service:nginx",
          "contexts": [
            "http"
          ],
          "syntax": [
            "*`name`*"
          ],
          "isBlock": false,
          "description_md": "Sets the\n“[`service.name`](https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/#service)”\nattribute of the OTel resource.",
          "description_html": "\u003cp\u003eSets the\n“\u003ca href=\"https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/#service\" target=\"_blank\"\u003e\u003ccode\u003eservice.name\u003c/code\u003e\u003c/a\u003e”\nattribute of the OTel resource.\u003c/p\u003e\n"
        },
        {
          "name": "otel_trace",
          "default": "off",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`on` | `off` | `$variable`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables OpenTelemetry tracing.\nThe directive can also be enabled by specifying a variable:\n```\nsplit_clients \"$otel_trace_id\" $ratio_sampler {\n              10%              on;\n              *                off;\n}\n\nserver {\n    location / {\n        otel_trace         $ratio_sampler;\n        otel_trace_context inject;\n        proxy_pass         http://backend;\n    }\n}\n```",
          "description_html": "\u003cp\u003eEnables or disables OpenTelemetry tracing.\nThe directive can also be enabled by specifying a variable:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esplit_clients \u0026quot;$otel_trace_id\u0026quot; $ratio_sampler {\n              10%              on;\n              *                off;\n}\n\nserver {\n    location / {\n        otel_trace         $ratio_sampler;\n        otel_trace_context inject;\n        proxy_pass         http://backend;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "otel_trace_context",
          "default": "ignore",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "`extract` | `inject` | `propagate` | `ignore`"
          ],
          "isBlock": false,
          "description_md": "Specifies how to propagate\n[traceparent/tracestate](https://www.w3.org/TR/trace-context/#design-overview) headers:\n\n- `extract`\n\n    uses an existing trace context from the request,\n    so that the identifiers of\n    a [trace](https://nginx.org/en/docs/ngx_otel_module.html#var_otel_trace_id) and\n    the [parent span](https://nginx.org/en/docs/ngx_otel_module.html#var_otel_parent_id)\n    are inherited from the incoming request.\n- `inject`\n\n    adds a new context to the request, overwriting existing headers, if any.\n- `propagate`\n\n    updates the existing context\n    (combines [`extract`](https://nginx.org/en/docs/ngx_otel_module.html#extract) and [`inject`](https://nginx.org/en/docs/ngx_otel_module.html#inject)).\n- `ignore`\n\n    skips context headers processing.",
          "description_html": "\u003cp\u003eSpecifies how to propagate\n\u003ca href=\"https://www.w3.org/TR/trace-context/#design-overview\" target=\"_blank\"\u003etraceparent/tracestate\u003c/a\u003e headers:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eextract\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003euses an existing trace context from the request,\nso that the identifiers of\na \u003ca href=\"https://nginx.org/en/docs/ngx_otel_module.html#var_otel_trace_id\" target=\"_blank\"\u003etrace\u003c/a\u003e and\nthe \u003ca href=\"https://nginx.org/en/docs/ngx_otel_module.html#var_otel_parent_id\" target=\"_blank\"\u003eparent span\u003c/a\u003e\nare inherited from the incoming request.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einject\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eadds a new context to the request, overwriting existing headers, if any.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epropagate\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eupdates the existing context\n(combines \u003ca href=\"https://nginx.org/en/docs/ngx_otel_module.html#extract\" target=\"_blank\"\u003e\u003ccode\u003eextract\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/ngx_otel_module.html#inject\" target=\"_blank\"\u003e\u003ccode\u003einject\u003c/code\u003e\u003c/a\u003e).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eignore\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eskips context headers processing.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "otel_span_name",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`*"
          ],
          "isBlock": false,
          "description_md": "Defines the name of the OTel\n[span](https://opentelemetry.io/docs/concepts/observability-primer/#spans).\nBy default, it is a name of the location for a request.\nThe name can contain variables.",
          "description_html": "\u003cp\u003eDefines the name of the OTel\n\u003ca href=\"https://opentelemetry.io/docs/concepts/observability-primer/#spans\" target=\"_blank\"\u003espan\u003c/a\u003e.\nBy default, it is a name of the location for a request.\nThe name can contain variables.\u003c/p\u003e\n"
        },
        {
          "name": "otel_span_attr",
          "default": "",
          "contexts": [
            "http",
            "server",
            "location"
          ],
          "syntax": [
            "*`name`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Adds a custom OTel span attribute.\nThe value can contain variables.",
          "description_html": "\u003cp\u003eAdds a custom OTel span attribute.\nThe value can contain variables.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_access_module.html",
      "name": "ngx_stream_access_module",
      "directives": [
        {
          "name": "allow",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`address`* | *`CIDR`* | `unix:` | `all`"
          ],
          "isBlock": false,
          "description_md": "Allows access for the specified network or address.\nIf the special value `unix:` is specified,\nallows access for all UNIX-domain sockets.",
          "description_html": "\u003cp\u003eAllows access for the specified network or address.\nIf the special value \u003ccode\u003eunix:\u003c/code\u003e is specified,\nallows access for all UNIX-domain sockets.\u003c/p\u003e\n"
        },
        {
          "name": "deny",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`address`* | *`CIDR`* | `unix:` | `all`"
          ],
          "isBlock": false,
          "description_md": "Denies access for the specified network or address.\nIf the special value `unix:` is specified,\ndenies access for all UNIX-domain sockets.",
          "description_html": "\u003cp\u003eDenies access for the specified network or address.\nIf the special value \u003ccode\u003eunix:\u003c/code\u003e is specified,\ndenies access for all UNIX-domain sockets.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_core_module.html",
      "name": "ngx_stream_core_module",
      "directives": [
        {
          "name": "listen",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            "*`address`*:*`port`* [`ssl`] [`udp`] [`proxy_protocol`] [`fastopen`=*`number`*] [`backlog`=*`number`*] [`rcvbuf`=*`size`*] [`sndbuf`=*`size`*] [`bind`] [`ipv6only`=`on`|`off`] [`reuseport`] [`so_keepalive`=`on`|`off`|[*`keepidle`*]:[*`keepintvl`*]:[*`keepcnt`*]]"
          ],
          "isBlock": false,
          "description_md": "Sets the *`address`* and *`port`* for the socket\non which the server will accept connections.\nIt is possible to specify just the port.\nThe address can also be a hostname, for example:\n```\nlisten 127.0.0.1:12345;\nlisten *:12345;\nlisten 12345;     # same as *:12345\nlisten localhost:12345;\n```\nIPv6 addresses are specified in square brackets:\n```\nlisten [::1]:12345;\nlisten [::]:12345;\n```\nUNIX-domain sockets are specified with the “`unix:`”\nprefix:\n```\nlisten unix:/var/run/nginx.sock;\n```\n\nPort ranges (1.15.10) are specified with the\nfirst and last port separated by a hyphen:\n```\nlisten 127.0.0.1:12345-12399;\nlisten 12345-12399;\n```\n\nThe `ssl` parameter allows specifying that all\nconnections accepted on this port should work in SSL mode.\n\nThe `udp` parameter configures a listening socket\nfor working with datagrams (1.9.13).\nIn order to handle packets from the same address and port in the same session,\nthe [`reuseport`](https://nginx.org/en/docs/stream/ngx_stream_core_module.html#reuseport) parameter\nshould also be specified.\n\nThe `proxy_protocol` parameter (1.11.4)\nallows specifying that all connections accepted on this port should use the\n[PROXY protocol](http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt).\n\u003e The PROXY protocol version 2 is supported since version 1.13.11.\n\nThe `listen` directive\ncan have several additional parameters specific to socket-related system calls.\n- `fastopen`=*`number`*\n\n    enables\n    “[TCP Fast Open](http://en.wikipedia.org/wiki/TCP_Fast_Open)”\n    for the listening socket (1.21.0) and\n    [limits](https://datatracker.ietf.org/doc/html/rfc7413#section-5.1)\n    the maximum length for the queue of connections that have not yet completed\n    the three-way handshake.\n    \u003e Do not enable this feature unless the server can handle\n    \u003e receiving the\n    \u003e [ same SYN packet with data](https://datatracker.ietf.org/doc/html/rfc7413#section-6.1) more than once.\n- `backlog`=*`number`*\n\n    sets the `backlog` parameter in the\n    `listen()` call that limits\n    the maximum length for the queue of pending connections (1.9.2).\n    By default,\n    `backlog` is set to -1 on FreeBSD, DragonFly BSD, and macOS,\n    and to 511 on other platforms.\n- `rcvbuf`=*`size`*\n\n    sets the receive buffer size\n    (the `SO_RCVBUF` option) for the listening socket (1.11.13).\n- `sndbuf`=*`size`*\n\n    sets the send buffer size\n    (the `SO_SNDBUF` option) for the listening socket (1.11.13).\n- `bind`\n\n    this parameter instructs to make a separate `bind()`\n    call for a given address:port pair.\n    The fact is that if there are several `listen` directives with\n    the same port but different addresses, and one of the\n    `listen` directives listens on all addresses\n    for the given port (`*:`*`port`*), nginx will\n    `bind()` only to `*:`*`port`*.\n    It should be noted that the `getsockname()` system call will be\n    made in this case to determine the address that accepted the connection.\n    If the `backlog`,\n    `rcvbuf`, `sndbuf`,\n    `ipv6only`, `reuseport`,\n    or `so_keepalive` parameters\n    are used then for a given\n    *`address`*:*`port`* pair\n    a separate `bind()` call will always be made.\n- `ipv6only`=`on`|`off`\n\n    this parameter determines\n    (via the `IPV6_V6ONLY` socket option)\n    whether an IPv6 socket listening on a wildcard address `[::]`\n    will accept only IPv6 connections or both IPv6 and IPv4 connections.\n    This parameter is turned on by default.\n    It can only be set once on start.\n- `reuseport`\n\n    this parameter (1.9.1) instructs to create an individual listening socket\n    for each worker process\n    (using the\n    `SO_REUSEPORT` socket option on Linux 3.9+ and DragonFly BSD,\n    or `SO_REUSEPORT_LB` on FreeBSD 12+), allowing a kernel\n    to distribute incoming connections between worker processes.\n    This currently works only on Linux 3.9+, DragonFly BSD,\n    and FreeBSD 12+ (1.15.1).\n    \u003e Inappropriate use of this option may have its security\n    \u003e [implications](http://man7.org/linux/man-pages/man7/socket.7.html).\n- `so_keepalive`=`on`|`off`|[*`keepidle`*]:[*`keepintvl`*]:[*`keepcnt`*]\n\n    this parameter configures the “TCP keepalive” behavior\n    for the listening socket.\n    If this parameter is omitted then the operating system’s settings will be\n    in effect for the socket.\n    If it is set to the value “`on`”, the\n    `SO_KEEPALIVE` option is turned on for the socket.\n    If it is set to the value “`off`”, the\n    `SO_KEEPALIVE` option is turned off for the socket.\n    Some operating systems support setting of TCP keepalive parameters on\n    a per-socket basis using the `TCP_KEEPIDLE`,\n    `TCP_KEEPINTVL`, and `TCP_KEEPCNT` socket options.\n    On such systems (currently, Linux 2.4+, NetBSD 5+, and\n    FreeBSD 9.0-STABLE), they can be configured\n    using the *`keepidle`*, *`keepintvl`*, and\n    *`keepcnt`* parameters.\n    One or two parameters may be omitted, in which case the system default setting\n    for the corresponding socket option will be in effect.\n    For example,\n    ```\n    so_keepalive=30m::10\n    ```\n    will set the idle timeout (`TCP_KEEPIDLE`) to 30 minutes,\n    leave the probe interval (`TCP_KEEPINTVL`) at its system default,\n    and set the probes count (`TCP_KEEPCNT`) to 10 probes.\n\nDifferent servers must listen on different\n*`address`*:*`port`* pairs.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e for the socket\non which the server will accept connections.\nIt is possible to specify just the port.\nThe address can also be a hostname, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten 127.0.0.1:12345;\nlisten *:12345;\nlisten 12345;     # same as *:12345\nlisten localhost:12345;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIPv6 addresses are specified in square brackets:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten [::1]:12345;\nlisten [::]:12345;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eUNIX-domain sockets are specified with the “\u003ccode\u003eunix:\u003c/code\u003e”\nprefix:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten unix:/var/run/nginx.sock;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ePort ranges (1.15.10) are specified with the\nfirst and last port separated by a hyphen:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elisten 127.0.0.1:12345-12399;\nlisten 12345-12399;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003essl\u003c/code\u003e parameter allows specifying that all\nconnections accepted on this port should work in SSL mode.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eudp\u003c/code\u003e parameter configures a listening socket\nfor working with datagrams (1.9.13).\nIn order to handle packets from the same address and port in the same session,\nthe \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#reuseport\" target=\"_blank\"\u003e\u003ccode\u003ereuseport\u003c/code\u003e\u003c/a\u003e parameter\nshould also be specified.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eproxy_protocol\u003c/code\u003e parameter (1.11.4)\nallows specifying that all connections accepted on this port should use the\n\u003ca href=\"http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt\" target=\"_blank\"\u003ePROXY protocol\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe PROXY protocol version 2 is supported since version 1.13.11.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe \u003ccode\u003elisten\u003c/code\u003e directive\ncan have several additional parameters specific to socket-related system calls.\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003efastopen\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eenables\n“\u003ca href=\"http://en.wikipedia.org/wiki/TCP_Fast_Open\" target=\"_blank\"\u003eTCP Fast Open\u003c/a\u003e”\nfor the listening socket (1.21.0) and\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7413#section-5.1\" target=\"_blank\"\u003elimits\u003c/a\u003e\nthe maximum length for the queue of connections that have not yet completed\nthe three-way handshake.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eDo not enable this feature unless the server can handle\nreceiving the\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7413#section-6.1\" target=\"_blank\"\u003e same SYN packet with data\u003c/a\u003e more than once.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebacklog\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the \u003ccode\u003ebacklog\u003c/code\u003e parameter in the\n\u003ccode\u003elisten()\u003c/code\u003e call that limits\nthe maximum length for the queue of pending connections (1.9.2).\nBy default,\n\u003ccode\u003ebacklog\u003c/code\u003e is set to -1 on FreeBSD, DragonFly BSD, and macOS,\nand to 511 on other platforms.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ercvbuf\u003c/code\u003e=\u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the receive buffer size\n(the \u003ccode\u003eSO_RCVBUF\u003c/code\u003e option) for the listening socket (1.11.13).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003esndbuf\u003c/code\u003e=\u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the send buffer size\n(the \u003ccode\u003eSO_SNDBUF\u003c/code\u003e option) for the listening socket (1.11.13).\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebind\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethis parameter instructs to make a separate \u003ccode\u003ebind()\u003c/code\u003e\ncall for a given address:port pair.\nThe fact is that if there are several \u003ccode\u003elisten\u003c/code\u003e directives with\nthe same port but different addresses, and one of the\n\u003ccode\u003elisten\u003c/code\u003e directives listens on all addresses\nfor the given port (\u003ccode\u003e*:\u003c/code\u003e\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e), nginx will\n\u003ccode\u003ebind()\u003c/code\u003e only to \u003ccode\u003e*:\u003c/code\u003e\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e.\nIt should be noted that the \u003ccode\u003egetsockname()\u003c/code\u003e system call will be\nmade in this case to determine the address that accepted the connection.\nIf the \u003ccode\u003ebacklog\u003c/code\u003e,\n\u003ccode\u003ercvbuf\u003c/code\u003e, \u003ccode\u003esndbuf\u003c/code\u003e,\n\u003ccode\u003eipv6only\u003c/code\u003e, \u003ccode\u003ereuseport\u003c/code\u003e,\nor \u003ccode\u003eso_keepalive\u003c/code\u003e parameters\nare used then for a given\n\u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e pair\na separate \u003ccode\u003ebind()\u003c/code\u003e call will always be made.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eipv6only\u003c/code\u003e=\u003ccode\u003eon\u003c/code\u003e|\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethis parameter determines\n(via the \u003ccode\u003eIPV6_V6ONLY\u003c/code\u003e socket option)\nwhether an IPv6 socket listening on a wildcard address \u003ccode\u003e[::]\u003c/code\u003e\nwill accept only IPv6 connections or both IPv6 and IPv4 connections.\nThis parameter is turned on by default.\nIt can only be set once on start.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ereuseport\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethis parameter (1.9.1) instructs to create an individual listening socket\nfor each worker process\n(using the\n\u003ccode\u003eSO_REUSEPORT\u003c/code\u003e socket option on Linux 3.9+ and DragonFly BSD,\nor \u003ccode\u003eSO_REUSEPORT_LB\u003c/code\u003e on FreeBSD 12+), allowing a kernel\nto distribute incoming connections between worker processes.\nThis currently works only on Linux 3.9+, DragonFly BSD,\nand FreeBSD 12+ (1.15.1).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eInappropriate use of this option may have its security\n\u003ca href=\"http://man7.org/linux/man-pages/man7/socket.7.html\" target=\"_blank\"\u003eimplications\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eso_keepalive\u003c/code\u003e=\u003ccode\u003eon\u003c/code\u003e|\u003ccode\u003eoff\u003c/code\u003e|[\u003cem\u003e\u003ccode\u003ekeepidle\u003c/code\u003e\u003c/em\u003e]:[\u003cem\u003e\u003ccode\u003ekeepintvl\u003c/code\u003e\u003c/em\u003e]:[\u003cem\u003e\u003ccode\u003ekeepcnt\u003c/code\u003e\u003c/em\u003e]\u003c/p\u003e\n\n\u003cp\u003ethis parameter configures the “TCP keepalive” behavior\nfor the listening socket.\nIf this parameter is omitted then the operating system’s settings will be\nin effect for the socket.\nIf it is set to the value “\u003ccode\u003eon\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e option is turned on for the socket.\nIf it is set to the value “\u003ccode\u003eoff\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e option is turned off for the socket.\nSome operating systems support setting of TCP keepalive parameters on\na per-socket basis using the \u003ccode\u003eTCP_KEEPIDLE\u003c/code\u003e,\n\u003ccode\u003eTCP_KEEPINTVL\u003c/code\u003e, and \u003ccode\u003eTCP_KEEPCNT\u003c/code\u003e socket options.\nOn such systems (currently, Linux 2.4+, NetBSD 5+, and\nFreeBSD 9.0-STABLE), they can be configured\nusing the \u003cem\u003e\u003ccode\u003ekeepidle\u003c/code\u003e\u003c/em\u003e, \u003cem\u003e\u003ccode\u003ekeepintvl\u003c/code\u003e\u003c/em\u003e, and\n\u003cem\u003e\u003ccode\u003ekeepcnt\u003c/code\u003e\u003c/em\u003e parameters.\nOne or two parameters may be omitted, in which case the system default setting\nfor the corresponding socket option will be in effect.\nFor example,\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eso_keepalive=30m::10\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewill set the idle timeout (\u003ccode\u003eTCP_KEEPIDLE\u003c/code\u003e) to 30 minutes,\nleave the probe interval (\u003ccode\u003eTCP_KEEPINTVL\u003c/code\u003e) at its system default,\nand set the probes count (\u003ccode\u003eTCP_KEEPCNT\u003c/code\u003e) to 10 probes.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eDifferent servers must listen on different\n\u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eport\u003c/code\u003e\u003c/em\u003e pairs.\u003c/p\u003e\n"
        },
        {
          "name": "preread_buffer_size",
          "default": "16k",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`size`* of the\n[preread](https://nginx.org/en/docs/stream/stream_processing.html#preread_phase) buffer.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the\n\u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\" target=\"_blank\"\u003epreread\u003c/a\u003e buffer.\u003c/p\u003e\n"
        },
        {
          "name": "preread_timeout",
          "default": "30s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`timeout`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`timeout`* of the\n[preread](https://nginx.org/en/docs/stream/stream_processing.html#preread_phase) phase.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/em\u003e of the\n\u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\" target=\"_blank\"\u003epreread\u003c/a\u003e phase.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_protocol_timeout",
          "default": "30s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`timeout`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`timeout`* for\nreading the PROXY protocol header to complete.\nIf no entire header is transmitted within this time,\nthe connection is closed.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/em\u003e for\nreading the PROXY protocol header to complete.\nIf no entire header is transmitted within this time,\nthe connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "resolver",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`address`* ... [`valid`=*`time`*] [`ipv4`=`on`|`off`] [`ipv6`=`on`|`off`] [`status_zone`=*`zone`*]"
          ],
          "isBlock": false,
          "description_md": "Configures name servers used to resolve names of upstream servers\ninto addresses, for example:\n```\nresolver 127.0.0.1 [::1]:5353;\n```\nThe address can be specified as a domain name or IP address,\nwith an optional port.\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n\nBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv4 or IPv6 addresses is not desired,\nthe `ipv4=off` (1.23.1) or\nthe `ipv6=off` parameter can be specified.\n\nBy default, nginx caches answers using the TTL value of a response.\nThe optional `valid` parameter allows overriding it:\n```\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n```\n\u003e To prevent DNS spoofing, it is recommended\n\u003e configuring DNS servers in a properly secured trusted local network.\n\nThe optional `status_zone` parameter (1.17.1)\nenables\n[collection](https://nginx.org/en/docs/http/ngx_http_api_module.html#resolvers_)\nof DNS server statistics of requests and responses\nin the specified *`zone`*.\nThe parameter is available as part of our\n[commercial subscription](https://nginx.com/products/).\n\n\u003e Before version 1.11.3, this directive was available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eConfigures name servers used to resolve names of upstream servers\ninto addresses, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver 127.0.0.1 [::1]:5353;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe address can be specified as a domain name or IP address,\nwith an optional port.\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\u003c/p\u003e\n\n\u003cp\u003eBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv4 or IPv6 addresses is not desired,\nthe \u003ccode\u003eipv4=off\u003c/code\u003e (1.23.1) or\nthe \u003ccode\u003eipv6=off\u003c/code\u003e parameter can be specified.\u003c/p\u003e\n\n\u003cp\u003eBy default, nginx caches answers using the TTL value of a response.\nThe optional \u003ccode\u003evalid\u003c/code\u003e parameter allows overriding it:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver 127.0.0.1 [::1]:5353 valid=30s;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTo prevent DNS spoofing, it is recommended\nconfiguring DNS servers in a properly secured trusted local network.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003estatus_zone\u003c/code\u003e parameter (1.17.1)\nenables\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#resolvers_\" target=\"_blank\"\u003ecollection\u003c/a\u003e\nof DNS server statistics of requests and responses\nin the specified \u003cem\u003e\u003ccode\u003ezone\u003c/code\u003e\u003c/em\u003e.\nThe parameter is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore version 1.11.3, this directive was available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "resolver_timeout",
          "default": "30s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for name resolution, for example:\n```\nresolver_timeout 5s;\n```\n\u003e Before version 1.11.3, this directive was available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eSets a timeout for name resolution, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver_timeout 5s;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eBefore version 1.11.3, this directive was available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "server",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            " `{...}`"
          ],
          "isBlock": true,
          "description_md": "Sets the configuration for a server.",
          "description_html": "\u003cp\u003eSets the configuration for a server.\u003c/p\u003e\n"
        },
        {
          "name": "stream",
          "default": "",
          "contexts": [
            "main"
          ],
          "syntax": [
            " `{...}`"
          ],
          "isBlock": true,
          "description_md": "Provides the configuration file context in which the stream server directives\nare specified.",
          "description_html": "\u003cp\u003eProvides the configuration file context in which the stream server directives\nare specified.\u003c/p\u003e\n"
        },
        {
          "name": "tcp_nodelay",
          "default": "on",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables the use of the `TCP_NODELAY` option.\nThe option is enabled for both client and proxied server connections.",
          "description_html": "\u003cp\u003eEnables or disables the use of the \u003ccode\u003eTCP_NODELAY\u003c/code\u003e option.\nThe option is enabled for both client and proxied server connections.\u003c/p\u003e\n"
        },
        {
          "name": "variables_hash_bucket_size",
          "default": "64",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the bucket size for the variables hash table.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the bucket size for the variables hash table.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "variables_hash_max_size",
          "default": "1024",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`size`* of the variables hash table.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the variables hash table.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_geo_module.html",
      "name": "ngx_stream_geo_module",
      "directives": [
        {
          "name": "geo",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "[*`$address`*] *`$variable`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Describes the dependency of values of the specified variable\non the client IP address.\nBy default, the address is taken from the `$remote_addr` variable,\nbut it can also be taken from another variable, for example:\n```\ngeo $arg_remote_addr $geo {\n    ...;\n}\n```\n\n\u003e Since variables are evaluated only when used, the mere existence\n\u003e of even a large number of declared “`geo`” variables\n\u003e does not cause any extra costs for connection processing.\n\nIf the value of a variable does not represent a valid IP address\nthen the “`255.255.255.255`” address is used.\n\nAddresses are specified either as prefixes in CIDR notation\n(including individual addresses) or as ranges.\n\nThe following special parameters are also supported:\n- `delete`\n\n    deletes the specified network.\n- `default`\n\n    a value set to the variable if the client address does not\n    match any of the specified addresses.\n    When addresses are specified in CIDR notation,\n    “`0.0.0.0/0`” and “`::/0`”\n    can be used instead of `default`.\n    When `default` is not specified, the default\n    value will be an empty string.\n- `include`\n\n    includes a file with addresses and values.\n    There can be several inclusions.\n- `ranges`\n\n    indicates that addresses are specified as ranges.\n    This parameter should be the first.\n    To speed up loading of a geo base, addresses should be put in ascending order.\n\nExample:\n```\ngeo $country {\n    default        ZZ;\n    include        conf/geo.conf;\n    delete         127.0.0.0/16;\n\n    127.0.0.0/24   US;\n    127.0.0.1/32   RU;\n    10.1.0.0/16    RU;\n    192.168.1.0/24 UK;\n}\n```\n\nThe `conf/geo.conf` file could contain the following lines:\n```\n10.2.0.0/16    RU;\n192.168.2.0/24 RU;\n```\n\nA value of the most specific match is used.\nFor example, for the 127.0.0.1 address the value “`RU`”\nwill be chosen, not “`US`”.\n\nExample with ranges:\n```\ngeo $country {\n    ranges;\n    default                   ZZ;\n    127.0.0.0-127.0.0.0       US;\n    127.0.0.1-127.0.0.1       RU;\n    127.0.0.1-127.0.0.255     US;\n    10.1.0.0-10.1.255.255     RU;\n    192.168.1.0-192.168.1.255 UK;\n}\n```",
          "description_html": "\u003cp\u003eDescribes the dependency of values of the specified variable\non the client IP address.\nBy default, the address is taken from the \u003ccode\u003e$remote_addr\u003c/code\u003e variable,\nbut it can also be taken from another variable, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egeo $arg_remote_addr $geo {\n    ...;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSince variables are evaluated only when used, the mere existence\nof even a large number of declared “\u003ccode\u003egeo\u003c/code\u003e” variables\ndoes not cause any extra costs for connection processing.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIf the value of a variable does not represent a valid IP address\nthen the “\u003ccode\u003e255.255.255.255\u003c/code\u003e” address is used.\u003c/p\u003e\n\n\u003cp\u003eAddresses are specified either as prefixes in CIDR notation\n(including individual addresses) or as ranges.\u003c/p\u003e\n\n\u003cp\u003eThe following special parameters are also supported:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edelete\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edeletes the specified network.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edefault\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea value set to the variable if the client address does not\nmatch any of the specified addresses.\nWhen addresses are specified in CIDR notation,\n“\u003ccode\u003e0.0.0.0/0\u003c/code\u003e” and “\u003ccode\u003e::/0\u003c/code\u003e”\ncan be used instead of \u003ccode\u003edefault\u003c/code\u003e.\nWhen \u003ccode\u003edefault\u003c/code\u003e is not specified, the default\nvalue will be an empty string.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einclude\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eincludes a file with addresses and values.\nThere can be several inclusions.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eranges\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eindicates that addresses are specified as ranges.\nThis parameter should be the first.\nTo speed up loading of a geo base, addresses should be put in ascending order.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egeo $country {\n    default        ZZ;\n    include        conf/geo.conf;\n    delete         127.0.0.0/16;\n\n    127.0.0.0/24   US;\n    127.0.0.1/32   RU;\n    10.1.0.0/16    RU;\n    192.168.1.0/24 UK;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003econf/geo.conf\u003c/code\u003e file could contain the following lines:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e10.2.0.0/16    RU;\n192.168.2.0/24 RU;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eA value of the most specific match is used.\nFor example, for the 127.0.0.1 address the value “\u003ccode\u003eRU\u003c/code\u003e”\nwill be chosen, not “\u003ccode\u003eUS\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cp\u003eExample with ranges:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003egeo $country {\n    ranges;\n    default                   ZZ;\n    127.0.0.0-127.0.0.0       US;\n    127.0.0.1-127.0.0.1       RU;\n    127.0.0.1-127.0.0.255     US;\n    10.1.0.0-10.1.255.255     RU;\n    192.168.1.0-192.168.1.255 UK;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_geoip_module.html",
      "name": "ngx_stream_geoip_module",
      "directives": [
        {
          "name": "geoip_country",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a database used to determine the country\ndepending on the client IP address.\nThe following variables are available when using this database:\n- `$geoip_country_code`\n\n    two-letter country code, for example,\n    “`RU`”, “`US`”.\n- `$geoip_country_code3`\n\n    three-letter country code, for example,\n    “`RUS`”, “`USA`”.\n- `$geoip_country_name`\n\n    country name, for example,\n    “`Russian Federation`”, “`United States`”.",
          "description_html": "\u003cp\u003eSpecifies a database used to determine the country\ndepending on the client IP address.\nThe following variables are available when using this database:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_country_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etwo-letter country code, for example,\n“\u003ccode\u003eRU\u003c/code\u003e”, “\u003ccode\u003eUS\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_country_code3\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethree-letter country code, for example,\n“\u003ccode\u003eRUS\u003c/code\u003e”, “\u003ccode\u003eUSA\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_country_name\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ecountry name, for example,\n“\u003ccode\u003eRussian Federation\u003c/code\u003e”, “\u003ccode\u003eUnited States\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "geoip_city",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a database used to determine the country, region, and city\ndepending on the client IP address.\nThe following variables are available when using this database:\n- `$geoip_area_code`\n\n    telephone area code (US only).\n    \u003e This variable may contain outdated information since\n    \u003e the corresponding database field is deprecated.\n- `$geoip_city_continent_code`\n\n    two-letter continent code, for example,\n    “`EU`”, “`NA`”.\n- `$geoip_city_country_code`\n\n    two-letter country code, for example,\n    “`RU`”, “`US`”.\n- `$geoip_city_country_code3`\n\n    three-letter country code, for example,\n    “`RUS`”, “`USA`”.\n- `$geoip_city_country_name`\n\n    country name, for example,\n    “`Russian Federation`”, “`United States`”.\n- `$geoip_dma_code`\n\n    DMA region code in US (also known as “metro code”), according to the\n    [geotargeting](https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions)\n    in Google AdWords API.\n- `$geoip_latitude`\n\n    latitude.\n- `$geoip_longitude`\n\n    longitude.\n- `$geoip_region`\n\n    two-symbol country region code (region, territory, state, province, federal land\n    and the like), for example,\n    “`48`”, “`DC`”.\n- `$geoip_region_name`\n\n    country region name (region, territory, state, province, federal land\n    and the like), for example,\n    “`Moscow City`”, “`District of Columbia`”.\n- `$geoip_city`\n\n    city name, for example,\n    “`Moscow`”, “`Washington`”.\n- `$geoip_postal_code`\n\n    postal code.",
          "description_html": "\u003cp\u003eSpecifies a database used to determine the country, region, and city\ndepending on the client IP address.\nThe following variables are available when using this database:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_area_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etelephone area code (US only).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis variable may contain outdated information since\nthe corresponding database field is deprecated.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_city_continent_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etwo-letter continent code, for example,\n“\u003ccode\u003eEU\u003c/code\u003e”, “\u003ccode\u003eNA\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_city_country_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etwo-letter country code, for example,\n“\u003ccode\u003eRU\u003c/code\u003e”, “\u003ccode\u003eUS\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_city_country_code3\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethree-letter country code, for example,\n“\u003ccode\u003eRUS\u003c/code\u003e”, “\u003ccode\u003eUSA\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_city_country_name\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ecountry name, for example,\n“\u003ccode\u003eRussian Federation\u003c/code\u003e”, “\u003ccode\u003eUnited States\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_dma_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eDMA region code in US (also known as “metro code”), according to the\n\u003ca href=\"https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions\" target=\"_blank\"\u003egeotargeting\u003c/a\u003e\nin Google AdWords API.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_latitude\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003elatitude.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_longitude\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003elongitude.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_region\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003etwo-symbol country region code (region, territory, state, province, federal land\nand the like), for example,\n“\u003ccode\u003e48\u003c/code\u003e”, “\u003ccode\u003eDC\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_region_name\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ecountry region name (region, territory, state, province, federal land\nand the like), for example,\n“\u003ccode\u003eMoscow City\u003c/code\u003e”, “\u003ccode\u003eDistrict of Columbia\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_city\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ecity name, for example,\n“\u003ccode\u003eMoscow\u003c/code\u003e”, “\u003ccode\u003eWashington\u003c/code\u003e”.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_postal_code\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003epostal code.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "geoip_org",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a database used to determine the organization\ndepending on the client IP address.\nThe following variable is available when using this database:\n- `$geoip_org`\n\n    organization name, for example, “The University of Melbourne”.",
          "description_html": "\u003cp\u003eSpecifies a database used to determine the organization\ndepending on the client IP address.\nThe following variable is available when using this database:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003e$geoip_org\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eorganization name, for example, “The University of Melbourne”.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_js_module.html",
      "name": "ngx_stream_js_module",
      "directives": [
        {
          "name": "js_access",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`function`* | *`module.function`*"
          ],
          "isBlock": false,
          "description_md": "Sets an njs function which will be called at the\n[access](https://nginx.org/en/docs/stream/stream_processing.html#access_phase) phase.\nSince [0.4.0](https://nginx.org/en/docs/njs/changes.html#njs0.4.0),\na module function can be referenced.\n\nThe function is called once at the moment when the stream session reaches\nthe [access](https://nginx.org/en/docs/stream/stream_processing.html#access_phase) phase\nfor the first time.\nThe function is called with the following arguments:\n\n- `s`\n\n    the [Stream Session](https://nginx.org/en/docs/njs/reference.html#stream) object\n\nAt this phase, it is possible to perform initialization\nor register a callback with\nthe [`s.on()`](https://nginx.org/en/docs/njs/reference.html#s_on)\nmethod\nfor each incoming data chunk until one of the following methods are called:\n[`s.allow()`](https://nginx.org/en/docs/njs/reference.html#s_allow),\n[`s.decline()`](https://nginx.org/en/docs/njs/reference.html#s_decline),\n[`s.done()`](https://nginx.org/en/docs/njs/reference.html#s_done).\nAs soon as one of these methods is called, the stream session processing\nswitches to the [next phase](https://nginx.org/en/docs/stream/stream_processing.html)\nand all current\n[`s.on()`](https://nginx.org/en/docs/njs/reference.html#s_on)\ncallbacks are dropped.",
          "description_html": "\u003cp\u003eSets an njs function which will be called at the\n\u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html#access_phase\" target=\"_blank\"\u003eaccess\u003c/a\u003e phase.\nSince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\" target=\"_blank\"\u003e0.4.0\u003c/a\u003e,\na module function can be referenced.\u003c/p\u003e\n\n\u003cp\u003eThe function is called once at the moment when the stream session reaches\nthe \u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html#access_phase\" target=\"_blank\"\u003eaccess\u003c/a\u003e phase\nfor the first time.\nThe function is called with the following arguments:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003es\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#stream\" target=\"_blank\"\u003eStream Session\u003c/a\u003e object\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAt this phase, it is possible to perform initialization\nor register a callback with\nthe \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_on\" target=\"_blank\"\u003e\u003ccode\u003es.on()\u003c/code\u003e\u003c/a\u003e\nmethod\nfor each incoming data chunk until one of the following methods are called:\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_allow\" target=\"_blank\"\u003e\u003ccode\u003es.allow()\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_decline\" target=\"_blank\"\u003e\u003ccode\u003es.decline()\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_done\" target=\"_blank\"\u003e\u003ccode\u003es.done()\u003c/code\u003e\u003c/a\u003e.\nAs soon as one of these methods is called, the stream session processing\nswitches to the \u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html\" target=\"_blank\"\u003enext phase\u003c/a\u003e\nand all current\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_on\" target=\"_blank\"\u003e\u003ccode\u003es.on()\u003c/code\u003e\u003c/a\u003e\ncallbacks are dropped.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_buffer_size",
          "default": "16k",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading and writing\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading and writing\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_ciphers",
          "default": "HIGH:!aNULL:!MD5",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`ciphers`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the enabled ciphers for HTTPS connections\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).\nThe ciphers are specified in the format understood by the OpenSSL library.\n\nThe full list can be viewed using the\n“`openssl ciphers`” command.",
          "description_html": "\u003cp\u003eSpecifies the enabled ciphers for HTTPS connections\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\nThe ciphers are specified in the format understood by the OpenSSL library.\u003c/p\u003e\n\n\u003cp\u003eThe full list can be viewed using the\n“\u003ccode\u003eopenssl ciphers\u003c/code\u003e” command.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_max_response_buffer_size",
          "default": "1m",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`size`* of the response received\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the response received\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_protocols",
          "default": "TLSv1 TLSv1.1 TLSv1.2",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "[`TLSv1`] [`TLSv1.1`] [`TLSv1.2`] [`TLSv1.3`]"
          ],
          "isBlock": false,
          "description_md": "Enables the specified protocols for HTTPS connections\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eEnables the specified protocols for HTTPS connections\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_timeout",
          "default": "60s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for reading and writing\nfor [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).\nThe timeout is set only between two successive read/write operations,\nnot for the whole response.\nIf no data is transmitted within this time, the connection is closed.",
          "description_html": "\u003cp\u003eDefines a timeout for reading and writing\nfor \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\nThe timeout is set only between two successive read/write operations,\nnot for the whole response.\nIf no data is transmitted within this time, the connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_trusted_certificate",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to\n[verify](https://nginx.org/en/docs/njs/reference.html#fetch_verify)\nthe HTTPS certificate\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#fetch_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe HTTPS certificate\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_verify",
          "default": "on",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables verification of the HTTPS server certificate\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eEnables or disables verification of the HTTPS server certificate\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_fetch_verify_depth",
          "default": "100",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the verification depth in the HTTPS server certificates chain\nwith [Fetch API](https://nginx.org/en/docs/njs/reference.html#ngx_fetch).",
          "description_html": "\u003cp\u003eSets the verification depth in the HTTPS server certificates chain\nwith \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003eFetch API\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "js_filter",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`function`* | *`module.function`*"
          ],
          "isBlock": false,
          "description_md": "Sets a data filter.\nSince [0.4.0](https://nginx.org/en/docs/njs/changes.html#njs0.4.0),\na module function can be referenced.\nThe filter function is called once at the moment when the stream session reaches\nthe [content](https://nginx.org/en/docs/stream/stream_processing.html#content_phase) phase.\n\nThe filter function is called with the following arguments:\n- `s`\n\n    the [Stream Session](https://nginx.org/en/docs/njs/reference.html#stream) object\n\nAt this phase, it is possible to perform initialization\nor register a callback with\nthe [`s.on()`](https://nginx.org/en/docs/njs/reference.html#s_on)\nmethod for each incoming data chunk.\nThe\n[`s.off()`](https://nginx.org/en/docs/njs/reference.html#s_off)\nmethod may be used to unregister a callback and stop filtering.\n\n\u003e As the `js_filter` handler\n\u003e returns its result immediately, it supports\n\u003e only synchronous operations.\n\u003e Thus, asynchronous operations such as\n\u003e [`ngx.fetch()`](https://nginx.org/en/docs/njs/reference.html#ngx_fetch)\n\u003e or\n\u003e [`setTimeout()`](https://nginx.org/en/docs/njs/reference.html#settimeout)\n\u003e are not supported.",
          "description_html": "\u003cp\u003eSets a data filter.\nSince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\" target=\"_blank\"\u003e0.4.0\u003c/a\u003e,\na module function can be referenced.\nThe filter function is called once at the moment when the stream session reaches\nthe \u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html#content_phase\" target=\"_blank\"\u003econtent\u003c/a\u003e phase.\u003c/p\u003e\n\n\u003cp\u003eThe filter function is called with the following arguments:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003es\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#stream\" target=\"_blank\"\u003eStream Session\u003c/a\u003e object\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAt this phase, it is possible to perform initialization\nor register a callback with\nthe \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_on\" target=\"_blank\"\u003e\u003ccode\u003es.on()\u003c/code\u003e\u003c/a\u003e\nmethod for each incoming data chunk.\nThe\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_off\" target=\"_blank\"\u003e\u003ccode\u003es.off()\u003c/code\u003e\u003c/a\u003e\nmethod may be used to unregister a callback and stop filtering.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs the \u003ccode\u003ejs_filter\u003c/code\u003e handler\nreturns its result immediately, it supports\nonly synchronous operations.\nThus, asynchronous operations such as\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003e\u003ccode\u003engx.fetch()\u003c/code\u003e\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\" target=\"_blank\"\u003e\u003ccode\u003esetTimeout()\u003c/code\u003e\u003c/a\u003e\nare not supported.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_import",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`module.js`* | *`export_name from module.js`*"
          ],
          "isBlock": false,
          "description_md": "Imports a module that implements location and variable handlers in njs.\nThe `export_name` is used as a namespace\nto access module functions.\nIf the `export_name` is not specified,\nthe module name will be used as a namespace.\n```\njs_import stream.js;\n```\nHere, the module name `stream` is used as a namespace\nwhile accessing exports.\nIf the imported module exports `foo()`,\n`stream.foo` is used to refer to it.\n\nSeveral `js_import` directives can be specified.\n\n\u003e The directive can be specified on the\n\u003e `server` level\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eImports a module that implements location and variable handlers in njs.\nThe \u003ccode\u003eexport_name\u003c/code\u003e is used as a namespace\nto access module functions.\nIf the \u003ccode\u003eexport_name\u003c/code\u003e is not specified,\nthe module name will be used as a namespace.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ejs_import stream.js;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere, the module name \u003ccode\u003estream\u003c/code\u003e is used as a namespace\nwhile accessing exports.\nIf the imported module exports \u003ccode\u003efoo()\u003c/code\u003e,\n\u003ccode\u003estream.foo\u003c/code\u003e is used to refer to it.\u003c/p\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003ejs_import\u003c/code\u003e directives can be specified.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive can be specified on the\n\u003ccode\u003eserver\u003c/code\u003e level\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_include",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a file that implements server and variable handlers in njs:\n```\nnginx.conf:\njs_include stream.js;\njs_set     $js_addr address;\nserver {\n    listen 127.0.0.1:12345;\n    return $js_addr;\n}\n\nstream.js:\nfunction address(s) {\n    return s.remoteAddress;\n}\n```\n\nThe directive was made obsolete in version\n[0.4.0](https://nginx.org/en/docs/njs/changes.html#njs0.4.0)\nand was removed in version\n[0.7.1](https://nginx.org/en/docs/njs/changes.html#njs0.7.1).\nThe [`js_import`](https://nginx.org/en/docs/stream/ngx_stream_js_module.html#js_import) directive should be used instead.",
          "description_html": "\u003cp\u003eSpecifies a file that implements server and variable handlers in njs:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003enginx.conf:\njs_include stream.js;\njs_set     $js_addr address;\nserver {\n    listen 127.0.0.1:12345;\n    return $js_addr;\n}\n\nstream.js:\nfunction address(s) {\n    return s.remoteAddress;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe directive was made obsolete in version\n\u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\" target=\"_blank\"\u003e0.4.0\u003c/a\u003e\nand was removed in version\n\u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.1\" target=\"_blank\"\u003e0.7.1\u003c/a\u003e.\nThe \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_js_module.html#js_import\" target=\"_blank\"\u003e\u003ccode\u003ejs_import\u003c/code\u003e\u003c/a\u003e directive should be used instead.\u003c/p\u003e\n"
        },
        {
          "name": "js_path",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`path`*"
          ],
          "isBlock": false,
          "description_md": "Sets an additional path for njs modules.\n\n\u003e The directive can be specified on the\n\u003e `server` level\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eSets an additional path for njs modules.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive can be specified on the\n\u003ccode\u003eserver\u003c/code\u003e level\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_preload_object",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`name.json`* | *`name`* from *`file.json`*"
          ],
          "isBlock": false,
          "description_md": "Preloads an immutable object at configure time.\nThe `name` is used a name of the global variable\nthough which the object is available in njs code.\nIf the `name` is not specified,\nthe file name will be used instead.\n```\njs_preload_object map.json;\n```\nHere, the `map` is used as a name\nwhile accessing the preloaded object.\n\nSeveral `js_preload_object` directives can be specified.",
          "description_html": "\u003cp\u003ePreloads an immutable object at configure time.\nThe \u003ccode\u003ename\u003c/code\u003e is used a name of the global variable\nthough which the object is available in njs code.\nIf the \u003ccode\u003ename\u003c/code\u003e is not specified,\nthe file name will be used instead.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ejs_preload_object map.json;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere, the \u003ccode\u003emap\u003c/code\u003e is used as a name\nwhile accessing the preloaded object.\u003c/p\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003ejs_preload_object\u003c/code\u003e directives can be specified.\u003c/p\u003e\n"
        },
        {
          "name": "js_preread",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`function`* | *`module.function`*"
          ],
          "isBlock": false,
          "description_md": "Sets an njs function which will be called at the\n[preread](https://nginx.org/en/docs/stream/stream_processing.html#preread_phase) phase.\nSince [0.4.0](https://nginx.org/en/docs/njs/changes.html#njs0.4.0),\na module function can be referenced.\n\nThe function is called once\nat the moment when the stream session reaches the\n[preread](https://nginx.org/en/docs/stream/stream_processing.html#preread_phase) phase\nfor the first time.\nThe function is called with the following arguments:\n\n- `s`\n\n    the [Stream Session](https://nginx.org/en/docs/njs/reference.html#stream) object\n\nAt this phase, it is possible to perform initialization\nor register a callback with\nthe [`s.on()`](https://nginx.org/en/docs/njs/reference.html#s_on)\nmethod\nfor each incoming data chunk until one of the following methods are called:\n[`s.allow()`](https://nginx.org/en/docs/njs/reference.html#s_allow),\n[`s.decline()`](https://nginx.org/en/docs/njs/reference.html#s_decline),\n[`s.done()`](https://nginx.org/en/docs/njs/reference.html#s_done).\nWhen one of these methods is called,\nthe stream session switches to the\n[next phase](https://nginx.org/en/docs/stream/stream_processing.html)\nand all current\n[`s.on()`](https://nginx.org/en/docs/njs/reference.html#s_on)\ncallbacks are dropped.\n\n\u003e As the `js_preread` handler\n\u003e returns its result immediately, it supports\n\u003e only synchronous callbacks.\n\u003e Thus, asynchronous callbacks such as\n\u003e [`ngx.fetch()`](https://nginx.org/en/docs/njs/reference.html#ngx_fetch)\n\u003e or\n\u003e [`setTimeout()`](https://nginx.org/en/docs/njs/reference.html#settimeout)\n\u003e are not supported.\n\u003e Nevertheless, asynchronous operations are supported in\n\u003e [`s.on()`](https://nginx.org/en/docs/njs/reference.html#s_on)\n\u003e callbacks in the\n\u003e [preread](https://nginx.org/en/docs/stream/stream_processing.html#preread_phase) phase.\n\u003e See\n\u003e [this example](https://github.com/nginx/njs-examples#authorizing-connections-using-ngx-fetch-as-auth-request-stream-auth-request) for more information.",
          "description_html": "\u003cp\u003eSets an njs function which will be called at the\n\u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\" target=\"_blank\"\u003epreread\u003c/a\u003e phase.\nSince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\" target=\"_blank\"\u003e0.4.0\u003c/a\u003e,\na module function can be referenced.\u003c/p\u003e\n\n\u003cp\u003eThe function is called once\nat the moment when the stream session reaches the\n\u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\" target=\"_blank\"\u003epreread\u003c/a\u003e phase\nfor the first time.\nThe function is called with the following arguments:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003es\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#stream\" target=\"_blank\"\u003eStream Session\u003c/a\u003e object\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAt this phase, it is possible to perform initialization\nor register a callback with\nthe \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_on\" target=\"_blank\"\u003e\u003ccode\u003es.on()\u003c/code\u003e\u003c/a\u003e\nmethod\nfor each incoming data chunk until one of the following methods are called:\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_allow\" target=\"_blank\"\u003e\u003ccode\u003es.allow()\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_decline\" target=\"_blank\"\u003e\u003ccode\u003es.decline()\u003c/code\u003e\u003c/a\u003e,\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_done\" target=\"_blank\"\u003e\u003ccode\u003es.done()\u003c/code\u003e\u003c/a\u003e.\nWhen one of these methods is called,\nthe stream session switches to the\n\u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html\" target=\"_blank\"\u003enext phase\u003c/a\u003e\nand all current\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_on\" target=\"_blank\"\u003e\u003ccode\u003es.on()\u003c/code\u003e\u003c/a\u003e\ncallbacks are dropped.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs the \u003ccode\u003ejs_preread\u003c/code\u003e handler\nreturns its result immediately, it supports\nonly synchronous callbacks.\nThus, asynchronous callbacks such as\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003e\u003ccode\u003engx.fetch()\u003c/code\u003e\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\" target=\"_blank\"\u003e\u003ccode\u003esetTimeout()\u003c/code\u003e\u003c/a\u003e\nare not supported.\nNevertheless, asynchronous operations are supported in\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#s_on\" target=\"_blank\"\u003e\u003ccode\u003es.on()\u003c/code\u003e\u003c/a\u003e\ncallbacks in the\n\u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\" target=\"_blank\"\u003epreread\u003c/a\u003e phase.\nSee\n\u003ca href=\"https://github.com/nginx/njs-examples#authorizing-connections-using-ngx-fetch-as-auth-request-stream-auth-request\" target=\"_blank\"\u003ethis example\u003c/a\u003e for more information.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_set",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`$variable`* *`function`* | *`module.function`*"
          ],
          "isBlock": false,
          "description_md": "Sets an njs `function`\nfor the specified `variable`.\nSince [0.4.0](https://nginx.org/en/docs/njs/changes.html#njs0.4.0),\na module function can be referenced.\n\nThe function is called when\nthe variable is referenced for the first time for a given request.\nThe exact moment depends on a\n[phase](https://nginx.org/en/docs/stream/stream_processing.html)\nat which the variable is referenced.\nThis can be used to perform some logic\nnot related to variable evaluation.\nFor example, if the variable is referenced only in the\n[`log_format`](https://nginx.org/en/docs/stream/ngx_stream_log_module.html#log_format) directive,\nits handler will not be executed until the log phase.\nThis handler can be used to do some cleanup\nright before the request is freed.\n\n\u003e As the `js_set` handler\n\u003e returns its result immediately, it supports\n\u003e only synchronous callbacks.\n\u003e Thus, asynchronous callbacks such as\n\u003e [ngx.fetch()](https://nginx.org/en/docs/njs/reference.html#ngx_fetch)\n\u003e or\n\u003e [setTimeout()](https://nginx.org/en/docs/njs/reference.html#settimeout)\n\u003e are not supported.\n\n\u003e The directive can be specified on the\n\u003e `server` level\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eSets an njs \u003ccode\u003efunction\u003c/code\u003e\nfor the specified \u003ccode\u003evariable\u003c/code\u003e.\nSince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.4.0\" target=\"_blank\"\u003e0.4.0\u003c/a\u003e,\na module function can be referenced.\u003c/p\u003e\n\n\u003cp\u003eThe function is called when\nthe variable is referenced for the first time for a given request.\nThe exact moment depends on a\n\u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html\" target=\"_blank\"\u003ephase\u003c/a\u003e\nat which the variable is referenced.\nThis can be used to perform some logic\nnot related to variable evaluation.\nFor example, if the variable is referenced only in the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_log_module.html#log_format\" target=\"_blank\"\u003e\u003ccode\u003elog_format\u003c/code\u003e\u003c/a\u003e directive,\nits handler will not be executed until the log phase.\nThis handler can be used to do some cleanup\nright before the request is freed.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAs the \u003ccode\u003ejs_set\u003c/code\u003e handler\nreturns its result immediately, it supports\nonly synchronous callbacks.\nThus, asynchronous callbacks such as\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#ngx_fetch\" target=\"_blank\"\u003engx.fetch()\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/njs/reference.html#settimeout\" target=\"_blank\"\u003esetTimeout()\u003c/a\u003e\nare not supported.\u003c/p\u003e\n\n\u003cp\u003eThe directive can be specified on the\n\u003ccode\u003eserver\u003c/code\u003e level\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "js_shared_dict_zone",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "`zone`=*`name`*:*`size`* [`timeout`=*`time`*] [`type`=`string`|`number`] [`evict`]"
          ],
          "isBlock": false,
          "description_md": "Sets the *`name`* and *`size`* of the shared memory zone\nthat keeps the key-value dictionary\nshared between worker processes.\n\nBy default the shared dictionary uses a string as a key and a value.\nThe optional `type` parameter\nallows redefining the value type to number.\n\nThe optional `timeout` parameter sets\nthe time after which all shared dictionary entries are removed from the zone.\n\nThe optional `evict` parameter removes the oldest\nkey-value pair when the zone storage is exhausted.\n\nExamples:\n```\nexample.conf:\n    # Creates a 1Mb dictionary with string values,\n    # removes key-value pairs after 60 seconds of inactivity:\n    js_shared_dict_zone zone=foo:1M timeout=60s;\n\n    # Creates a 512Kb dictionary with string values,\n    # forcibly removes oldest key-value pairs when the zone is exhausted:\n    js_shared_dict_zone zone=bar:512K timeout=30s evict;\n\n    # Creates a 32Kb permanent dictionary with number values:\n    js_shared_dict_zone zone=num:32k type=number;\n\nexample.js:\n    function get(r) {\n        r.return(200, ngx.shared.foo.get(r.args.key));\n    }\n\n    function set(r) {\n        r.return(200, ngx.shared.foo.set(r.args.key, r.args.value));\n    }\n\n    function delete(r) {\n        r.return(200, ngx.shared.bar.delete(r.args.key));\n    }\n\n    function increment(r) {\n        r.return(200, ngx.shared.num.incr(r.args.key, 2));\n    }\n```",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the shared memory zone\nthat keeps the key-value dictionary\nshared between worker processes.\u003c/p\u003e\n\n\u003cp\u003eBy default the shared dictionary uses a string as a key and a value.\nThe optional \u003ccode\u003etype\u003c/code\u003e parameter\nallows redefining the value type to number.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003etimeout\u003c/code\u003e parameter sets\nthe time after which all shared dictionary entries are removed from the zone.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003eevict\u003c/code\u003e parameter removes the oldest\nkey-value pair when the zone storage is exhausted.\u003c/p\u003e\n\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eexample.conf:\n    # Creates a 1Mb dictionary with string values,\n    # removes key-value pairs after 60 seconds of inactivity:\n    js_shared_dict_zone zone=foo:1M timeout=60s;\n\n    # Creates a 512Kb dictionary with string values,\n    # forcibly removes oldest key-value pairs when the zone is exhausted:\n    js_shared_dict_zone zone=bar:512K timeout=30s evict;\n\n    # Creates a 32Kb permanent dictionary with number values:\n    js_shared_dict_zone zone=num:32k type=number;\n\nexample.js:\n    function get(r) {\n        r.return(200, ngx.shared.foo.get(r.args.key));\n    }\n\n    function set(r) {\n        r.return(200, ngx.shared.foo.set(r.args.key, r.args.value));\n    }\n\n    function delete(r) {\n        r.return(200, ngx.shared.bar.delete(r.args.key));\n    }\n\n    function increment(r) {\n        r.return(200, ngx.shared.num.incr(r.args.key, 2));\n    }\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "js_var",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`$variable`* [*`value`*]"
          ],
          "isBlock": false,
          "description_md": "Declares\na [writable](https://nginx.org/en/docs/njs/reference.html#r_variables)\nvariable.\nThe value can contain text, variables, and their combination.\n\n\u003e The directive can be specified on the\n\u003e `server` level\n\u003e since [0.7.7](https://nginx.org/en/docs/njs/changes.html#njs0.7.7).",
          "description_html": "\u003cp\u003eDeclares\na \u003ca href=\"https://nginx.org/en/docs/njs/reference.html#r_variables\" target=\"_blank\"\u003ewritable\u003c/a\u003e\nvariable.\nThe value can contain text, variables, and their combination.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive can be specified on the\n\u003ccode\u003eserver\u003c/code\u003e level\nsince \u003ca href=\"https://nginx.org/en/docs/njs/changes.html#njs0.7.7\" target=\"_blank\"\u003e0.7.7\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_keyval_module.html",
      "name": "ngx_stream_keyval_module",
      "directives": [
        {
          "name": "keyval",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`key`* *`$variable`* `zone`=*`name`*"
          ],
          "isBlock": false,
          "description_md": "Creates a new *`$variable`* whose value\nis looked up by the *`key`* in the key-value database.\nMatching rules are defined by the\n[`type`](https://nginx.org/en/docs/stream/ngx_stream_keyval_module.html#keyval_type) parameter of the\n[`keyval_zone`](https://nginx.org/en/docs/stream/ngx_stream_keyval_module.html#keyval_zone) directive.\nThe database is stored in a shared memory zone\nspecified by the `zone` parameter.",
          "description_html": "\u003cp\u003eCreates a new \u003cem\u003e\u003ccode\u003e$variable\u003c/code\u003e\u003c/em\u003e whose value\nis looked up by the \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e in the key-value database.\nMatching rules are defined by the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_keyval_module.html#keyval_type\" target=\"_blank\"\u003e\u003ccode\u003etype\u003c/code\u003e\u003c/a\u003e parameter of the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_keyval_module.html#keyval_zone\" target=\"_blank\"\u003e\u003ccode\u003ekeyval_zone\u003c/code\u003e\u003c/a\u003e directive.\nThe database is stored in a shared memory zone\nspecified by the \u003ccode\u003ezone\u003c/code\u003e parameter.\u003c/p\u003e\n"
        },
        {
          "name": "keyval_zone",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "`zone`=*`name`*:*`size`* [`state`=*`file`*] [`timeout`=*`time`*] [`type`=`string`|`ip`|`prefix`] [`sync`]"
          ],
          "isBlock": false,
          "description_md": "Sets the *`name`* and *`size`* of the shared memory zone\nthat keeps the key-value database.\nKey-value pairs are managed by the\n[API](https://nginx.org/en/docs/http/ngx_http_api_module.html#stream_keyvals_).\n\nThe optional `state` parameter specifies a *`file`*\nthat keeps the current state of the key-value database in the JSON format\nand makes it persistent across nginx restarts.\nChanging the file content directly should be avoided.\n\nExamples:\n```\nkeyval_zone zone=one:32k state=/var/lib/nginx/state/one.keyval; # path for Linux\nkeyval_zone zone=one:32k state=/var/db/nginx/state/one.keyval;  # path for FreeBSD\n```\n\nThe optional `timeout` parameter (1.15.0) sets\nthe time after which key-value pairs are removed from the zone.\n\nThe optional `type` parameter (1.17.1) activates\nan extra index optimized for matching the key of a certain type\nand defines matching rules when evaluating\na [keyval](https://nginx.org/en/docs/stream/ngx_stream_keyval_module.html#keyval) `$variable`.\n\u003e The index is stored in the same shared memory zone\n\u003e and thus requires additional storage.\n\n\n- `type=string`\n\n    default, no index is enabled;\n    variable lookup is performed using exact match\n    of the record key and a search key\n- `type=ip`\n\n    the search key is the textual representation of IPv4 or IPv6 address\n    or CIDR range;\n    to match a record key, the search key must belong to a subnet\n    specified by a record key or exactly match an IP address\n- `type=prefix`\n\n    variable lookup is performed using prefix match\n    of a record key and a search key (1.17.5);\n    to match a record key, the record key must be a prefix of the search key\n\nThe optional `sync` parameter (1.15.0) enables\n[synchronization](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync)\nof the shared memory zone.\nThe synchronization requires the\n`timeout` parameter to be set.\n\u003e If the synchronization is enabled, removal of key-value pairs (no matter\n\u003e [one](https://nginx.org/en/docs/http/ngx_http_api_module.html#patchStreamKeyvalZoneKeyValue)\n\u003e or\n\u003e [all](https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteStreamKeyvalZoneData))\n\u003e will be performed only on a target cluster node.\n\u003e The same key-value pairs on other cluster nodes\n\u003e will be removed upon `timeout`.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the shared memory zone\nthat keeps the key-value database.\nKey-value pairs are managed by the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#stream_keyvals_\" target=\"_blank\"\u003eAPI\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003estate\u003c/code\u003e parameter specifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e\nthat keeps the current state of the key-value database in the JSON format\nand makes it persistent across nginx restarts.\nChanging the file content directly should be avoided.\u003c/p\u003e\n\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ekeyval_zone zone=one:32k state=/var/lib/nginx/state/one.keyval; # path for Linux\nkeyval_zone zone=one:32k state=/var/db/nginx/state/one.keyval;  # path for FreeBSD\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003etimeout\u003c/code\u003e parameter (1.15.0) sets\nthe time after which key-value pairs are removed from the zone.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003etype\u003c/code\u003e parameter (1.17.1) activates\nan extra index optimized for matching the key of a certain type\nand defines matching rules when evaluating\na \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_keyval_module.html#keyval\" target=\"_blank\"\u003ekeyval\u003c/a\u003e \u003ccode\u003e$variable\u003c/code\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe index is stored in the same shared memory zone\nand thus requires additional storage.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etype=string\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edefault, no index is enabled;\nvariable lookup is performed using exact match\nof the record key and a search key\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etype=ip\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe search key is the textual representation of IPv4 or IPv6 address\nor CIDR range;\nto match a record key, the search key must belong to a subnet\nspecified by a record key or exactly match an IP address\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003etype=prefix\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003evariable lookup is performed using prefix match\nof a record key and a search key (1.17.5);\nto match a record key, the record key must be a prefix of the search key\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003esync\u003c/code\u003e parameter (1.15.0) enables\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync\" target=\"_blank\"\u003esynchronization\u003c/a\u003e\nof the shared memory zone.\nThe synchronization requires the\n\u003ccode\u003etimeout\u003c/code\u003e parameter to be set.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf the synchronization is enabled, removal of key-value pairs (no matter\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#patchStreamKeyvalZoneKeyValue\" target=\"_blank\"\u003eone\u003c/a\u003e\nor\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteStreamKeyvalZoneData\" target=\"_blank\"\u003eall\u003c/a\u003e)\nwill be performed only on a target cluster node.\nThe same key-value pairs on other cluster nodes\nwill be removed upon \u003ccode\u003etimeout\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_limit_conn_module.html",
      "name": "ngx_stream_limit_conn_module",
      "directives": [
        {
          "name": "limit_conn",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`zone`* *`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the shared memory zone\nand the maximum allowed number of connections for a given key value.\nWhen this limit is exceeded, the server will close the connection.\nFor example, the directives\n```\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n\nserver {\n    ...\n    limit_conn addr 1;\n}\n```\nallow only one connection per an IP address at a time.\n\nWhen several `limit_conn` directives are specified,\nany configured limit will apply.\n\nThese directives are inherited from the previous configuration level\nif and only if there are no `limit_conn` directives\ndefined on the current level.",
          "description_html": "\u003cp\u003eSets the shared memory zone\nand the maximum allowed number of connections for a given key value.\nWhen this limit is exceeded, the server will close the connection.\nFor example, the directives\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elimit_conn_zone $binary_remote_addr zone=addr:10m;\n\nserver {\n    ...\n    limit_conn addr 1;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eallow only one connection per an IP address at a time.\u003c/p\u003e\n\n\u003cp\u003eWhen several \u003ccode\u003elimit_conn\u003c/code\u003e directives are specified,\nany configured limit will apply.\u003c/p\u003e\n\n\u003cp\u003eThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003elimit_conn\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n"
        },
        {
          "name": "limit_conn_dry_run",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the dry run mode.\nIn this mode, the number of connections is not limited, however,\nin the shared memory zone, the number of excessive connections is accounted\nas usual.",
          "description_html": "\u003cp\u003eEnables the dry run mode.\nIn this mode, the number of connections is not limited, however,\nin the shared memory zone, the number of excessive connections is accounted\nas usual.\u003c/p\u003e\n"
        },
        {
          "name": "limit_conn_log_level",
          "default": "error",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`info` | `notice` | `warn` | `error`"
          ],
          "isBlock": false,
          "description_md": "Sets the desired logging level for cases when the server\nlimits the number of connections.",
          "description_html": "\u003cp\u003eSets the desired logging level for cases when the server\nlimits the number of connections.\u003c/p\u003e\n"
        },
        {
          "name": "limit_conn_zone",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`key`* `zone`=*`name`*:*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets parameters for a shared memory zone\nthat will keep states for various keys.\nIn particular, the state includes the current number of connections.\nThe *`key`* can contain text, variables,\nand their combinations (1.11.2).\nConnections with an empty key value are not accounted.\nUsage example:\n```\nlimit_conn_zone $binary_remote_addr zone=addr:10m;\n```\nHere, the key is a client IP address set by the\n`$binary_remote_addr` variable.\nThe size of `$binary_remote_addr`\nis 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses.\nThe stored state always occupies 32 or 64 bytes\non 32-bit platforms and 64 bytes on 64-bit platforms.\nOne megabyte zone can keep about 32 thousand 32-byte states\nor about 16 thousand 64-byte states.\nIf the zone storage is exhausted, the server will close the connection.\n\n\u003e Additionally, as part of our\n\u003e [commercial subscription](https://nginx.com/products/),\n\u003e the\n\u003e [status information](https://nginx.org/en/docs/http/ngx_http_api_module.html#stream_limit_conns_)\n\u003e for each such shared memory zone can be\n\u003e [obtained](https://nginx.org/en/docs/http/ngx_http_api_module.html#getStreamLimitConnZone) or\n\u003e [reset](https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteStreamLimitConnZoneStat)\n\u003e with the [API](https://nginx.org/en/docs/http/ngx_http_api_module.html) since 1.17.7.",
          "description_html": "\u003cp\u003eSets parameters for a shared memory zone\nthat will keep states for various keys.\nIn particular, the state includes the current number of connections.\nThe \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e can contain text, variables,\nand their combinations (1.11.2).\nConnections with an empty key value are not accounted.\nUsage example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elimit_conn_zone $binary_remote_addr zone=addr:10m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHere, the key is a client IP address set by the\n\u003ccode\u003e$binary_remote_addr\u003c/code\u003e variable.\nThe size of \u003ccode\u003e$binary_remote_addr\u003c/code\u003e\nis 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses.\nThe stored state always occupies 32 or 64 bytes\non 32-bit platforms and 64 bytes on 64-bit platforms.\nOne megabyte zone can keep about 32 thousand 32-byte states\nor about 16 thousand 64-byte states.\nIf the zone storage is exhausted, the server will close the connection.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eAdditionally, as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e,\nthe\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#stream_limit_conns_\" target=\"_blank\"\u003estatus information\u003c/a\u003e\nfor each such shared memory zone can be\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#getStreamLimitConnZone\" target=\"_blank\"\u003eobtained\u003c/a\u003e or\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteStreamLimitConnZoneStat\" target=\"_blank\"\u003ereset\u003c/a\u003e\nwith the \u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\" target=\"_blank\"\u003eAPI\u003c/a\u003e since 1.17.7.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_log_module.html",
      "name": "ngx_stream_log_module",
      "directives": [
        {
          "name": "access_log",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`path`* *`format`* [`buffer`=*`size`*] [`gzip[=]`] [`flush`=*`time`*] [`if`=*`condition`*]",
            "`off`"
          ],
          "isBlock": false,
          "description_md": "Sets the path, [format](https://nginx.org/en/docs/stream/ngx_stream_log_module.html#log_format),\nand configuration for a buffered log write.\nSeveral logs can be specified on the same configuration level.\nLogging to [syslog](https://nginx.org/en/docs/syslog.html)\ncan be configured by specifying\nthe “`syslog:`” prefix in the first parameter.\nThe special value `off` cancels all\n`access_log` directives on the current level.\n\nIf either the `buffer` or `gzip`\nparameter is used, writes to log will be buffered.\n\u003e The buffer size must not exceed the size of an atomic write to a disk file.\n\u003e For FreeBSD this size is unlimited.\n\nWhen buffering is enabled, the data will be written to the file:\n- if the next log line does not fit into the buffer;\n- if the buffered data is older than specified by the `flush`\n    parameter;\n- when a worker process is [re-opening](https://nginx.org/en/docs/control.html) log\n    files or is shutting down.\n\nIf the `gzip` parameter is used, then the buffered data will\nbe compressed before writing to the file.\nThe compression level can be set between 1 (fastest, less compression)\nand 9 (slowest, best compression).\nBy default, the buffer size is equal to 64K bytes, and the compression level\nis set to 1.\nSince the data is compressed in atomic blocks, the log file can be decompressed\nor read by “`zcat`” at any time.\n\nExample:\n```\naccess_log /path/to/log.gz basic gzip flush=5m;\n```\n\n\u003e For gzip compression to work, nginx must be built with the zlib library.\n\nThe file path can contain variables,\nbut such logs have some constraints:\n- the [`user`](https://nginx.org/en/docs/ngx_core_module.html#user)\n    whose credentials are used by worker processes should\n    have permissions to create files in a directory with\n    such logs;\n- buffered writes do not work;\n- the file is opened and closed for each log write.\n    However, since the descriptors of frequently used files can be stored\n    in a [cache](https://nginx.org/en/docs/stream/ngx_stream_log_module.html#open_log_file_cache), writing to the old file\n    can continue during the time specified by the [`open_log_file_cache`](https://nginx.org/en/docs/stream/ngx_stream_log_module.html#open_log_file_cache)\n    directive’s `valid` parameter\n\nThe `if` parameter enables conditional logging.\nA session will not be logged if the *`condition`* evaluates to “0”\nor an empty string.",
          "description_html": "\u003cp\u003eSets the path, \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_log_module.html#log_format\" target=\"_blank\"\u003eformat\u003c/a\u003e,\nand configuration for a buffered log write.\nSeveral logs can be specified on the same configuration level.\nLogging to \u003ca href=\"https://nginx.org/en/docs/syslog.html\" target=\"_blank\"\u003esyslog\u003c/a\u003e\ncan be configured by specifying\nthe “\u003ccode\u003esyslog:\u003c/code\u003e” prefix in the first parameter.\nThe special value \u003ccode\u003eoff\u003c/code\u003e cancels all\n\u003ccode\u003eaccess_log\u003c/code\u003e directives on the current level.\u003c/p\u003e\n\n\u003cp\u003eIf either the \u003ccode\u003ebuffer\u003c/code\u003e or \u003ccode\u003egzip\u003c/code\u003e\nparameter is used, writes to log will be buffered.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe buffer size must not exceed the size of an atomic write to a disk file.\nFor FreeBSD this size is unlimited.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eWhen buffering is enabled, the data will be written to the file:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eif the next log line does not fit into the buffer;\u003c/li\u003e\n\u003cli\u003eif the buffered data is older than specified by the \u003ccode\u003eflush\u003c/code\u003e\nparameter;\u003c/li\u003e\n\u003cli\u003ewhen a worker process is \u003ca href=\"https://nginx.org/en/docs/control.html\" target=\"_blank\"\u003ere-opening\u003c/a\u003e log\nfiles or is shutting down.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf the \u003ccode\u003egzip\u003c/code\u003e parameter is used, then the buffered data will\nbe compressed before writing to the file.\nThe compression level can be set between 1 (fastest, less compression)\nand 9 (slowest, best compression).\nBy default, the buffer size is equal to 64K bytes, and the compression level\nis set to 1.\nSince the data is compressed in atomic blocks, the log file can be decompressed\nor read by “\u003ccode\u003ezcat\u003c/code\u003e” at any time.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eaccess_log /path/to/log.gz basic gzip flush=5m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eFor gzip compression to work, nginx must be built with the zlib library.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe file path can contain variables,\nbut such logs have some constraints:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe \u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#user\" target=\"_blank\"\u003e\u003ccode\u003euser\u003c/code\u003e\u003c/a\u003e\nwhose credentials are used by worker processes should\nhave permissions to create files in a directory with\nsuch logs;\u003c/li\u003e\n\u003cli\u003ebuffered writes do not work;\u003c/li\u003e\n\u003cli\u003ethe file is opened and closed for each log write.\nHowever, since the descriptors of frequently used files can be stored\nin a \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_log_module.html#open_log_file_cache\" target=\"_blank\"\u003ecache\u003c/a\u003e, writing to the old file\ncan continue during the time specified by the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_log_module.html#open_log_file_cache\" target=\"_blank\"\u003e\u003ccode\u003eopen_log_file_cache\u003c/code\u003e\u003c/a\u003e\ndirective’s \u003ccode\u003evalid\u003c/code\u003e parameter\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eThe \u003ccode\u003eif\u003c/code\u003e parameter enables conditional logging.\nA session will not be logged if the \u003cem\u003e\u003ccode\u003econdition\u003c/code\u003e\u003c/em\u003e evaluates to “0”\nor an empty string.\u003c/p\u003e\n"
        },
        {
          "name": "log_format",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`name`* [`escape`=`default`|`json`|`none`] *`string`* ..."
          ],
          "isBlock": false,
          "description_md": "Specifies the log format, for example:\n```\nlog_format proxy '$remote_addr [$time_local] '\n                 '$protocol $status $bytes_sent $bytes_received '\n                 '$session_time \"$upstream_addr\" '\n                 '\"$upstream_bytes_sent\" \"$upstream_bytes_received\" \"$upstream_connect_time\"';\n```\n\nThe `escape` parameter (1.11.8) allows setting\n`json` or `default` characters escaping\nin variables, by default, `default` escaping is used.\nThe `none` parameter (1.13.10) disables escaping.\n\nFor `default` escaping,\ncharacters “`\"`”, “`\\`”,\nand other characters with values less than 32 or above 126\nare escaped as “`\\xXX`”.\nIf the variable value is not found,\na hyphen (“`-`”) will be logged.\n\nFor `json` escaping,\nall characters not allowed\nin JSON [strings](https://datatracker.ietf.org/doc/html/rfc8259#section-7)\nwill be escaped:\ncharacters “`\"`” and\n“`\\`” are escaped as\n“`\\\"`” and “`\\\\`”,\ncharacters with values less than 32 are escaped as\n“`\\n`”,\n“`\\r`”,\n“`\\t`”,\n“`\\b`”,\n“`\\f`”, or\n“`\\u00XX`”.",
          "description_html": "\u003cp\u003eSpecifies the log format, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003elog_format proxy '$remote_addr [$time_local] '\n                 '$protocol $status $bytes_sent $bytes_received '\n                 '$session_time \u0026quot;$upstream_addr\u0026quot; '\n                 '\u0026quot;$upstream_bytes_sent\u0026quot; \u0026quot;$upstream_bytes_received\u0026quot; \u0026quot;$upstream_connect_time\u0026quot;';\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003ccode\u003eescape\u003c/code\u003e parameter (1.11.8) allows setting\n\u003ccode\u003ejson\u003c/code\u003e or \u003ccode\u003edefault\u003c/code\u003e characters escaping\nin variables, by default, \u003ccode\u003edefault\u003c/code\u003e escaping is used.\nThe \u003ccode\u003enone\u003c/code\u003e parameter (1.13.10) disables escaping.\u003c/p\u003e\n\n\u003cp\u003eFor \u003ccode\u003edefault\u003c/code\u003e escaping,\ncharacters “\u003ccode\u003e\u0026quot;\u003c/code\u003e”, “\u003ccode\u003e\\\u003c/code\u003e”,\nand other characters with values less than 32 or above 126\nare escaped as “\u003ccode\u003e\\xXX\u003c/code\u003e”.\nIf the variable value is not found,\na hyphen (“\u003ccode\u003e-\u003c/code\u003e”) will be logged.\u003c/p\u003e\n\n\u003cp\u003eFor \u003ccode\u003ejson\u003c/code\u003e escaping,\nall characters not allowed\nin JSON \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc8259#section-7\" target=\"_blank\"\u003estrings\u003c/a\u003e\nwill be escaped:\ncharacters “\u003ccode\u003e\u0026quot;\u003c/code\u003e” and\n“\u003ccode\u003e\\\u003c/code\u003e” are escaped as\n“\u003ccode\u003e\\\u0026quot;\u003c/code\u003e” and “\u003ccode\u003e\\\\\u003c/code\u003e”,\ncharacters with values less than 32 are escaped as\n“\u003ccode\u003e\\n\u003c/code\u003e”,\n“\u003ccode\u003e\\r\u003c/code\u003e”,\n“\u003ccode\u003e\\t\u003c/code\u003e”,\n“\u003ccode\u003e\\b\u003c/code\u003e”,\n“\u003ccode\u003e\\f\u003c/code\u003e”, or\n“\u003ccode\u003e\\u00XX\u003c/code\u003e”.\u003c/p\u003e\n"
        },
        {
          "name": "open_log_file_cache",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`max`=*`N`* [`inactive`=*`time`*] [`min_uses`=*`N`*] [`valid`=*`time`*]",
            "`off`"
          ],
          "isBlock": false,
          "description_md": "Defines a cache that stores the file descriptors of frequently used logs\nwhose names contain variables.\nThe directive has the following parameters:\n- `max`\n\n    sets the maximum number of descriptors in a cache;\n    if the cache becomes full the least recently used (LRU)\n    descriptors are closed\n- `inactive`\n\n    sets the time after which the cached descriptor is closed\n    if there were no access during this time;\n    by default, 10 seconds\n- `min_uses`\n\n    sets the minimum number of file uses during the time\n    defined by the `inactive` parameter\n    to let the descriptor stay open in a cache;\n    by default, 1\n- `valid`\n\n    sets the time after which it should be checked that the file\n    still exists with the same name; by default, 60 seconds\n- `off`\n\n    disables caching\n\nUsage example:\n```\nopen_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;\n```",
          "description_html": "\u003cp\u003eDefines a cache that stores the file descriptors of frequently used logs\nwhose names contain variables.\nThe directive has the following parameters:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emax\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esets the maximum number of descriptors in a cache;\nif the cache becomes full the least recently used (LRU)\ndescriptors are closed\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einactive\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esets the time after which the cached descriptor is closed\nif there were no access during this time;\nby default, 10 seconds\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emin_uses\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esets the minimum number of file uses during the time\ndefined by the \u003ccode\u003einactive\u003c/code\u003e parameter\nto let the descriptor stay open in a cache;\nby default, 1\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003evalid\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003esets the time after which it should be checked that the file\nstill exists with the same name; by default, 60 seconds\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003edisables caching\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eUsage example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eopen_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_map_module.html",
      "name": "ngx_stream_map_module",
      "directives": [
        {
          "name": "map",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`string`* *`$variable`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Creates a new variable whose value\ndepends on values of one or more of the source variables\nspecified in the first parameter.\n\n\u003e Since variables are evaluated only when they are used, the mere declaration\n\u003e even of a large number of “`map`” variables\n\u003e does not add any extra costs to connection processing.\n\nParameters inside the `map` block specify a mapping\nbetween source and resulting values.\n\nSource values are specified as strings or regular expressions.\n\nStrings are matched ignoring the case.\n\nA regular expression should either start from the “`~`”\nsymbol for a case-sensitive matching, or from the “`~*`”\nsymbols for case-insensitive matching.\nA regular expression can contain named and positional captures\nthat can later be used in other directives along with the\nresulting variable.\n\nIf a source value matches one of the names of special parameters\ndescribed below, it should be prefixed with the “`\\`” symbol.\n\nThe resulting value can contain text,\nvariable, and their combination.\n\nThe following special parameters are also supported:\n- `default` *`value`*\n\n    sets the resulting value if the source value matches none\n    of the specified variants.\n    When `default` is not specified, the default\n    resulting value will be an empty string.\n- `hostnames`\n\n    indicates that source values can be hostnames with a prefix or suffix mask:\n    ```\n    *.example.com 1;\n    example.*     1;\n    ```\n    The following two records\n    ```\n    example.com   1;\n    *.example.com 1;\n    ```\n    can be combined:\n    ```\n    .example.com  1;\n    ```\n    This parameter should be specified before the list of values.\n- `include` *`file`*\n\n    includes a file with values.\n    There can be several inclusions.\n- `volatile`\n\n    indicates that the variable is not cacheable (1.11.7).\n\nIf the source value matches more than one of the specified variants,\ne.g. both a mask and a regular expression match, the first matching\nvariant will be chosen, in the following order of priority:\n1. string value without a mask\n2. longest string value with a prefix mask,\n    e.g. “`*.example.com`”\n3. longest string value with a suffix mask,\n    e.g. “`mail.*`”\n4. first matching regular expression\n    (in order of appearance in a configuration file)\n5. default value",
          "description_html": "\u003cp\u003eCreates a new variable whose value\ndepends on values of one or more of the source variables\nspecified in the first parameter.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eSince variables are evaluated only when they are used, the mere declaration\neven of a large number of “\u003ccode\u003emap\u003c/code\u003e” variables\ndoes not add any extra costs to connection processing.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eParameters inside the \u003ccode\u003emap\u003c/code\u003e block specify a mapping\nbetween source and resulting values.\u003c/p\u003e\n\n\u003cp\u003eSource values are specified as strings or regular expressions.\u003c/p\u003e\n\n\u003cp\u003eStrings are matched ignoring the case.\u003c/p\u003e\n\n\u003cp\u003eA regular expression should either start from the “\u003ccode\u003e~\u003c/code\u003e”\nsymbol for a case-sensitive matching, or from the “\u003ccode\u003e~*\u003c/code\u003e”\nsymbols for case-insensitive matching.\nA regular expression can contain named and positional captures\nthat can later be used in other directives along with the\nresulting variable.\u003c/p\u003e\n\n\u003cp\u003eIf a source value matches one of the names of special parameters\ndescribed below, it should be prefixed with the “\u003ccode\u003e\\\u003c/code\u003e” symbol.\u003c/p\u003e\n\n\u003cp\u003eThe resulting value can contain text,\nvariable, and their combination.\u003c/p\u003e\n\n\u003cp\u003eThe following special parameters are also supported:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edefault\u003c/code\u003e \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the resulting value if the source value matches none\nof the specified variants.\nWhen \u003ccode\u003edefault\u003c/code\u003e is not specified, the default\nresulting value will be an empty string.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ehostnames\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eindicates that source values can be hostnames with a prefix or suffix mask:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e*.example.com 1;\nexample.*     1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe following two records\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eexample.com   1;\n*.example.com 1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ecan be combined:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003e.example.com  1;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis parameter should be specified before the list of values.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einclude\u003c/code\u003e \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eincludes a file with values.\nThere can be several inclusions.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003evolatile\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003eindicates that the variable is not cacheable (1.11.7).\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eIf the source value matches more than one of the specified variants,\ne.g. both a mask and a regular expression match, the first matching\nvariant will be chosen, in the following order of priority:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003estring value without a mask\u003c/li\u003e\n\u003cli\u003elongest string value with a prefix mask,\ne.g. “\u003ccode\u003e*.example.com\u003c/code\u003e”\u003c/li\u003e\n\u003cli\u003elongest string value with a suffix mask,\ne.g. “\u003ccode\u003email.*\u003c/code\u003e”\u003c/li\u003e\n\u003cli\u003efirst matching regular expression\n(in order of appearance in a configuration file)\u003c/li\u003e\n\u003cli\u003edefault value\u003c/li\u003e\n\u003c/ol\u003e\n"
        },
        {
          "name": "map_hash_bucket_size",
          "default": "32|64|128",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the bucket size for the [`map`](https://nginx.org/en/docs/stream/ngx_stream_map_module.html#map) variables hash tables.\nDefault value depends on the processor’s cache line size.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the bucket size for the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_map_module.html#map\" target=\"_blank\"\u003e\u003ccode\u003emap\u003c/code\u003e\u003c/a\u003e variables hash tables.\nDefault value depends on the processor’s cache line size.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "map_hash_max_size",
          "default": "2048",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the maximum *`size`* of the [`map`](https://nginx.org/en/docs/stream/ngx_stream_map_module.html#map) variables\nhash tables.\nThe details of setting up hash tables are provided in a separate\n[document](https://nginx.org/en/docs/hash.html).",
          "description_html": "\u003cp\u003eSets the maximum \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_map_module.html#map\" target=\"_blank\"\u003e\u003ccode\u003emap\u003c/code\u003e\u003c/a\u003e variables\nhash tables.\nThe details of setting up hash tables are provided in a separate\n\u003ca href=\"https://nginx.org/en/docs/hash.html\" target=\"_blank\"\u003edocument\u003c/a\u003e.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_stream_mqtt_filter_module.html",
      "name": "ngx_stream_mqtt_filter_module",
      "directives": [
        {
          "name": "mqtt",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the MQTT protocol for the given virtual server.",
          "description_html": "\u003cp\u003eEnables the MQTT protocol for the given virtual server.\u003c/p\u003e\n"
        },
        {
          "name": "mqtt_buffers",
          "default": "100 1k",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* and *`size`* of the buffers\nused for handling MQTT messages,\nfor a single connection.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffers\nused for handling MQTT messages,\nfor a single connection.\u003c/p\u003e\n"
        },
        {
          "name": "mqtt_rewrite_buffer_size",
          "default": "4k|8k",
          "contexts": [
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "\u003e This directive is obsolete since version 1.25.1.\n\u003e The [`mqtt_buffers`](https://nginx.org/en/docs/http/ngx_stream_mqtt_filter_module.html#mqtt_buffers)\n\u003e directive should be used instead.\n\nSets the *`size`* of the buffer\nused for writing a modified message.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.",
          "description_html": "\u003cblockquote\u003e\n\u003cp\u003eThis directive is obsolete since version 1.25.1.\nThe \u003ca href=\"https://nginx.org/en/docs/http/ngx_stream_mqtt_filter_module.html#mqtt_buffers\" target=\"_blank\"\u003e\u003ccode\u003emqtt_buffers\u003c/code\u003e\u003c/a\u003e\ndirective should be used instead.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer\nused for writing a modified message.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\nIt can be made smaller, however.\u003c/p\u003e\n"
        },
        {
          "name": "mqtt_set_connect",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            "`field` *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets the message `field`\nto the given `value` for CONNECT message.\nThe following fields are supported:\n`clientid`,\n`username`, and\n`password`.\nThe value can contain text, variables, and their combination.\n\nSeveral `mqtt_set_connect` directives\ncan be specified on the same level:\n```\nmqtt_set_connect clientid \"$client\";\nmqtt_set_connect username \"$name\";\n```",
          "description_html": "\u003cp\u003eSets the message \u003ccode\u003efield\u003c/code\u003e\nto the given \u003ccode\u003evalue\u003c/code\u003e for CONNECT message.\nThe following fields are supported:\n\u003ccode\u003eclientid\u003c/code\u003e,\n\u003ccode\u003eusername\u003c/code\u003e, and\n\u003ccode\u003epassword\u003c/code\u003e.\nThe value can contain text, variables, and their combination.\u003c/p\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003emqtt_set_connect\u003c/code\u003e directives\ncan be specified on the same level:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003emqtt_set_connect clientid \u0026quot;$client\u0026quot;;\nmqtt_set_connect username \u0026quot;$name\u0026quot;;\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/http/ngx_stream_mqtt_preread_module.html",
      "name": "ngx_stream_mqtt_preread_module",
      "directives": [
        {
          "name": "mqtt_preread",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables extracting information from the MQTT CONNECT message at\nthe [preread](https://nginx.org/en/docs/stream/stream_processing.html#preread_phase) phase.",
          "description_html": "\u003cp\u003eEnables extracting information from the MQTT CONNECT message at\nthe \u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\" target=\"_blank\"\u003epreread\u003c/a\u003e phase.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_proxy_module.html",
      "name": "ngx_stream_proxy_module",
      "directives": [
        {
          "name": "proxy_bind",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`address`* [`transparent`] | `off`"
          ],
          "isBlock": false,
          "description_md": "Makes outgoing connections to a proxied server originate\nfrom the specified local IP *`address`*.\nParameter value can contain variables (1.11.2).\nThe special value `off` cancels the effect\nof the `proxy_bind` directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address.\n\nThe `transparent` parameter (1.11.0) allows\noutgoing connections to a proxied server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\n```\nproxy_bind $remote_addr transparent;\n```\nIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n[superuser](https://nginx.org/en/docs/ngx_core_module.html#user) privileges.\nOn Linux it is not required (1.13.8) as if\nthe `transparent` parameter is specified, worker processes\ninherit the `CAP_NET_RAW` capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the proxied server.",
          "description_html": "\u003cp\u003eMakes outgoing connections to a proxied server originate\nfrom the specified local IP \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e.\nParameter value can contain variables (1.11.2).\nThe special value \u003ccode\u003eoff\u003c/code\u003e cancels the effect\nof the \u003ccode\u003eproxy_bind\u003c/code\u003e directive\ninherited from the previous configuration level, which allows the\nsystem to auto-assign the local IP address.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003etransparent\u003c/code\u003e parameter (1.11.0) allows\noutgoing connections to a proxied server originate\nfrom a non-local IP address,\nfor example, from a real IP address of a client:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_bind $remote_addr transparent;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn order for this parameter to work,\nit is usually necessary to run nginx worker processes with the\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#user\" target=\"_blank\"\u003esuperuser\u003c/a\u003e privileges.\nOn Linux it is not required (1.13.8) as if\nthe \u003ccode\u003etransparent\u003c/code\u003e parameter is specified, worker processes\ninherit the \u003ccode\u003eCAP_NET_RAW\u003c/code\u003e capability from the master process.\nIt is also necessary to configure kernel routing table\nto intercept network traffic from the proxied server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_buffer_size",
          "default": "16k",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`size`* of the buffer used for reading data\nfrom the proxied server.\nAlso sets the *`size`* of the buffer used for reading data\nfrom the client.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading data\nfrom the proxied server.\nAlso sets the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the buffer used for reading data\nfrom the client.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_connect_timeout",
          "default": "60s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for establishing a connection with a proxied server.",
          "description_html": "\u003cp\u003eDefines a timeout for establishing a connection with a proxied server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_download_rate",
          "default": "0",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`rate`*"
          ],
          "isBlock": false,
          "description_md": "Limits the speed of reading the data from the proxied server.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a connection, so if nginx simultaneously opens\ntwo connections to the proxied server,\nthe overall rate will be twice as much as the specified limit.\n\nParameter value can contain variables (1.17.0).\nIt may be useful in cases where rate should be limited\ndepending on a certain condition:\n```\nmap $slow $rate {\n    1     4k;\n    2     8k;\n}\n\nproxy_download_rate $rate;\n```",
          "description_html": "\u003cp\u003eLimits the speed of reading the data from the proxied server.\nThe \u003cem\u003e\u003ccode\u003erate\u003c/code\u003e\u003c/em\u003e is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a connection, so if nginx simultaneously opens\ntwo connections to the proxied server,\nthe overall rate will be twice as much as the specified limit.\u003c/p\u003e\n\n\u003cp\u003eParameter value can contain variables (1.17.0).\nIt may be useful in cases where rate should be limited\ndepending on a certain condition:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003emap $slow $rate {\n    1     4k;\n    2     8k;\n}\n\nproxy_download_rate $rate;\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "proxy_half_close",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables closing\neach direction of a TCP connection independently (“TCP half-close”).\nIf enabled, proxying over TCP will be kept\nuntil both sides close the connection.",
          "description_html": "\u003cp\u003eEnables or disables closing\neach direction of a TCP connection independently (“TCP half-close”).\nIf enabled, proxying over TCP will be kept\nuntil both sides close the connection.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_next_upstream",
          "default": "on",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "When a connection to the proxied server cannot be established, determines\nwhether a client connection will be passed to the next server.\n\nPassing a connection to the next server can be limited by\n[the number of tries](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream_tries)\nand by [time](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream_timeout).",
          "description_html": "\u003cp\u003eWhen a connection to the proxied server cannot be established, determines\nwhether a client connection will be passed to the next server.\u003c/p\u003e\n\n\u003cp\u003ePassing a connection to the next server can be limited by\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream_tries\" target=\"_blank\"\u003ethe number of tries\u003c/a\u003e\nand by \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream_timeout\" target=\"_blank\"\u003etime\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_next_upstream_timeout",
          "default": "0",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Limits the time allowed to pass a connection to the\n[next server](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the time allowed to pass a connection to the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_next_upstream_tries",
          "default": "0",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Limits the number of possible tries for passing a connection to the\n[next server](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream).\nThe `0` value turns off this limitation.",
          "description_html": "\u003cp\u003eLimits the number of possible tries for passing a connection to the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_next_upstream\" target=\"_blank\"\u003enext server\u003c/a\u003e.\nThe \u003ccode\u003e0\u003c/code\u003e value turns off this limitation.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_pass",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            "*`address`*"
          ],
          "isBlock": false,
          "description_md": "Sets the address of a proxied server.\nThe address can be specified as a domain name or IP address,\nand a port:\n```\nproxy_pass localhost:12345;\n```\nor as a UNIX-domain socket path:\n```\nproxy_pass unix:/tmp/stream.socket;\n```\n\nIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n[server group](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html).\n\nThe address can also be specified using variables (1.11.3):\n```\nproxy_pass $upstream;\n```\nIn this case, the server name is searched among the described\n[server groups](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html),\nand, if not found, is determined using a\n[`resolver`](https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver).",
          "description_html": "\u003cp\u003eSets the address of a proxied server.\nThe address can be specified as a domain name or IP address,\nand a port:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_pass localhost:12345;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eor as a UNIX-domain socket path:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_pass unix:/tmp/stream.socket;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIf a domain name resolves to several addresses, all of them will be\nused in a round-robin fashion.\nIn addition, an address can be specified as a\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html\" target=\"_blank\"\u003eserver group\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe address can also be specified using variables (1.11.3):\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eproxy_pass $upstream;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eIn this case, the server name is searched among the described\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html\" target=\"_blank\"\u003eserver groups\u003c/a\u003e,\nand, if not found, is determined using a\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver\" target=\"_blank\"\u003e\u003ccode\u003eresolver\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_protocol",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the\n[PROXY protocol](http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt) for connections to a proxied server.",
          "description_html": "\u003cp\u003eEnables the\n\u003ca href=\"http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt\" target=\"_blank\"\u003ePROXY protocol\u003c/a\u003e for connections to a proxied server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_requests",
          "default": "0",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the number of client datagrams at which\nbinding between a client and existing UDP stream session is dropped.\nAfter receiving the specified number of datagrams, next datagram\nfrom the same client starts a new session.\nThe session terminates when all client datagrams are transmitted\nto a proxied server and the expected number of\n[responses](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_responses) is received,\nor when it reaches a [timeout](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_timeout).",
          "description_html": "\u003cp\u003eSets the number of client datagrams at which\nbinding between a client and existing UDP stream session is dropped.\nAfter receiving the specified number of datagrams, next datagram\nfrom the same client starts a new session.\nThe session terminates when all client datagrams are transmitted\nto a proxied server and the expected number of\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_responses\" target=\"_blank\"\u003eresponses\u003c/a\u003e is received,\nor when it reaches a \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_timeout\" target=\"_blank\"\u003etimeout\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_responses",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the number of datagrams expected from the proxied server\nin response to a client datagram\nif the [UDP](https://nginx.org/en/docs/stream/ngx_stream_core_module.html#udp)\nprotocol is used.\nThe number serves as a hint for session termination.\nBy default, the number of datagrams is not limited.\n\nIf zero value is specified, no response is expected.\nHowever, if a response is received and the\nsession is still not finished, the response will be handled.",
          "description_html": "\u003cp\u003eSets the number of datagrams expected from the proxied server\nin response to a client datagram\nif the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#udp\" target=\"_blank\"\u003eUDP\u003c/a\u003e\nprotocol is used.\nThe number serves as a hint for session termination.\nBy default, the number of datagrams is not limited.\u003c/p\u003e\n\n\u003cp\u003eIf zero value is specified, no response is expected.\nHowever, if a response is received and the\nsession is still not finished, the response will be handled.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_session_drop",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables terminating all sessions to a proxied server\nafter it was removed from the group or marked as permanently unavailable.\nThis can occur because of\n[re-resolve](https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver)\nor with the API\n[`DELETE`](https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteStreamUpstreamServer)\ncommand.\nA server can be marked as permanently unavailable if it is considered\n[unhealthy](https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check)\nor with the API\n[`PATCH`](https://nginx.org/en/docs/http/ngx_http_api_module.html#patchStreamUpstreamServer)\ncommand.\nEach session is terminated when the next\nread or write event is processed for the client or proxied server.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eEnables terminating all sessions to a proxied server\nafter it was removed from the group or marked as permanently unavailable.\nThis can occur because of\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver\" target=\"_blank\"\u003ere-resolve\u003c/a\u003e\nor with the API\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#deleteStreamUpstreamServer\" target=\"_blank\"\u003e\u003ccode\u003eDELETE\u003c/code\u003e\u003c/a\u003e\ncommand.\nA server can be marked as permanently unavailable if it is considered\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check\" target=\"_blank\"\u003eunhealthy\u003c/a\u003e\nor with the API\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#patchStreamUpstreamServer\" target=\"_blank\"\u003e\u003ccode\u003ePATCH\u003c/code\u003e\u003c/a\u003e\ncommand.\nEach session is terminated when the next\nread or write event is processed for the client or proxied server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "proxy_socket_keepalive",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Configures the “TCP keepalive” behavior\nfor outgoing connections to a proxied server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “`on`”, the\n`SO_KEEPALIVE` socket option is turned on for the socket.",
          "description_html": "\u003cp\u003eConfigures the “TCP keepalive” behavior\nfor outgoing connections to a proxied server.\nBy default, the operating system’s settings are in effect for the socket.\nIf the directive is set to the value “\u003ccode\u003eon\u003c/code\u003e”, the\n\u003ccode\u003eSO_KEEPALIVE\u003c/code\u003e socket option is turned on for the socket.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the SSL/TLS protocol for connections to a proxied server.",
          "description_html": "\u003cp\u003eEnables the SSL/TLS protocol for connections to a proxied server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_certificate",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the certificate in the PEM format\nused for authentication to a proxied server.\n\nSince version 1.21.0, variables can be used in the *`file`* name.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the certificate in the PEM format\nused for authentication to a proxied server.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.21.0, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_certificate_key",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the secret key in the PEM format\nused for authentication to a proxied server.\n\nSince version 1.21.0, variables can be used in the *`file`* name.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key in the PEM format\nused for authentication to a proxied server.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.21.0, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_ciphers",
          "default": "DEFAULT",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`ciphers`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the enabled ciphers for connections to a proxied server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n\nThe full list can be viewed using the\n“`openssl ciphers`” command.",
          "description_html": "\u003cp\u003eSpecifies the enabled ciphers for connections to a proxied server.\nThe ciphers are specified in the format understood by the OpenSSL library.\u003c/p\u003e\n\n\u003cp\u003eThe full list can be viewed using the\n“\u003ccode\u003eopenssl ciphers\u003c/code\u003e” command.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_conf_command",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`name`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets arbitrary OpenSSL configuration\n[commands](https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html)\nwhen establishing a connection with the proxied server.\n\u003e The directive is supported when using OpenSSL 1.0.2 or higher.\n\nSeveral `proxy_ssl_conf_command` directives\ncan be specified on the same level.\nThese directives are inherited from the previous configuration level\nif and only if there are\nno `proxy_ssl_conf_command` directives\ndefined on the current level.\n\n\u003e Note that configuring OpenSSL directly\n\u003e might result in unexpected behavior.",
          "description_html": "\u003cp\u003eSets arbitrary OpenSSL configuration\n\u003ca href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\" target=\"_blank\"\u003ecommands\u003c/a\u003e\nwhen establishing a connection with the proxied server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is supported when using OpenSSL 1.0.2 or higher.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003eproxy_ssl_conf_command\u003c/code\u003e directives\ncan be specified on the same level.\nThese directives are inherited from the previous configuration level\nif and only if there are\nno \u003ccode\u003eproxy_ssl_conf_command\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote that configuring OpenSSL directly\nmight result in unexpected behavior.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "proxy_ssl_crl",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to [verify](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_verify)\nthe certificate of the proxied server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with revoked certificates (CRL)\nin the PEM format used to \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the proxied server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_name",
          "default": "host from proxy_pass",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`name`*"
          ],
          "isBlock": false,
          "description_md": "Allows overriding the server name used to\n[verify](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_verify)\nthe certificate of the proxied server and to be\n[passed through SNI](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_server_name)\nwhen establishing a connection with the proxied server.\nThe server name can also be specified using variables (1.11.3).\n\nBy default, the host part of the [`proxy_pass`](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_pass) address is used.",
          "description_html": "\u003cp\u003eAllows overriding the server name used to\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the proxied server and to be\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_server_name\" target=\"_blank\"\u003epassed through SNI\u003c/a\u003e\nwhen establishing a connection with the proxied server.\nThe server name can also be specified using variables (1.11.3).\u003c/p\u003e\n\n\u003cp\u003eBy default, the host part of the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_pass\" target=\"_blank\"\u003e\u003ccode\u003eproxy_pass\u003c/code\u003e\u003c/a\u003e address is used.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_password_file",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with passphrases for\n[secret keys](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_certificate_key)\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with passphrases for\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_certificate_key\" target=\"_blank\"\u003esecret keys\u003c/a\u003e\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_protocols",
          "default": "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "[`SSLv2`] [`SSLv3`] [`TLSv1`] [`TLSv1.1`] [`TLSv1.2`] [`TLSv1.3`]"
          ],
          "isBlock": false,
          "description_md": "Enables the specified protocols for connections to a proxied server.\n\n\u003e The `TLSv1.3` parameter is used by default\n\u003e since 1.23.4.",
          "description_html": "\u003cp\u003eEnables the specified protocols for connections to a proxied server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003eTLSv1.3\u003c/code\u003e parameter is used by default\nsince 1.23.4.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "proxy_ssl_server_name",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables passing of the server name through\n[TLS Server Name Indication extension](http://en.wikipedia.org/wiki/Server_Name_Indication) (SNI, RFC 6066)\nwhen establishing a connection with the proxied server.",
          "description_html": "\u003cp\u003eEnables or disables passing of the server name through\n\u003ca href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\" target=\"_blank\"\u003eTLS Server Name Indication extension\u003c/a\u003e (SNI, RFC 6066)\nwhen establishing a connection with the proxied server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_session_reuse",
          "default": "on",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Determines whether SSL sessions can be reused when working with\nthe proxied server.\nIf the errors\n“`SSL3_GET_FINISHED:digest check failed`”\nappear in the logs, try disabling session reuse.",
          "description_html": "\u003cp\u003eDetermines whether SSL sessions can be reused when working with\nthe proxied server.\nIf the errors\n“\u003ccode\u003eSSL3_GET_FINISHED:digest check failed\u003c/code\u003e”\nappear in the logs, try disabling session reuse.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_trusted_certificate",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_verify)\nthe certificate of the proxied server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of the proxied server.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_verify",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables verification of the proxied server certificate.",
          "description_html": "\u003cp\u003eEnables or disables verification of the proxied server certificate.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_ssl_verify_depth",
          "default": "1",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the verification depth in the proxied server certificates chain.",
          "description_html": "\u003cp\u003eSets the verification depth in the proxied server certificates chain.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_timeout",
          "default": "10m",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`timeout`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`timeout`* between two successive\nread or write operations on client or proxied server connections.\nIf no data is transmitted within this time, the connection is closed.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/em\u003e between two successive\nread or write operations on client or proxied server connections.\nIf no data is transmitted within this time, the connection is closed.\u003c/p\u003e\n"
        },
        {
          "name": "proxy_upload_rate",
          "default": "0",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`rate`*"
          ],
          "isBlock": false,
          "description_md": "Limits the speed of reading the data from the client.\nThe *`rate`* is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a connection, so if the client simultaneously opens\ntwo connections,\nthe overall rate will be twice as much as the specified limit.\n\nParameter value can contain variables (1.17.0).\nIt may be useful in cases where rate should be limited\ndepending on a certain condition:\n```\nmap $slow $rate {\n    1     4k;\n    2     8k;\n}\n\nproxy_upload_rate $rate;\n```",
          "description_html": "\u003cp\u003eLimits the speed of reading the data from the client.\nThe \u003cem\u003e\u003ccode\u003erate\u003c/code\u003e\u003c/em\u003e is specified in bytes per second.\nThe zero value disables rate limiting.\nThe limit is set per a connection, so if the client simultaneously opens\ntwo connections,\nthe overall rate will be twice as much as the specified limit.\u003c/p\u003e\n\n\u003cp\u003eParameter value can contain variables (1.17.0).\nIt may be useful in cases where rate should be limited\ndepending on a certain condition:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003emap $slow $rate {\n    1     4k;\n    2     8k;\n}\n\nproxy_upload_rate $rate;\n\u003c/code\u003e\u003c/pre\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_realip_module.html",
      "name": "ngx_stream_realip_module",
      "directives": [
        {
          "name": "set_real_ip_from",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`address`* | *`CIDR`* | `unix:`"
          ],
          "isBlock": false,
          "description_md": "Defines trusted addresses that are known to send correct\nreplacement addresses.\nIf the special value `unix:` is specified,\nall UNIX-domain sockets will be trusted.",
          "description_html": "\u003cp\u003eDefines trusted addresses that are known to send correct\nreplacement addresses.\nIf the special value \u003ccode\u003eunix:\u003c/code\u003e is specified,\nall UNIX-domain sockets will be trusted.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_return_module.html",
      "name": "ngx_stream_return_module",
      "directives": [
        {
          "name": "return",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            "*`value`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`value`* to send to the client.\nThe value can contain text, variables, and their combination.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e to send to the client.\nThe value can contain text, variables, and their combination.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_set_module.html",
      "name": "ngx_stream_set_module",
      "directives": [
        {
          "name": "set",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            "*`$variable`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets a *`value`* for the specified *`variable`*.\nThe *`value`* can contain text, variables, and their combination.",
          "description_html": "\u003cp\u003eSets a \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e for the specified \u003cem\u003e\u003ccode\u003evariable\u003c/code\u003e\u003c/em\u003e.\nThe \u003cem\u003e\u003ccode\u003evalue\u003c/code\u003e\u003c/em\u003e can contain text, variables, and their combination.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_split_clients_module.html",
      "name": "ngx_stream_split_clients_module",
      "directives": [
        {
          "name": "split_clients",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`string`* *`$variable`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Creates a variable for A/B testing, for example:\n```\nsplit_clients \"${remote_addr}AAA\" $variant {\n               0.5%               .one;\n               2.0%               .two;\n               *                  \"\";\n}\n```\nThe value of the original string is hashed using MurmurHash2.\nIn the example given, hash values from 0 to 21474835 (0.5%)\ncorrespond to the\nvalue `\".one\"` of the `$variant` variable,\nhash values from 21474836 to 107374180 (2%) correspond to\nthe value `\".two\"`,\nand hash values from 107374181 to 4294967295 correspond to\nthe value `\"\"` (an empty string).",
          "description_html": "\u003cp\u003eCreates a variable for A/B testing, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003esplit_clients \u0026quot;${remote_addr}AAA\u0026quot; $variant {\n               0.5%               .one;\n               2.0%               .two;\n               *                  \u0026quot;\u0026quot;;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe value of the original string is hashed using MurmurHash2.\nIn the example given, hash values from 0 to 21474835 (0.5%)\ncorrespond to the\nvalue \u003ccode\u003e\u0026quot;.one\u0026quot;\u003c/code\u003e of the \u003ccode\u003e$variant\u003c/code\u003e variable,\nhash values from 21474836 to 107374180 (2%) correspond to\nthe value \u003ccode\u003e\u0026quot;.two\u0026quot;\u003c/code\u003e,\nand hash values from 107374181 to 4294967295 correspond to\nthe value \u003ccode\u003e\u0026quot;\u0026quot;\u003c/code\u003e (an empty string).\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_ssl_module.html",
      "name": "ngx_stream_ssl_module",
      "directives": [
        {
          "name": "ssl_alpn",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`protocol`* ..."
          ],
          "isBlock": false,
          "description_md": "Specifies the list of supported\n[ALPN](https://datatracker.ietf.org/doc/html/rfc7301) protocols.\nOne of the protocols must be\n[negotiated](https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#var_ssl_alpn_protocol) if the client uses ALPN:\n```\nmap $ssl_alpn_protocol $proxy {\n    h2                127.0.0.1:8001;\n    http/1.1          127.0.0.1:8002;\n}\n\nserver {\n    listen      12346;\n    proxy_pass  $proxy;\n    ssl_alpn    h2 http/1.1;\n}\n```",
          "description_html": "\u003cp\u003eSpecifies the list of supported\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc7301\" target=\"_blank\"\u003eALPN\u003c/a\u003e protocols.\nOne of the protocols must be\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#var_ssl_alpn_protocol\" target=\"_blank\"\u003enegotiated\u003c/a\u003e if the client uses ALPN:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003emap $ssl_alpn_protocol $proxy {\n    h2                127.0.0.1:8001;\n    http/1.1          127.0.0.1:8002;\n}\n\nserver {\n    listen      12346;\n    proxy_pass  $proxy;\n    ssl_alpn    h2 http/1.1;\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "ssl_certificate",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the certificate in the PEM format\nfor the given server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\n\nSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\n```\nserver {\n    listen              12345 ssl;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n```\n\u003e Only OpenSSL 1.0.2 or higher supports separate certificate chains\n\u003e for different certificates.\n\u003e With older versions, only one certificate chain can be used.\n\nSince version 1.15.9, variables can be used in the *`file`* name\nwhen using OpenSSL 1.0.2 or higher:\n```\nssl_certificate     $ssl_server_name.crt;\nssl_certificate_key $ssl_server_name.key;\n```\nNote that using variables implies that\na certificate will be loaded for each SSL handshake,\nand this may have a negative impact on performance.\n\nThe value\n`data`:*`$variable`*\ncan be specified instead of the *`file`* (1.15.10),\nwhich loads a certificate from a variable without using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n[error log](https://nginx.org/en/docs/ngx_core_module.html#error_log).",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the certificate in the PEM format\nfor the given server.\nIf intermediate certificates should be specified in addition to a primary\ncertificate, they should be specified in the same file in the following\norder: the primary certificate comes first, then the intermediate certificates.\nA secret key in the PEM format may be placed in the same file.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.11.0,\nthis directive can be specified multiple times\nto load certificates of different types, for example, RSA and ECDSA:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver {\n    listen              12345 ssl;\n\n    ssl_certificate     example.com.rsa.crt;\n    ssl_certificate_key example.com.rsa.key;\n\n    ssl_certificate     example.com.ecdsa.crt;\n    ssl_certificate_key example.com.ecdsa.key;\n\n    ...\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOnly OpenSSL 1.0.2 or higher supports separate certificate chains\nfor different certificates.\nWith older versions, only one certificate chain can be used.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSince version 1.15.9, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name\nwhen using OpenSSL 1.0.2 or higher:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_certificate     $ssl_server_name.crt;\nssl_certificate_key $ssl_server_name.key;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that using variables implies that\na certificate will be loaded for each SSL handshake,\nand this may have a negative impact on performance.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003edata\u003c/code\u003e:\u003cem\u003e\u003ccode\u003e$variable\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e (1.15.10),\nwhich loads a certificate from a variable without using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\" target=\"_blank\"\u003eerror log\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_certificate_key",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the secret key in the PEM format\nfor the given server.\n\nThe value\n`engine`:*`name`*:*`id`*\ncan be specified instead of the *`file`*,\nwhich loads a secret key with a specified *`id`*\nfrom the OpenSSL engine *`name`*.\n\nThe value\n`data`:*`$variable`*\ncan be specified instead of the *`file`* (1.15.10),\nwhich loads a secret key from a variable without using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n[error log](https://nginx.org/en/docs/ngx_core_module.html#error_log).\n\nSince version 1.15.9, variables can be used in the *`file`* name\nwhen using OpenSSL 1.0.2 or higher.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key in the PEM format\nfor the given server.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003eengine\u003c/code\u003e:\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e:\u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e,\nwhich loads a secret key with a specified \u003cem\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/em\u003e\nfrom the OpenSSL engine \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe value\n\u003ccode\u003edata\u003c/code\u003e:\u003cem\u003e\u003ccode\u003e$variable\u003c/code\u003e\u003c/em\u003e\ncan be specified instead of the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e (1.15.10),\nwhich loads a secret key from a variable without using intermediate files.\nNote that inappropriate use of this syntax may have its security implications,\nsuch as writing secret key data to\n\u003ca href=\"https://nginx.org/en/docs/ngx_core_module.html#error_log\" target=\"_blank\"\u003eerror log\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eSince version 1.15.9, variables can be used in the \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e name\nwhen using OpenSSL 1.0.2 or higher.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_ciphers",
          "default": "HIGH:!aNULL:!MD5",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`ciphers`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\n```\nssl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n```\n\nThe full list can be viewed using the\n“`openssl ciphers`” command.",
          "description_html": "\u003cp\u003eSpecifies the enabled ciphers.\nThe ciphers are specified in the format understood by the\nOpenSSL library, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_ciphers ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe full list can be viewed using the\n“\u003ccode\u003eopenssl ciphers\u003c/code\u003e” command.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_client_certificate",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_verify_client) client certificates.\n\nThe list of certificates will be sent to clients.\nIf this is not desired, the [`ssl_trusted_certificate`](https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_trusted_certificate)\ndirective can be used.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003everify\u003c/a\u003e client certificates.\u003c/p\u003e\n\n\u003cp\u003eThe list of certificates will be sent to clients.\nIf this is not desired, the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_trusted_certificate\" target=\"_blank\"\u003e\u003ccode\u003essl_trusted_certificate\u003c/code\u003e\u003c/a\u003e\ndirective can be used.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_conf_command",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`name`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets arbitrary OpenSSL configuration\n[commands](https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html).\n\u003e The directive is supported when using OpenSSL 1.0.2 or higher.\n\nSeveral `ssl_conf_command` directives\ncan be specified on the same level:\n```\nssl_conf_command Options PrioritizeChaCha;\nssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;\n```\nThese directives are inherited from the previous configuration level\nif and only if there are no `ssl_conf_command` directives\ndefined on the current level.\n\n\u003e Note that configuring OpenSSL directly\n\u003e might result in unexpected behavior.",
          "description_html": "\u003cp\u003eSets arbitrary OpenSSL configuration\n\u003ca href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\" target=\"_blank\"\u003ecommands\u003c/a\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is supported when using OpenSSL 1.0.2 or higher.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003essl_conf_command\u003c/code\u003e directives\ncan be specified on the same level:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_conf_command Options PrioritizeChaCha;\nssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThese directives are inherited from the previous configuration level\nif and only if there are no \u003ccode\u003essl_conf_command\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote that configuring OpenSSL directly\nmight result in unexpected behavior.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_crl",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to [verify](https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_verify_client)\nclient certificates.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with revoked certificates (CRL)\nin the PEM format used to \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003everify\u003c/a\u003e\nclient certificates.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_dhparam",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with DH parameters for DHE ciphers.\n\nBy default no parameters are set,\nand therefore DHE ciphers will not be used.\n\u003e Prior to version 1.11.0, builtin parameters were used by default.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with DH parameters for DHE ciphers.\u003c/p\u003e\n\n\u003cp\u003eBy default no parameters are set,\nand therefore DHE ciphers will not be used.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.11.0, builtin parameters were used by default.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_ecdh_curve",
          "default": "auto",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`curve`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`curve`* for ECDHE ciphers.\n\nWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\n```\nssl_ecdh_curve prime256v1:secp384r1;\n```\n\nThe special value `auto` (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor `prime256v1` with older versions.\n\n\u003e Prior to version 1.11.0,\n\u003e the `prime256v1` curve was used by default.\n\n\u003e When using OpenSSL 1.0.2 or higher,\n\u003e this directive sets the list of curves supported by the server.\n\u003e Thus, in order for ECDSA certificates to work,\n\u003e it is important to include the curves used in the certificates.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003ecurve\u003c/code\u003e\u003c/em\u003e for ECDHE ciphers.\u003c/p\u003e\n\n\u003cp\u003eWhen using OpenSSL 1.0.2 or higher,\nit is possible to specify multiple curves (1.11.0), for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_ecdh_curve prime256v1:secp384r1;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe special value \u003ccode\u003eauto\u003c/code\u003e (1.11.0) instructs nginx to use\na list built into the OpenSSL library when using OpenSSL 1.0.2 or higher,\nor \u003ccode\u003eprime256v1\u003c/code\u003e with older versions.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.11.0,\nthe \u003ccode\u003eprime256v1\u003c/code\u003e curve was used by default.\u003c/p\u003e\n\n\u003cp\u003eWhen using OpenSSL 1.0.2 or higher,\nthis directive sets the list of curves supported by the server.\nThus, in order for ECDSA certificates to work,\nit is important to include the curves used in the certificates.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_handshake_timeout",
          "default": "60s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a timeout for the SSL handshake to complete.",
          "description_html": "\u003cp\u003eSpecifies a timeout for the SSL handshake to complete.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_password_file",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with passphrases for\n[secret keys](https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_certificate_key)\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\n\nExample:\n```\nstream {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        listen 127.0.0.1:12345;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        listen 127.0.0.1:12346;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n```",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with passphrases for\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_certificate_key\" target=\"_blank\"\u003esecret keys\u003c/a\u003e\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003estream {\n    ssl_password_file /etc/keys/global.pass;\n    ...\n\n    server {\n        listen 127.0.0.1:12345;\n        ssl_certificate_key /etc/keys/first.key;\n    }\n\n    server {\n        listen 127.0.0.1:12346;\n\n        # named pipe can also be used instead of a file\n        ssl_password_file /etc/keys/fifo;\n        ssl_certificate_key /etc/keys/second.key;\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "ssl_prefer_server_ciphers",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Specifies that server ciphers should be preferred over client ciphers\nwhen the SSLv3 and TLS protocols are used.",
          "description_html": "\u003cp\u003eSpecifies that server ciphers should be preferred over client ciphers\nwhen the SSLv3 and TLS protocols are used.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_protocols",
          "default": "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "[`SSLv2`] [`SSLv3`] [`TLSv1`] [`TLSv1.1`] [`TLSv1.2`] [`TLSv1.3`]"
          ],
          "isBlock": false,
          "description_md": "Enables the specified protocols.\n\u003e The `TLSv1.1` and `TLSv1.2` parameters work\n\u003e only when OpenSSL 1.0.1 or higher is used.\n\n\u003e The `TLSv1.3` parameter (1.13.0) works only when\n\u003e OpenSSL 1.1.1 or higher is used.\n\n\u003e The `TLSv1.3` parameter is used by default\n\u003e since 1.23.4.",
          "description_html": "\u003cp\u003eEnables the specified protocols.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003eTLSv1.1\u003c/code\u003e and \u003ccode\u003eTLSv1.2\u003c/code\u003e parameters work\nonly when OpenSSL 1.0.1 or higher is used.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eTLSv1.3\u003c/code\u003e parameter (1.13.0) works only when\nOpenSSL 1.1.1 or higher is used.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eTLSv1.3\u003c/code\u003e parameter is used by default\nsince 1.23.4.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "ssl_session_cache",
          "default": "none",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`off` | `none` | [`builtin`[:*`size`*]] [`shared`:*`name`*:*`size`*]"
          ],
          "isBlock": false,
          "description_md": "Sets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\n- `off`\n\n    the use of a session cache is strictly prohibited:\n    nginx explicitly tells a client that sessions may not be reused.\n- `none`\n\n    the use of a session cache is gently disallowed:\n    nginx tells a client that sessions may be reused, but does not\n    actually store session parameters in the cache.\n- `builtin`\n\n    a cache built in OpenSSL; used by one worker process only.\n    The cache size is specified in sessions.\n    If size is not given, it is equal to 20480 sessions.\n    Use of the built-in cache can cause memory fragmentation.\n- `shared`\n\n    a cache shared between all worker processes.\n    The cache size is specified in bytes; one megabyte can store\n    about 4000 sessions.\n    Each shared cache should have an arbitrary name.\n    A cache with the same name can be used in several\n    servers.\n    It is also used to automatically generate, store, and\n    periodically rotate TLS session ticket keys (1.23.2)\n    unless configured explicitly\n    using the [`ssl_session_ticket_key`](https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_session_ticket_key) directive.\n\nBoth cache types can be used simultaneously, for example:\n```\nssl_session_cache builtin:1000 shared:SSL:10m;\n```\nbut using only shared cache without the built-in cache should\nbe more efficient.",
          "description_html": "\u003cp\u003eSets the types and sizes of caches that store session parameters.\nA cache can be of any of the following types:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eoff\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe use of a session cache is strictly prohibited:\nnginx explicitly tells a client that sessions may not be reused.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003enone\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ethe use of a session cache is gently disallowed:\nnginx tells a client that sessions may be reused, but does not\nactually store session parameters in the cache.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebuiltin\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea cache built in OpenSSL; used by one worker process only.\nThe cache size is specified in sessions.\nIf size is not given, it is equal to 20480 sessions.\nUse of the built-in cache can cause memory fragmentation.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eshared\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003ea cache shared between all worker processes.\nThe cache size is specified in bytes; one megabyte can store\nabout 4000 sessions.\nEach shared cache should have an arbitrary name.\nA cache with the same name can be used in several\nservers.\nIt is also used to automatically generate, store, and\nperiodically rotate TLS session ticket keys (1.23.2)\nunless configured explicitly\nusing the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_session_ticket_key\" target=\"_blank\"\u003e\u003ccode\u003essl_session_ticket_key\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBoth cache types can be used simultaneously, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_session_cache builtin:1000 shared:SSL:10m;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003ebut using only shared cache without the built-in cache should\nbe more efficient.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_session_ticket_key",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Sets a *`file`* with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\n\nIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\n```\nssl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n```\n\nThe *`file`* must contain 80 or 48 bytes\nof random data and can be created using the following command:\n```\nopenssl rand 80 \u003e ticket.key\n```\nDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.",
          "description_html": "\u003cp\u003eSets a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key used to encrypt\nand decrypt TLS session tickets.\nThe directive is necessary if the same key has to be shared between\nmultiple servers.\nBy default, a randomly generated key is used.\u003c/p\u003e\n\n\u003cp\u003eIf several keys are specified, only the first key is\nused to encrypt TLS session tickets.\nThis allows configuring key rotation, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003essl_session_ticket_key current.key;\nssl_session_ticket_key previous.key;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e must contain 80 or 48 bytes\nof random data and can be created using the following command:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eopenssl rand 80 \u0026gt; ticket.key\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eDepending on the file size either AES256 (for 80-byte keys, 1.11.8)\nor AES128 (for 48-byte keys) is used for encryption.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_session_tickets",
          "default": "on",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables session resumption through\n[TLS session tickets](https://datatracker.ietf.org/doc/html/rfc5077).",
          "description_html": "\u003cp\u003eEnables or disables session resumption through\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc5077\" target=\"_blank\"\u003eTLS session tickets\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_session_timeout",
          "default": "5m",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a time during which a client may reuse the\nsession parameters.",
          "description_html": "\u003cp\u003eSpecifies a time during which a client may reuse the\nsession parameters.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_trusted_certificate",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_verify_client) client certificates.\n\nIn contrast to the certificate set by [`ssl_client_certificate`](https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_client_certificate),\nthe list of these certificates will not be sent to clients.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_verify_client\" target=\"_blank\"\u003everify\u003c/a\u003e client certificates.\u003c/p\u003e\n\n\u003cp\u003eIn contrast to the certificate set by \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#ssl_client_certificate\" target=\"_blank\"\u003e\u003ccode\u003essl_client_certificate\u003c/code\u003e\u003c/a\u003e,\nthe list of these certificates will not be sent to clients.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_verify_client",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off` | `optional` | `optional_no_ca`"
          ],
          "isBlock": false,
          "description_md": "Enables verification of client certificates.\nThe verification result is stored in the\n[$ssl_client_verify](https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#var_ssl_client_verify) variable.\nIf an error has occurred during the client certificate verification\nor a client has not presented the required certificate,\nthe connection is closed.\n\nThe `optional` parameter requests the client\ncertificate and verifies it if the certificate is present.\n\nThe `optional_no_ca` parameter\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through the\n[$ssl_client_cert](https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#var_ssl_client_cert) variable.",
          "description_html": "\u003cp\u003eEnables verification of client certificates.\nThe verification result is stored in the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#var_ssl_client_verify\" target=\"_blank\"\u003e$ssl_client_verify\u003c/a\u003e variable.\nIf an error has occurred during the client certificate verification\nor a client has not presented the required certificate,\nthe connection is closed.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoptional\u003c/code\u003e parameter requests the client\ncertificate and verifies it if the certificate is present.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eoptional_no_ca\u003c/code\u003e parameter\nrequests the client\ncertificate but does not require it to be signed by a trusted CA certificate.\nThis is intended for the use in cases when a service that is external to nginx\nperforms the actual certificate verification.\nThe contents of the certificate is accessible through the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html#var_ssl_client_cert\" target=\"_blank\"\u003e$ssl_client_cert\u003c/a\u003e variable.\u003c/p\u003e\n"
        },
        {
          "name": "ssl_verify_depth",
          "default": "1",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the verification depth in the client certificates chain.",
          "description_html": "\u003cp\u003eSets the verification depth in the client certificates chain.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_ssl_preread_module.html",
      "name": "ngx_stream_ssl_preread_module",
      "directives": [
        {
          "name": "ssl_preread",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables extracting information from the ClientHello message at\nthe [preread](https://nginx.org/en/docs/stream/stream_processing.html#preread_phase) phase.",
          "description_html": "\u003cp\u003eEnables extracting information from the ClientHello message at\nthe \u003ca href=\"https://nginx.org/en/docs/stream/stream_processing.html#preread_phase\" target=\"_blank\"\u003epreread\u003c/a\u003e phase.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_upstream_hc_module.html",
      "name": "ngx_stream_upstream_hc_module",
      "directives": [
        {
          "name": "health_check",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            "[*`parameters`*]"
          ],
          "isBlock": false,
          "description_md": "Enables periodic health checks of the servers in a\n[group](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#upstream).\n\nThe following optional parameters are supported:\n- `interval`=*`time`*\n\n    sets the interval between two consecutive health checks,\n    by default, 5 seconds.\n- `jitter`=*`time`*\n\n    sets the time within which\n    each health check will be randomly delayed,\n    by default, there is no delay.\n- `fails`=*`number`*\n\n    sets the number of consecutive failed health checks of a particular server\n    after which this server will be considered unhealthy,\n    by default, 1.\n- `passes`=*`number`*\n\n    sets the number of consecutive passed health checks of a particular server\n    after which the server will be considered healthy,\n    by default, 1.\n- `mandatory` [`persistent`]\n\n    sets the initial “checking” state for a server\n    until the first health check is completed (1.11.7).\n    Client connections are not passed to servers in the “checking” state.\n    If the parameter is not specified,\n    the server will be initially considered healthy.\n    \n    \n    \n    The `persistent` parameter (1.21.1)\n    sets the initial “up” state for a server after reload\n    if the server was considered healthy before reload.\n- `match`=*`name`*\n\n    specifies the `match` block configuring the tests that a\n    successful connection should pass in order for a health check to pass.\n    By default, for TCP, only the ability\n    to establish a TCP connection with the server is checked.\n    For [UDP](https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check_udp), the absence of\n    ICMP “`Destination Unreachable`” message is expected\n    in reply to the sent string “`nginx health check`”.\n    \u003e Prior to version 1.11.7, by default, UDP health check\n    \u003e required a [match](https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#hc_match) block with the\n    \u003e [send](https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#match_send) and [expect](https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#match_expect)\n    \u003e parameters.\n- `port`=*`number`*\n\n    defines the port used when connecting to a server\n    to perform a health check (1.9.7).\n    By default, equals the\n    [`server`](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#server) port.\n- `udp`\n\n    specifies that the `UDP` protocol should be used for\n    health checks instead of the default `TCP` protocol (1.9.13).",
          "description_html": "\u003cp\u003eEnables periodic health checks of the servers in a\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#upstream\" target=\"_blank\"\u003egroup\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe following optional parameters are supported:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003einterval\u003c/code\u003e=\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the interval between two consecutive health checks,\nby default, 5 seconds.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ejitter\u003c/code\u003e=\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the time within which\neach health check will be randomly delayed,\nby default, there is no delay.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003efails\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the number of consecutive failed health checks of a particular server\nafter which this server will be considered unhealthy,\nby default, 1.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003epasses\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the number of consecutive passed health checks of a particular server\nafter which the server will be considered healthy,\nby default, 1.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emandatory\u003c/code\u003e [\u003ccode\u003epersistent\u003c/code\u003e]\u003c/p\u003e\n\n\u003cp\u003esets the initial “checking” state for a server\nuntil the first health check is completed (1.11.7).\nClient connections are not passed to servers in the “checking” state.\nIf the parameter is not specified,\nthe server will be initially considered healthy.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003epersistent\u003c/code\u003e parameter (1.21.1)\nsets the initial “up” state for a server after reload\nif the server was considered healthy before reload.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ematch\u003c/code\u003e=\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003especifies the \u003ccode\u003ematch\u003c/code\u003e block configuring the tests that a\nsuccessful connection should pass in order for a health check to pass.\nBy default, for TCP, only the ability\nto establish a TCP connection with the server is checked.\nFor \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check_udp\" target=\"_blank\"\u003eUDP\u003c/a\u003e, the absence of\nICMP “\u003ccode\u003eDestination Unreachable\u003c/code\u003e” message is expected\nin reply to the sent string “\u003ccode\u003enginx health check\u003c/code\u003e”.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.11.7, by default, UDP health check\nrequired a \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#hc_match\" target=\"_blank\"\u003ematch\u003c/a\u003e block with the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#match_send\" target=\"_blank\"\u003esend\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#match_expect\" target=\"_blank\"\u003eexpect\u003c/a\u003e\nparameters.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eport\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003edefines the port used when connecting to a server\nto perform a health check (1.9.7).\nBy default, equals the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e port.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eudp\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003especifies that the \u003ccode\u003eUDP\u003c/code\u003e protocol should be used for\nhealth checks instead of the default \u003ccode\u003eTCP\u003c/code\u003e protocol (1.9.13).\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n"
        },
        {
          "name": "health_check_timeout",
          "default": "5s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`timeout`*"
          ],
          "isBlock": false,
          "description_md": "Overrides the\n[`proxy_timeout`](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_timeout)\nvalue for health checks.",
          "description_html": "\u003cp\u003eOverrides the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_timeout\" target=\"_blank\"\u003e\u003ccode\u003eproxy_timeout\u003c/code\u003e\u003c/a\u003e\nvalue for health checks.\u003c/p\u003e\n"
        },
        {
          "name": "match",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`name`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Defines the named test set used to verify server responses to health checks.\n\nThe following parameters can be configured:\n- `send` *`string`*;\n\n    sends a *`string`* to the server;\n- `expect` *`string`* |\n`~` *`regex`*;\n\n    a literal string (1.9.12) or a regular expression\n    that the data obtained from the server should match.\n    The regular expression is specified with the preceding\n    “`~*`” modifier (for case-insensitive matching), or the\n    “`~`” modifier (for case-sensitive matching).\n\nBoth `send` and `expect` parameters\ncan contain hexadecimal literals with the prefix “`\\x`”\nfollowed by two hex digits, for example, “`\\x80`” (1.9.12).\n\nHealth check is passed if:\n- the TCP connection was successfully established;\n- the *`string`* from the `send` parameter,\n    if specified, was sent;\n- the data obtained from the server matched the string or regular expression\n    from the `expect` parameter, if specified;\n- the time elapsed does not exceed the value specified\n    in the [`health_check_timeout`](https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check_timeout) directive.\n\nExample:\n```\nupstream backend {\n    zone     upstream_backend 10m;\n    server   127.0.0.1:12345;\n}\n\nmatch http {\n    send     \"GET / HTTP/1.0\\r\\nHost: localhost\\r\\n\\r\\n\";\n    expect ~ \"200 OK\";\n}\n\nserver {\n    listen       12346;\n    proxy_pass   backend;\n    health_check match=http;\n}\n```\n\n\u003e Only the first\n\u003e [`proxy_buffer_size`](https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_buffer_size)\n\u003e bytes of data obtained from the server are examined.",
          "description_html": "\u003cp\u003eDefines the named test set used to verify server responses to health checks.\u003c/p\u003e\n\n\u003cp\u003eThe following parameters can be configured:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003esend\u003c/code\u003e \u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e;\u003c/p\u003e\n\n\u003cp\u003esends a \u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e to the server;\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eexpect\u003c/code\u003e \u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e |\n\u003ccode\u003e~\u003c/code\u003e \u003cem\u003e\u003ccode\u003eregex\u003c/code\u003e\u003c/em\u003e;\u003c/p\u003e\n\n\u003cp\u003ea literal string (1.9.12) or a regular expression\nthat the data obtained from the server should match.\nThe regular expression is specified with the preceding\n“\u003ccode\u003e~*\u003c/code\u003e” modifier (for case-insensitive matching), or the\n“\u003ccode\u003e~\u003c/code\u003e” modifier (for case-sensitive matching).\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBoth \u003ccode\u003esend\u003c/code\u003e and \u003ccode\u003eexpect\u003c/code\u003e parameters\ncan contain hexadecimal literals with the prefix “\u003ccode\u003e\\x\u003c/code\u003e”\nfollowed by two hex digits, for example, “\u003ccode\u003e\\x80\u003c/code\u003e” (1.9.12).\u003c/p\u003e\n\n\u003cp\u003eHealth check is passed if:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe TCP connection was successfully established;\u003c/li\u003e\n\u003cli\u003ethe \u003cem\u003e\u003ccode\u003estring\u003c/code\u003e\u003c/em\u003e from the \u003ccode\u003esend\u003c/code\u003e parameter,\nif specified, was sent;\u003c/li\u003e\n\u003cli\u003ethe data obtained from the server matched the string or regular expression\nfrom the \u003ccode\u003eexpect\u003c/code\u003e parameter, if specified;\u003c/li\u003e\n\u003cli\u003ethe time elapsed does not exceed the value specified\nin the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check_timeout\" target=\"_blank\"\u003e\u003ccode\u003ehealth_check_timeout\u003c/code\u003e\u003c/a\u003e directive.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream backend {\n    zone     upstream_backend 10m;\n    server   127.0.0.1:12345;\n}\n\nmatch http {\n    send     \u0026quot;GET / HTTP/1.0\\r\\nHost: localhost\\r\\n\\r\\n\u0026quot;;\n    expect ~ \u0026quot;200 OK\u0026quot;;\n}\n\nserver {\n    listen       12346;\n    proxy_pass   backend;\n    health_check match=http;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eOnly the first\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html#proxy_buffer_size\" target=\"_blank\"\u003e\u003ccode\u003eproxy_buffer_size\u003c/code\u003e\u003c/a\u003e\nbytes of data obtained from the server are examined.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_upstream_module.html",
      "name": "ngx_stream_upstream_module",
      "directives": [
        {
          "name": "upstream",
          "default": "",
          "contexts": [
            "stream"
          ],
          "syntax": [
            "*`name`* `{...}`"
          ],
          "isBlock": true,
          "description_md": "Defines a group of servers.\nServers can listen on different ports.\nIn addition, servers listening on TCP and UNIX-domain sockets\ncan be mixed.\n\nExample:\n```\nupstream backend {\n    server backend1.example.com:12345 weight=5;\n    server 127.0.0.1:12345            max_fails=3 fail_timeout=30s;\n    server unix:/tmp/backend2;\n    server backend3.example.com:12345 resolve;\n\n    server backup1.example.com:12345  backup;\n}\n```\n\nBy default, connections are distributed between the servers using a\nweighted round-robin balancing method.\nIn the above example, each 7 connections will be distributed as follows:\n5 connections go to `backend1.example.com:12345`\nand one connection to each of the second and third servers.\nIf an error occurs during communication with a server, the connection will\nbe passed to the next server, and so on until all of the functioning\nservers will be tried.\nIf communication with all servers fails, the connection will be closed.",
          "description_html": "\u003cp\u003eDefines a group of servers.\nServers can listen on different ports.\nIn addition, servers listening on TCP and UNIX-domain sockets\ncan be mixed.\u003c/p\u003e\n\n\u003cp\u003eExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eupstream backend {\n    server backend1.example.com:12345 weight=5;\n    server 127.0.0.1:12345            max_fails=3 fail_timeout=30s;\n    server unix:/tmp/backend2;\n    server backend3.example.com:12345 resolve;\n\n    server backup1.example.com:12345  backup;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eBy default, connections are distributed between the servers using a\nweighted round-robin balancing method.\nIn the above example, each 7 connections will be distributed as follows:\n5 connections go to \u003ccode\u003ebackend1.example.com:12345\u003c/code\u003e\nand one connection to each of the second and third servers.\nIf an error occurs during communication with a server, the connection will\nbe passed to the next server, and so on until all of the functioning\nservers will be tried.\nIf communication with all servers fails, the connection will be closed.\u003c/p\u003e\n"
        },
        {
          "name": "server",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`address`* [*`parameters`*]"
          ],
          "isBlock": false,
          "description_md": "Defines the *`address`* and other *`parameters`*\nof a server.\nThe address can be specified as a domain name or IP address\nwith an obligatory port, or as a UNIX-domain socket path\nspecified after the “`unix:`” prefix.\nA domain name that resolves to several IP addresses defines\nmultiple servers at once.\n\nThe following parameters can be defined:\n- `weight`=*`number`*\n\n    sets the weight of the server, by default, 1.\n- `max_conns`=*`number`*\n\n    limits the maximum *`number`* of simultaneous\n    connections to the proxied server (1.11.5).\n    Default value is zero, meaning there is no limit.\n    If the server group does not reside in the [shared memory](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#zone),\n    the limitation works per each worker process.\n    \u003e Prior to version 1.11.5, this parameter was available as part of our\n    \u003e [commercial subscription](https://nginx.com/products/).\n- `max_fails`=*`number`*\n\n    sets the number of unsuccessful attempts to communicate with the server\n    that should happen in the duration set by the `fail_timeout`\n    parameter to consider the server unavailable for a duration also set by the\n    `fail_timeout` parameter.\n    By default, the number of unsuccessful attempts is set to 1.\n    The zero value disables the accounting of attempts.\n    Here, an unsuccessful attempt is an error or timeout\n    while establishing a connection with the server.\n- `fail_timeout`=*`time`*\n\n    sets\n    - the time during which the specified number of unsuccessful attempts to\n        communicate with the server should happen to consider the server unavailable;\n    - and the period of time the server will be considered unavailable.\n    \n    By default, the parameter is set to 10 seconds.\n- `backup`\n\n    marks the server as a backup server.\n    Connections to the backup server will be passed\n    when the primary servers are unavailable.\n    \u003e The parameter cannot be used along with the\n    \u003e [`hash`](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#hash) and [`random`](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#random) load balancing methods.\n- `down`\n\n    marks the server as permanently unavailable.\n\nAdditionally,\nthe following parameters are available as part of our\n[commercial subscription](https://nginx.com/products/):\n- `resolve`\n\n    monitors changes of the IP addresses\n    that correspond to a domain name of the server,\n    and automatically modifies the upstream configuration\n    without the need of restarting nginx.\n    The server group must reside in the [shared memory](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#zone).\n    \n    In order for this parameter to work,\n    the `resolver` directive\n    must be specified in the\n    [stream](https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver) block\n    or in the corresponding [upstream](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#resolver) block.\n- `service`=*`name`*\n\n    enables resolving of DNS\n    [SRV](https://datatracker.ietf.org/doc/html/rfc2782)\n    records and sets the service *`name`* (1.9.13).\n    In order for this parameter to work, it is necessary to specify\n    the [`resolve`](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#resolve) parameter for the server\n    and specify a hostname without a port number.\n    \n    If the service name does not contain a dot (“`.`”), then\n    the [RFC](https://datatracker.ietf.org/doc/html/rfc2782)-compliant name\n    is constructed\n    and the TCP protocol is added to the service prefix.\n    For example, to look up the\n    `_http._tcp.backend.example.com` SRV record,\n    it is necessary to specify the directive:\n    ```\n    server backend.example.com service=http resolve;\n    ```\n    If the service name contains one or more dots, then the name is constructed\n    by joining the service prefix and the server name.\n    For example, to look up the `_http._tcp.backend.example.com`\n    and `server1.backend.example.com` SRV records,\n    it is necessary to specify the directives:\n    ```\n    server backend.example.com service=_http._tcp resolve;\n    server example.com service=server1.backend resolve;\n    ```\n    \n    \n    \n    Highest-priority SRV records\n    (records with the same lowest-number priority value)\n    are resolved as primary servers,\n    the rest of SRV records are resolved as backup servers.\n    If the [`backup`](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#backup) parameter is specified for the server,\n    high-priority SRV records are resolved as backup servers,\n    the rest of SRV records are ignored.\n- `slow_start`=*`time`*\n\n    sets the *`time`* during which the server will recover its weight\n    from zero to a nominal value, when unhealthy server becomes\n    [healthy](https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check),\n    or when the server becomes available after a period of time\n    it was considered [unavailable](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#fail_timeout).\n    Default value is zero, i.e. slow start is disabled.\n    \u003e The parameter cannot be used along with the\n    \u003e [`hash`](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#hash) and [`random`](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#random) load balancing methods.\n\n\u003e If there is only a single server in a group, `max_fails`,\n\u003e `fail_timeout` and `slow_start` parameters\n\u003e are ignored, and such a server will never be considered unavailable.",
          "description_html": "\u003cp\u003eDefines the \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e and other \u003cem\u003e\u003ccode\u003eparameters\u003c/code\u003e\u003c/em\u003e\nof a server.\nThe address can be specified as a domain name or IP address\nwith an obligatory port, or as a UNIX-domain socket path\nspecified after the “\u003ccode\u003eunix:\u003c/code\u003e” prefix.\nA domain name that resolves to several IP addresses defines\nmultiple servers at once.\u003c/p\u003e\n\n\u003cp\u003eThe following parameters can be defined:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eweight\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the weight of the server, by default, 1.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emax_conns\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003elimits the maximum \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e of simultaneous\nconnections to the proxied server (1.11.5).\nDefault value is zero, meaning there is no limit.\nIf the server group does not reside in the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#zone\" target=\"_blank\"\u003eshared memory\u003c/a\u003e,\nthe limitation works per each worker process.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.11.5, this parameter was available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003emax_fails\u003c/code\u003e=\u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the number of unsuccessful attempts to communicate with the server\nthat should happen in the duration set by the \u003ccode\u003efail_timeout\u003c/code\u003e\nparameter to consider the server unavailable for a duration also set by the\n\u003ccode\u003efail_timeout\u003c/code\u003e parameter.\nBy default, the number of unsuccessful attempts is set to 1.\nThe zero value disables the accounting of attempts.\nHere, an unsuccessful attempt is an error or timeout\nwhile establishing a connection with the server.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003efail_timeout\u003c/code\u003e=\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003ethe time during which the specified number of unsuccessful attempts to\ncommunicate with the server should happen to consider the server unavailable;\u003c/li\u003e\n\u003cli\u003eand the period of time the server will be considered unavailable.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBy default, the parameter is set to 10 seconds.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003ebackup\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003emarks the server as a backup server.\nConnections to the backup server will be passed\nwhen the primary servers are unavailable.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe parameter cannot be used along with the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#hash\" target=\"_blank\"\u003e\u003ccode\u003ehash\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#random\" target=\"_blank\"\u003e\u003ccode\u003erandom\u003c/code\u003e\u003c/a\u003e load balancing methods.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003edown\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003emarks the server as permanently unavailable.\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eAdditionally,\nthe following parameters are available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eresolve\u003c/code\u003e\u003c/p\u003e\n\n\u003cp\u003emonitors changes of the IP addresses\nthat correspond to a domain name of the server,\nand automatically modifies the upstream configuration\nwithout the need of restarting nginx.\nThe server group must reside in the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#zone\" target=\"_blank\"\u003eshared memory\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eIn order for this parameter to work,\nthe \u003ccode\u003eresolver\u003c/code\u003e directive\nmust be specified in the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver\" target=\"_blank\"\u003estream\u003c/a\u003e block\nor in the corresponding \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#resolver\" target=\"_blank\"\u003eupstream\u003c/a\u003e block.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eservice\u003c/code\u003e=\u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003eenables resolving of DNS\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2782\" target=\"_blank\"\u003eSRV\u003c/a\u003e\nrecords and sets the service \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e (1.9.13).\nIn order for this parameter to work, it is necessary to specify\nthe \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#resolve\" target=\"_blank\"\u003e\u003ccode\u003eresolve\u003c/code\u003e\u003c/a\u003e parameter for the server\nand specify a hostname without a port number.\u003c/p\u003e\n\n\u003cp\u003eIf the service name does not contain a dot (“\u003ccode\u003e.\u003c/code\u003e”), then\nthe \u003ca href=\"https://datatracker.ietf.org/doc/html/rfc2782\" target=\"_blank\"\u003eRFC\u003c/a\u003e-compliant name\nis constructed\nand the TCP protocol is added to the service prefix.\nFor example, to look up the\n\u003ccode\u003e_http._tcp.backend.example.com\u003c/code\u003e SRV record,\nit is necessary to specify the directive:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver backend.example.com service=http resolve;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf the service name contains one or more dots, then the name is constructed\nby joining the service prefix and the server name.\nFor example, to look up the \u003ccode\u003e_http._tcp.backend.example.com\u003c/code\u003e\nand \u003ccode\u003eserver1.backend.example.com\u003c/code\u003e SRV records,\nit is necessary to specify the directives:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eserver backend.example.com service=_http._tcp resolve;\nserver example.com service=server1.backend resolve;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHighest-priority SRV records\n(records with the same lowest-number priority value)\nare resolved as primary servers,\nthe rest of SRV records are resolved as backup servers.\nIf the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#backup\" target=\"_blank\"\u003e\u003ccode\u003ebackup\u003c/code\u003e\u003c/a\u003e parameter is specified for the server,\nhigh-priority SRV records are resolved as backup servers,\nthe rest of SRV records are ignored.\u003c/p\u003e\u003c/li\u003e\n\n\u003cli\u003e\u003cp\u003e\u003ccode\u003eslow_start\u003c/code\u003e=\u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e\u003c/p\u003e\n\n\u003cp\u003esets the \u003cem\u003e\u003ccode\u003etime\u003c/code\u003e\u003c/em\u003e during which the server will recover its weight\nfrom zero to a nominal value, when unhealthy server becomes\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_hc_module.html#health_check\" target=\"_blank\"\u003ehealthy\u003c/a\u003e,\nor when the server becomes available after a period of time\nit was considered \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#fail_timeout\" target=\"_blank\"\u003eunavailable\u003c/a\u003e.\nDefault value is zero, i.e. slow start is disabled.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe parameter cannot be used along with the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#hash\" target=\"_blank\"\u003e\u003ccode\u003ehash\u003c/code\u003e\u003c/a\u003e and \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#random\" target=\"_blank\"\u003e\u003ccode\u003erandom\u003c/code\u003e\u003c/a\u003e load balancing methods.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eIf there is only a single server in a group, \u003ccode\u003emax_fails\u003c/code\u003e,\n\u003ccode\u003efail_timeout\u003c/code\u003e and \u003ccode\u003eslow_start\u003c/code\u003e parameters\nare ignored, and such a server will never be considered unavailable.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "zone",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`name`* [*`size`*]"
          ],
          "isBlock": false,
          "description_md": "Defines the *`name`* and *`size`* of the shared\nmemory zone that keeps the group’s configuration and run-time state that are\nshared between worker processes.\nSeveral groups may share the same zone.\nIn this case, it is enough to specify the *`size`* only once.\n\nAdditionally,\nas part of our [commercial subscription](https://nginx.com/products/),\nsuch groups allow changing the group membership\nor modifying the settings of a particular server\nwithout the need of restarting nginx.\nThe configuration is accessible via the\n[API](https://nginx.org/en/docs/http/ngx_http_api_module.html) module (1.13.3).\n\u003e Prior to version 1.13.3,\n\u003e the configuration was accessible only via a special location\n\u003e handled by\n\u003e [`upstream_conf`](https://nginx.org/en/docs/http/ngx_http_upstream_conf_module.html#upstream_conf).",
          "description_html": "\u003cp\u003eDefines the \u003cem\u003e\u003ccode\u003ename\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the shared\nmemory zone that keeps the group’s configuration and run-time state that are\nshared between worker processes.\nSeveral groups may share the same zone.\nIn this case, it is enough to specify the \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e only once.\u003c/p\u003e\n\n\u003cp\u003eAdditionally,\nas part of our \u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e,\nsuch groups allow changing the group membership\nor modifying the settings of a particular server\nwithout the need of restarting nginx.\nThe configuration is accessible via the\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html\" target=\"_blank\"\u003eAPI\u003c/a\u003e module (1.13.3).\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.13.3,\nthe configuration was accessible only via a special location\nhandled by\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_upstream_conf_module.html#upstream_conf\" target=\"_blank\"\u003e\u003ccode\u003eupstream_conf\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "state",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* that keeps the state\nof the dynamically configurable group.\n\nExamples:\n```\nstate /var/lib/nginx/state/servers.conf; # path for Linux\nstate /var/db/nginx/state/servers.conf;  # path for FreeBSD\n```\n\nThe state is currently limited to the list of servers with their parameters.\nThe file is read when parsing the configuration and is updated each time\nthe upstream configuration is\n[changed](https://nginx.org/en/docs/http/ngx_http_api_module.html#stream_upstreams_stream_upstream_name_servers_).\nChanging the file content directly should be avoided.\nThe directive cannot be used\nalong with the [`server`](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#server) directive.\n\n\u003e Changes made during\n\u003e [configuration reload](https://nginx.org/en/docs/control.html#reconfiguration)\n\u003e or [binary upgrade](https://nginx.org/en/docs/control.html#upgrade)\n\u003e can be lost.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e that keeps the state\nof the dynamically configurable group.\u003c/p\u003e\n\n\u003cp\u003eExamples:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003estate /var/lib/nginx/state/servers.conf; # path for Linux\nstate /var/db/nginx/state/servers.conf;  # path for FreeBSD\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe state is currently limited to the list of servers with their parameters.\nThe file is read when parsing the configuration and is updated each time\nthe upstream configuration is\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#stream_upstreams_stream_upstream_name_servers_\" target=\"_blank\"\u003echanged\u003c/a\u003e.\nChanging the file content directly should be avoided.\nThe directive cannot be used\nalong with the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#server\" target=\"_blank\"\u003e\u003ccode\u003eserver\u003c/code\u003e\u003c/a\u003e directive.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eChanges made during\n\u003ca href=\"https://nginx.org/en/docs/control.html#reconfiguration\" target=\"_blank\"\u003econfiguration reload\u003c/a\u003e\nor \u003ca href=\"https://nginx.org/en/docs/control.html#upgrade\" target=\"_blank\"\u003ebinary upgrade\u003c/a\u003e\ncan be lost.\u003c/p\u003e\n\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "hash",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`key`* [`consistent`]"
          ],
          "isBlock": false,
          "description_md": "Specifies a load balancing method for a server group\nwhere the client-server mapping is based on the hashed *`key`* value.\nThe *`key`* can contain text, variables,\nand their combinations (1.11.2).\nUsage example:\n```\nhash $remote_addr;\n```\nNote that adding or removing a server from the group\nmay result in remapping most of the keys to different servers.\nThe method is compatible with the\n[Cache::Memcached](https://metacpan.org/pod/Cache::Memcached)\nPerl library.\n\nIf the `consistent` parameter is specified,\nthe [ketama](https://www.metabrew.com/article/libketama-consistent-hashing-algo-memcached-clients)\nconsistent hashing method will be used instead.\nThe method ensures that only a few keys\nwill be remapped to different servers\nwhen a server is added to or removed from the group.\nThis helps to achieve a higher cache hit ratio for caching servers.\nThe method is compatible with the\n[Cache::Memcached::Fast](https://metacpan.org/pod/Cache::Memcached::Fast)\nPerl library with the *`ketama_points`* parameter set to 160.",
          "description_html": "\u003cp\u003eSpecifies a load balancing method for a server group\nwhere the client-server mapping is based on the hashed \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e value.\nThe \u003cem\u003e\u003ccode\u003ekey\u003c/code\u003e\u003c/em\u003e can contain text, variables,\nand their combinations (1.11.2).\nUsage example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003ehash $remote_addr;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eNote that adding or removing a server from the group\nmay result in remapping most of the keys to different servers.\nThe method is compatible with the\n\u003ca href=\"https://metacpan.org/pod/Cache::Memcached\" target=\"_blank\"\u003eCache::Memcached\u003c/a\u003e\nPerl library.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003econsistent\u003c/code\u003e parameter is specified,\nthe \u003ca href=\"https://www.metabrew.com/article/libketama-consistent-hashing-algo-memcached-clients\" target=\"_blank\"\u003eketama\u003c/a\u003e\nconsistent hashing method will be used instead.\nThe method ensures that only a few keys\nwill be remapped to different servers\nwhen a server is added to or removed from the group.\nThis helps to achieve a higher cache hit ratio for caching servers.\nThe method is compatible with the\n\u003ca href=\"https://metacpan.org/pod/Cache::Memcached::Fast\" target=\"_blank\"\u003eCache::Memcached::Fast\u003c/a\u003e\nPerl library with the \u003cem\u003e\u003ccode\u003eketama_points\u003c/code\u003e\u003c/em\u003e parameter set to 160.\u003c/p\u003e\n"
        },
        {
          "name": "least_conn",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Specifies that a group should use a load balancing method where a connection\nis passed to the server with the least number of active connections,\ntaking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.",
          "description_html": "\u003cp\u003eSpecifies that a group should use a load balancing method where a connection\nis passed to the server with the least number of active connections,\ntaking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\u003c/p\u003e\n"
        },
        {
          "name": "least_time",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "`connect` | `first_byte` | `last_byte` [`inflight`]"
          ],
          "isBlock": false,
          "description_md": "Specifies that a group should use a load balancing method where a connection\nis passed to the server with the least average time and\nleast number of active connections, taking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\n\nIf the `connect` parameter is specified,\ntime to\n[connect](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_connect_time)\nto the upstream server is used.\nIf the `first_byte` parameter is specified,\ntime to receive the\n[first byte](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_first_byte_time) of data is used.\nIf the `last_byte` is specified,\ntime to receive the\n[last byte](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_session_time) of data is used.\nIf the `inflight` parameter is specified (1.11.6),\nincomplete connections are also taken into account.\n\u003e Prior to version 1.11.6,\n\u003e incomplete connections were taken into account by default.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eSpecifies that a group should use a load balancing method where a connection\nis passed to the server with the least average time and\nleast number of active connections, taking into account weights of servers.\nIf there are several such servers, they are tried in turn using a\nweighted round-robin balancing method.\u003c/p\u003e\n\n\u003cp\u003eIf the \u003ccode\u003econnect\u003c/code\u003e parameter is specified,\ntime to\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_connect_time\" target=\"_blank\"\u003econnect\u003c/a\u003e\nto the upstream server is used.\nIf the \u003ccode\u003efirst_byte\u003c/code\u003e parameter is specified,\ntime to receive the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_first_byte_time\" target=\"_blank\"\u003efirst byte\u003c/a\u003e of data is used.\nIf the \u003ccode\u003elast_byte\u003c/code\u003e is specified,\ntime to receive the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_session_time\" target=\"_blank\"\u003elast byte\u003c/a\u003e of data is used.\nIf the \u003ccode\u003einflight\u003c/code\u003e parameter is specified (1.11.6),\nincomplete connections are also taken into account.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003ePrior to version 1.11.6,\nincomplete connections were taken into account by default.\u003c/p\u003e\n\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "random",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "[`two` [*`method`*]]"
          ],
          "isBlock": false,
          "description_md": "Specifies that a group should use a load balancing method where a connection\nis passed to a randomly selected server, taking into account weights\nof servers.\n\nThe optional `two` parameter\ninstructs nginx to randomly select\n[two](https://homes.cs.washington.edu/~karlin/papers/balls.pdf)\nservers and then choose a server\nusing the specified `method`.\nThe default method is `least_conn`\nwhich passes a connection to a server\nwith the least number of active connections.\n\nThe `least_time` method passes a connection to a server\nwith the least average time and least number of active connections.\nIf `least_time=connect` parameter is specified,\ntime to\n[connect](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_connect_time)\nto the upstream server is used.\nIf `least_time=first_byte` parameter is specified,\ntime to receive the\n[first byte](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_first_byte_time) of data is used.\nIf `least_time=last_byte` is specified,\ntime to receive the\n[last byte](https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_session_time) of data is used.\n\u003e The `least_time` method is available as a part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eSpecifies that a group should use a load balancing method where a connection\nis passed to a randomly selected server, taking into account weights\nof servers.\u003c/p\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003etwo\u003c/code\u003e parameter\ninstructs nginx to randomly select\n\u003ca href=\"https://homes.cs.washington.edu/~karlin/papers/balls.pdf\" target=\"_blank\"\u003etwo\u003c/a\u003e\nservers and then choose a server\nusing the specified \u003ccode\u003emethod\u003c/code\u003e.\nThe default method is \u003ccode\u003eleast_conn\u003c/code\u003e\nwhich passes a connection to a server\nwith the least number of active connections.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eleast_time\u003c/code\u003e method passes a connection to a server\nwith the least average time and least number of active connections.\nIf \u003ccode\u003eleast_time=connect\u003c/code\u003e parameter is specified,\ntime to\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_connect_time\" target=\"_blank\"\u003econnect\u003c/a\u003e\nto the upstream server is used.\nIf \u003ccode\u003eleast_time=first_byte\u003c/code\u003e parameter is specified,\ntime to receive the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_first_byte_time\" target=\"_blank\"\u003efirst byte\u003c/a\u003e of data is used.\nIf \u003ccode\u003eleast_time=last_byte\u003c/code\u003e is specified,\ntime to receive the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html#var_upstream_session_time\" target=\"_blank\"\u003elast byte\u003c/a\u003e of data is used.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe \u003ccode\u003eleast_time\u003c/code\u003e method is available as a part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "resolver",
          "default": "",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`address`* ... [`valid`=*`time`*] [`ipv4`=`on`|`off`] [`ipv6`=`on`|`off`] [`status_zone`=*`zone`*]"
          ],
          "isBlock": false,
          "description_md": "Configures name servers used to resolve names of upstream servers\ninto addresses, for example:\n```\nresolver 127.0.0.1 [::1]:5353;\n```\nThe address can be specified as a domain name or IP address,\nwith an optional port.\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\n\nBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv4 or IPv6 addresses is not desired,\nthe `ipv4=off` (1.23.1) or\nthe `ipv6=off` parameter can be specified.\n\nBy default, nginx caches answers using the TTL value of a response.\nThe optional `valid` parameter allows overriding it:\n```\nresolver 127.0.0.1 [::1]:5353 valid=30s;\n```\n\u003e To prevent DNS spoofing, it is recommended\n\u003e configuring DNS servers in a properly secured trusted local network.\n\nThe optional `status_zone` parameter\nenables\n[collection](https://nginx.org/en/docs/http/ngx_http_api_module.html#resolvers_)\nof DNS server statistics of requests and responses\nin the specified *`zone`*.\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eConfigures name servers used to resolve names of upstream servers\ninto addresses, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver 127.0.0.1 [::1]:5353;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThe address can be specified as a domain name or IP address,\nwith an optional port.\nIf port is not specified, the port 53 is used.\nName servers are queried in a round-robin fashion.\u003c/p\u003e\n\n\u003cp\u003eBy default, nginx will look up both IPv4 and IPv6 addresses while resolving.\nIf looking up of IPv4 or IPv6 addresses is not desired,\nthe \u003ccode\u003eipv4=off\u003c/code\u003e (1.23.1) or\nthe \u003ccode\u003eipv6=off\u003c/code\u003e parameter can be specified.\u003c/p\u003e\n\n\u003cp\u003eBy default, nginx caches answers using the TTL value of a response.\nThe optional \u003ccode\u003evalid\u003c/code\u003e parameter allows overriding it:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver 127.0.0.1 [::1]:5353 valid=30s;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eTo prevent DNS spoofing, it is recommended\nconfiguring DNS servers in a properly secured trusted local network.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eThe optional \u003ccode\u003estatus_zone\u003c/code\u003e parameter\nenables\n\u003ca href=\"https://nginx.org/en/docs/http/ngx_http_api_module.html#resolvers_\" target=\"_blank\"\u003ecollection\u003c/a\u003e\nof DNS server statistics of requests and responses\nin the specified \u003cem\u003e\u003ccode\u003ezone\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "resolver_timeout",
          "default": "30s",
          "contexts": [
            "upstream"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Sets a timeout for name resolution, for example:\n```\nresolver_timeout 5s;\n```\n\n\u003e This directive is available as part of our\n\u003e [commercial subscription](https://nginx.com/products/).",
          "description_html": "\u003cp\u003eSets a timeout for name resolution, for example:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003eresolver_timeout 5s;\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThis directive is available as part of our\n\u003ca href=\"https://nginx.com/products/\" target=\"_blank\"\u003ecommercial subscription\u003c/a\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        }
      ]
    },
    {
      "id": "/en/docs/stream/ngx_stream_zone_sync_module.html",
      "name": "ngx_stream_zone_sync_module",
      "directives": [
        {
          "name": "zone_sync",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            ""
          ],
          "isBlock": false,
          "description_md": "Enables the synchronization of shared memory zones between cluster nodes.\nCluster nodes are defined using [`zone_sync_server`](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_server) directives.",
          "description_html": "\u003cp\u003eEnables the synchronization of shared memory zones between cluster nodes.\nCluster nodes are defined using \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_server\" target=\"_blank\"\u003e\u003ccode\u003ezone_sync_server\u003c/code\u003e\u003c/a\u003e directives.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_buffers",
          "default": "8 4k|8k",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`number`* *`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`number`* and *`size`* of the\nper-zone buffers used for pushing zone contents.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\n\n\u003e A single buffer must be large enough to hold any entry of each zone being\n\u003e synchronized.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e and \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of the\nper-zone buffers used for pushing zone contents.\nBy default, the buffer size is equal to one memory page.\nThis is either 4K or 8K, depending on a platform.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eA single buffer must be large enough to hold any entry of each zone being\nsynchronized.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "zone_sync_connect_retry_interval",
          "default": "1s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines an interval between connection attempts to another cluster node.",
          "description_html": "\u003cp\u003eDefines an interval between connection attempts to another cluster node.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_connect_timeout",
          "default": "5s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines a timeout for establishing a connection with another cluster node.",
          "description_html": "\u003cp\u003eDefines a timeout for establishing a connection with another cluster node.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_interval",
          "default": "1s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`time`*"
          ],
          "isBlock": false,
          "description_md": "Defines an interval for polling updates in a shared memory zone.",
          "description_html": "\u003cp\u003eDefines an interval for polling updates in a shared memory zone.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_recv_buffer_size",
          "default": "4k|8k",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`size`*"
          ],
          "isBlock": false,
          "description_md": "Sets *`size`* of a per-connection receive buffer used to parse\nincoming stream of synchronization messages.\nThe buffer size must be equal or greater than one of the\n[`zone_sync_buffers`](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_buffers).\nBy default, the buffer size is equal to\n[zone_sync_buffers](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_buffers) *`size`*\nmultiplied by *`number`*.",
          "description_html": "\u003cp\u003eSets \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e of a per-connection receive buffer used to parse\nincoming stream of synchronization messages.\nThe buffer size must be equal or greater than one of the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_buffers\" target=\"_blank\"\u003e\u003ccode\u003ezone_sync_buffers\u003c/code\u003e\u003c/a\u003e.\nBy default, the buffer size is equal to\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_buffers\" target=\"_blank\"\u003ezone_sync_buffers\u003c/a\u003e \u003cem\u003e\u003ccode\u003esize\u003c/code\u003e\u003c/em\u003e\nmultiplied by \u003cem\u003e\u003ccode\u003enumber\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_server",
          "default": "",
          "contexts": [
            "server"
          ],
          "syntax": [
            "*`address`* [`resolve`]"
          ],
          "isBlock": false,
          "description_md": "Defines the *`address`* of a cluster node.\nThe address can be specified as a domain name or IP address\nwith a mandatory port, or as a UNIX-domain socket path\nspecified after the “`unix:`” prefix.\nA domain name that resolves to several IP addresses defines\nmultiple nodes at once.\n\nThe `resolve` parameter instructs nginx to monitor\nchanges of the IP addresses that correspond to a domain name of the node\nand automatically modify the configuration\nwithout the need of restarting nginx.\n\nCluster nodes are specified either dynamically as a single\n`zone_sync_server` directive with\nthe `resolve` parameter, or statically as a series of several\ndirectives without the parameter.\n\u003e Each cluster node should be specified only once.\n\n\u003e All cluster nodes should use the same configuration.\n\nIn order for the `resolve` parameter to work,\nthe [`resolver`](https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver) directive\nmust be specified in the\n[`stream`](https://nginx.org/en/docs/stream/ngx_stream_core_module.html#stream) block.\nExample:\n```\nstream {\n    resolver 10.0.0.1;\n\n    server {\n        zone_sync;\n        zone_sync_server cluster.example.com:12345 resolve;\n        ...\n    }\n}\n```",
          "description_html": "\u003cp\u003eDefines the \u003cem\u003e\u003ccode\u003eaddress\u003c/code\u003e\u003c/em\u003e of a cluster node.\nThe address can be specified as a domain name or IP address\nwith a mandatory port, or as a UNIX-domain socket path\nspecified after the “\u003ccode\u003eunix:\u003c/code\u003e” prefix.\nA domain name that resolves to several IP addresses defines\nmultiple nodes at once.\u003c/p\u003e\n\n\u003cp\u003eThe \u003ccode\u003eresolve\u003c/code\u003e parameter instructs nginx to monitor\nchanges of the IP addresses that correspond to a domain name of the node\nand automatically modify the configuration\nwithout the need of restarting nginx.\u003c/p\u003e\n\n\u003cp\u003eCluster nodes are specified either dynamically as a single\n\u003ccode\u003ezone_sync_server\u003c/code\u003e directive with\nthe \u003ccode\u003eresolve\u003c/code\u003e parameter, or statically as a series of several\ndirectives without the parameter.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eEach cluster node should be specified only once.\u003c/p\u003e\n\n\u003cp\u003eAll cluster nodes should use the same configuration.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eIn order for the \u003ccode\u003eresolve\u003c/code\u003e parameter to work,\nthe \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#resolver\" target=\"_blank\"\u003e\u003ccode\u003eresolver\u003c/code\u003e\u003c/a\u003e directive\nmust be specified in the\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_core_module.html#stream\" target=\"_blank\"\u003e\u003ccode\u003estream\u003c/code\u003e\u003c/a\u003e block.\nExample:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode\u003estream {\n    resolver 10.0.0.1;\n\n    server {\n        zone_sync;\n        zone_sync_server cluster.example.com:12345 resolve;\n        ...\n    }\n}\n\u003c/code\u003e\u003c/pre\u003e\n"
        },
        {
          "name": "zone_sync_ssl",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables the SSL/TLS protocol for connections to another cluster server.",
          "description_html": "\u003cp\u003eEnables the SSL/TLS protocol for connections to another cluster server.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_certificate",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the certificate in the PEM format\nused for authentication to another cluster server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the certificate in the PEM format\nused for authentication to another cluster server.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_certificate_key",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with the secret key in the PEM format\nused for authentication to another cluster server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with the secret key in the PEM format\nused for authentication to another cluster server.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_ciphers",
          "default": "DEFAULT",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`ciphers`*"
          ],
          "isBlock": false,
          "description_md": "Specifies the enabled ciphers for connections to another cluster server.\nThe ciphers are specified in the format understood by the OpenSSL library.\n\nThe full list can be viewed using the\n“`openssl ciphers`” command.",
          "description_html": "\u003cp\u003eSpecifies the enabled ciphers for connections to another cluster server.\nThe ciphers are specified in the format understood by the OpenSSL library.\u003c/p\u003e\n\n\u003cp\u003eThe full list can be viewed using the\n“\u003ccode\u003eopenssl ciphers\u003c/code\u003e” command.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_conf_command",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`name`* *`value`*"
          ],
          "isBlock": false,
          "description_md": "Sets arbitrary OpenSSL configuration\n[commands](https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html)\nwhen establishing a connection with another cluster server.\n\u003e The directive is supported when using OpenSSL 1.0.2 or higher.\n\nSeveral `zone_sync_ssl_conf_command` directives\ncan be specified on the same level.\nThese directives are inherited from the previous configuration level\nif and only if there are\nno `zone_sync_ssl_conf_command` directives\ndefined on the current level.\n\n\u003e Note that configuring OpenSSL directly\n\u003e might result in unexpected behavior.",
          "description_html": "\u003cp\u003eSets arbitrary OpenSSL configuration\n\u003ca href=\"https://www.openssl.org/docs/man1.1.1/man3/SSL_CONF_cmd.html\" target=\"_blank\"\u003ecommands\u003c/a\u003e\nwhen establishing a connection with another cluster server.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eThe directive is supported when using OpenSSL 1.0.2 or higher.\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eSeveral \u003ccode\u003ezone_sync_ssl_conf_command\u003c/code\u003e directives\ncan be specified on the same level.\nThese directives are inherited from the previous configuration level\nif and only if there are\nno \u003ccode\u003ezone_sync_ssl_conf_command\u003c/code\u003e directives\ndefined on the current level.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eNote that configuring OpenSSL directly\nmight result in unexpected behavior.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "zone_sync_ssl_crl",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with revoked certificates (CRL)\nin the PEM format used to [verify](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify)\nthe certificate of another cluster server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with revoked certificates (CRL)\nin the PEM format used to \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of another cluster server.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_name",
          "default": "host from zone_sync_server",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`name`*"
          ],
          "isBlock": false,
          "description_md": "Allows overriding the server name used to\n[verify](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify)\nthe certificate of a cluster server and to be\n[passed through SNI](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_server_name)\nwhen establishing a connection with the cluster server.\n\nBy default, the host part of the [`zone_sync_server`](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_server) address is used,\nor resolved IP address if the [`resolve`](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#resolve) parameter is specified.",
          "description_html": "\u003cp\u003eAllows overriding the server name used to\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of a cluster server and to be\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_server_name\" target=\"_blank\"\u003epassed through SNI\u003c/a\u003e\nwhen establishing a connection with the cluster server.\u003c/p\u003e\n\n\u003cp\u003eBy default, the host part of the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_server\" target=\"_blank\"\u003e\u003ccode\u003ezone_sync_server\u003c/code\u003e\u003c/a\u003e address is used,\nor resolved IP address if the \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#resolve\" target=\"_blank\"\u003e\u003ccode\u003eresolve\u003c/code\u003e\u003c/a\u003e parameter is specified.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_password_file",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with passphrases for\n[secret keys](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_certificate_key)\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with passphrases for\n\u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_certificate_key\" target=\"_blank\"\u003esecret keys\u003c/a\u003e\nwhere each passphrase is specified on a separate line.\nPassphrases are tried in turn when loading the key.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_protocols",
          "default": "TLSv1 TLSv1.1 TLSv1.2",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "[`SSLv2`] [`SSLv3`] [`TLSv1`] [`TLSv1.1`] [`TLSv1.2`] [`TLSv1.3`]"
          ],
          "isBlock": false,
          "description_md": "Enables the specified protocols for connections to another cluster server.",
          "description_html": "\u003cp\u003eEnables the specified protocols for connections to another cluster server.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_server_name",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables passing of the server name through\n[TLS Server Name Indication extension](http://en.wikipedia.org/wiki/Server_Name_Indication) (SNI, RFC 6066)\nwhen establishing a connection with another cluster server.",
          "description_html": "\u003cp\u003eEnables or disables passing of the server name through\n\u003ca href=\"http://en.wikipedia.org/wiki/Server_Name_Indication\" target=\"_blank\"\u003eTLS Server Name Indication extension\u003c/a\u003e (SNI, RFC 6066)\nwhen establishing a connection with another cluster server.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_trusted_certificate",
          "default": "",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`file`*"
          ],
          "isBlock": false,
          "description_md": "Specifies a *`file`* with trusted CA certificates in the PEM format\nused to [verify](https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify)\nthe certificate of another cluster server.",
          "description_html": "\u003cp\u003eSpecifies a \u003cem\u003e\u003ccode\u003efile\u003c/code\u003e\u003c/em\u003e with trusted CA certificates in the PEM format\nused to \u003ca href=\"https://nginx.org/en/docs/stream/ngx_stream_zone_sync_module.html#zone_sync_ssl_verify\" target=\"_blank\"\u003everify\u003c/a\u003e\nthe certificate of another cluster server.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_verify",
          "default": "off",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Enables or disables verification of another cluster server certificate.",
          "description_html": "\u003cp\u003eEnables or disables verification of another cluster server certificate.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_ssl_verify_depth",
          "default": "1",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`number`*"
          ],
          "isBlock": false,
          "description_md": "Sets the verification depth in another cluster server certificates chain.",
          "description_html": "\u003cp\u003eSets the verification depth in another cluster server certificates chain.\u003c/p\u003e\n"
        },
        {
          "name": "zone_sync_timeout",
          "default": "5s",
          "contexts": [
            "stream",
            "server"
          ],
          "syntax": [
            "*`timeout`*"
          ],
          "isBlock": false,
          "description_md": "Sets the *`timeout`* between two successive\nread or write operations on connection to another cluster node.\nIf no data is transmitted within this time, the connection is closed.",
          "description_html": "\u003cp\u003eSets the \u003cem\u003e\u003ccode\u003etimeout\u003c/code\u003e\u003c/em\u003e between two successive\nread or write operations on connection to another cluster node.\nIf no data is transmitted within this time, the connection is closed.\u003c/p\u003e\n"
        }
      ]
    },
    {
      "id": "/ru/docs/http/ngx_http_v3_module.html",
      "name": "Модуль ngx_http_v3_module",
      "directives": [
        {
          "name": "http3",
          "default": "on",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Разрешает\nсогласование протокола\n[HTTP/3](https://datatracker.ietf.org/doc/html/rfc9114).",
          "description_html": "\u003cp\u003eРазрешает\nсогласование протокола\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc9114\" target=\"_blank\"\u003eHTTP/3\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "http3_hq",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Разрешает согласование протокола HTTP/0.9,\nиспользуемого в\n[функциональных тестах QUIC](https://github.com/marten-seemann/quic-interop-runner).",
          "description_html": "\u003cp\u003eРазрешает согласование протокола HTTP/0.9,\nиспользуемого в\n\u003ca href=\"https://github.com/marten-seemann/quic-interop-runner\" target=\"_blank\"\u003eфункциональных тестах QUIC\u003c/a\u003e.\u003c/p\u003e\n"
        },
        {
          "name": "http3_max_concurrent_streams",
          "default": "128",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`число`*"
          ],
          "isBlock": false,
          "description_md": "Задаёт максимальное число параллельных HTTP/3-потоков\nв соединении.",
          "description_html": "\u003cp\u003eЗадаёт максимальное число параллельных HTTP/3-потоков\nв соединении.\u003c/p\u003e\n"
        },
        {
          "name": "http3_stream_buffer_size",
          "default": "64k",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`размер`*"
          ],
          "isBlock": false,
          "description_md": "Задаёт размер буфера, используемого для чтения и записи\nQUIC-потоков.",
          "description_html": "\u003cp\u003eЗадаёт размер буфера, используемого для чтения и записи\nQUIC-потоков.\u003c/p\u003e\n"
        },
        {
          "name": "quic_active_connection_id_limit",
          "default": "2",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`число`*"
          ],
          "isBlock": false,
          "description_md": "Устанавливает\nзначение транспортного параметра QUIC `active_connection_id_limit`.\nЭто максимальное значение ID соединений,\nвозможное для хранения на сервере.",
          "description_html": "\u003cp\u003eУстанавливает\nзначение транспортного параметра QUIC \u003ccode\u003eactive_connection_id_limit\u003c/code\u003e.\nЭто максимальное значение ID соединений,\nвозможное для хранения на сервере.\u003c/p\u003e\n"
        },
        {
          "name": "quic_bpf",
          "default": "off",
          "contexts": [
            "main"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Разрешает маршрутизацию пакетов QUIC при помощи\n[eBPF](https://ebpf.io/).\nЕсли маршрутизация включена, то обеспечивается поддержка миграции QUIC-соединений.\n\n\u003e Директива поддерживается только на Linux 5.7+.",
          "description_html": "\u003cp\u003eРазрешает маршрутизацию пакетов QUIC при помощи\n\u003ca href=\"https://ebpf.io/\" target=\"_blank\"\u003eeBPF\u003c/a\u003e.\nЕсли маршрутизация включена, то обеспечивается поддержка миграции QUIC-соединений.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eДиректива поддерживается только на Linux 5.7+.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "quic_gso",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Разрешает отправку оптимизированного пакетного режима\nпри помощи segmentation offloading.\n\n\u003e Оптимизированная отправка поддерживается только на Linux\n\u003e с поддержкой `UDP_SEGMENT`.",
          "description_html": "\u003cp\u003eРазрешает отправку оптимизированного пакетного режима\nпри помощи segmentation offloading.\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp\u003eОптимизированная отправка поддерживается только на Linux\nс поддержкой \u003ccode\u003eUDP_SEGMENT\u003c/code\u003e.\u003c/p\u003e\n\u003c/blockquote\u003e\n"
        },
        {
          "name": "quic_host_key",
          "default": "",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "*`файл`*"
          ],
          "isBlock": false,
          "description_md": "Задаёт *`файл`* с секретным ключом, применяемым при шифровании\nstateless reset и address validation токенов.\nПо умолчанию создаётся случайный ключ при каждой перезагрузке.\nТокены, созданные при помощи старых ключей, не принимаются.",
          "description_html": "\u003cp\u003eЗадаёт \u003cem\u003e\u003ccode\u003eфайл\u003c/code\u003e\u003c/em\u003e с секретным ключом, применяемым при шифровании\nstateless reset и address validation токенов.\nПо умолчанию создаётся случайный ключ при каждой перезагрузке.\nТокены, созданные при помощи старых ключей, не принимаются.\u003c/p\u003e\n"
        },
        {
          "name": "quic_retry",
          "default": "off",
          "contexts": [
            "http",
            "server"
          ],
          "syntax": [
            "`on` | `off`"
          ],
          "isBlock": false,
          "description_md": "Разрешает функциональность\n[QUIC Address Validation](https://datatracker.ietf.org/doc/html/rfc9000#name-address-validation),\nв том числе отправку нового токена в `Retry`-пакете\nили `NEW_TOKEN` frame\nи\nвалидацию токена, полученного в `Initial`-пакете.",
          "description_html": "\u003cp\u003eРазрешает функциональность\n\u003ca href=\"https://datatracker.ietf.org/doc/html/rfc9000#name-address-validation\" target=\"_blank\"\u003eQUIC Address Validation\u003c/a\u003e,\nв том числе отправку нового токена в \u003ccode\u003eRetry\u003c/code\u003e-пакете\nили \u003ccode\u003eNEW_TOKEN\u003c/code\u003e frame\nи\nвалидацию токена, полученного в \u003ccode\u003eInitial\u003c/code\u003e-пакете.\u003c/p\u003e\n"
        }
      ]
    }
  ],
  "version": "http://hg.nginx.org/nginx.org/rev/537b98ec3c83"
}
